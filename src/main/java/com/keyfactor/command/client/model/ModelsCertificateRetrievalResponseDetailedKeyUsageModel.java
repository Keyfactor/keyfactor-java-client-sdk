/*
 * Keyfactor-v1
 * This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keyfactor.command.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.keyfactor.command.client.JSON;

/**
 * ModelsCertificateRetrievalResponseDetailedKeyUsageModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-08T11:48:36.483-07:00[America/Phoenix]")
public class ModelsCertificateRetrievalResponseDetailedKeyUsageModel {
  public static final String SERIALIZED_NAME_CRL_SIGN = "CrlSign";
  @SerializedName(SERIALIZED_NAME_CRL_SIGN)
  private Boolean crlSign;

  public static final String SERIALIZED_NAME_DATA_ENCIPHERMENT = "DataEncipherment";
  @SerializedName(SERIALIZED_NAME_DATA_ENCIPHERMENT)
  private Boolean dataEncipherment;

  public static final String SERIALIZED_NAME_DECIPHER_ONLY = "DecipherOnly";
  @SerializedName(SERIALIZED_NAME_DECIPHER_ONLY)
  private Boolean decipherOnly;

  public static final String SERIALIZED_NAME_DIGITAL_SIGNATURE = "DigitalSignature";
  @SerializedName(SERIALIZED_NAME_DIGITAL_SIGNATURE)
  private Boolean digitalSignature;

  public static final String SERIALIZED_NAME_ENCIPHER_ONLY = "EncipherOnly";
  @SerializedName(SERIALIZED_NAME_ENCIPHER_ONLY)
  private Boolean encipherOnly;

  public static final String SERIALIZED_NAME_KEY_AGREEMENT = "KeyAgreement";
  @SerializedName(SERIALIZED_NAME_KEY_AGREEMENT)
  private Boolean keyAgreement;

  public static final String SERIALIZED_NAME_KEY_CERT_SIGN = "KeyCertSign";
  @SerializedName(SERIALIZED_NAME_KEY_CERT_SIGN)
  private Boolean keyCertSign;

  public static final String SERIALIZED_NAME_KEY_ENCIPHERMENT = "KeyEncipherment";
  @SerializedName(SERIALIZED_NAME_KEY_ENCIPHERMENT)
  private Boolean keyEncipherment;

  public static final String SERIALIZED_NAME_NON_REPUDIATION = "NonRepudiation";
  @SerializedName(SERIALIZED_NAME_NON_REPUDIATION)
  private Boolean nonRepudiation;

  public static final String SERIALIZED_NAME_HEX_CODE = "HexCode";
  @SerializedName(SERIALIZED_NAME_HEX_CODE)
  private String hexCode;

  public ModelsCertificateRetrievalResponseDetailedKeyUsageModel() {
  }

  public ModelsCertificateRetrievalResponseDetailedKeyUsageModel crlSign(Boolean crlSign) {
    
    this.crlSign = crlSign;
    return this;
  }

   /**
   * Get crlSign
   * @return crlSign
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCrlSign() {
    return crlSign;
  }


  public void setCrlSign(Boolean crlSign) {
    this.crlSign = crlSign;
  }


  public ModelsCertificateRetrievalResponseDetailedKeyUsageModel dataEncipherment(Boolean dataEncipherment) {
    
    this.dataEncipherment = dataEncipherment;
    return this;
  }

   /**
   * Get dataEncipherment
   * @return dataEncipherment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDataEncipherment() {
    return dataEncipherment;
  }


  public void setDataEncipherment(Boolean dataEncipherment) {
    this.dataEncipherment = dataEncipherment;
  }


  public ModelsCertificateRetrievalResponseDetailedKeyUsageModel decipherOnly(Boolean decipherOnly) {
    
    this.decipherOnly = decipherOnly;
    return this;
  }

   /**
   * Get decipherOnly
   * @return decipherOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDecipherOnly() {
    return decipherOnly;
  }


  public void setDecipherOnly(Boolean decipherOnly) {
    this.decipherOnly = decipherOnly;
  }


  public ModelsCertificateRetrievalResponseDetailedKeyUsageModel digitalSignature(Boolean digitalSignature) {
    
    this.digitalSignature = digitalSignature;
    return this;
  }

   /**
   * Get digitalSignature
   * @return digitalSignature
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDigitalSignature() {
    return digitalSignature;
  }


  public void setDigitalSignature(Boolean digitalSignature) {
    this.digitalSignature = digitalSignature;
  }


  public ModelsCertificateRetrievalResponseDetailedKeyUsageModel encipherOnly(Boolean encipherOnly) {
    
    this.encipherOnly = encipherOnly;
    return this;
  }

   /**
   * Get encipherOnly
   * @return encipherOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getEncipherOnly() {
    return encipherOnly;
  }


  public void setEncipherOnly(Boolean encipherOnly) {
    this.encipherOnly = encipherOnly;
  }


  public ModelsCertificateRetrievalResponseDetailedKeyUsageModel keyAgreement(Boolean keyAgreement) {
    
    this.keyAgreement = keyAgreement;
    return this;
  }

   /**
   * Get keyAgreement
   * @return keyAgreement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getKeyAgreement() {
    return keyAgreement;
  }


  public void setKeyAgreement(Boolean keyAgreement) {
    this.keyAgreement = keyAgreement;
  }


  public ModelsCertificateRetrievalResponseDetailedKeyUsageModel keyCertSign(Boolean keyCertSign) {
    
    this.keyCertSign = keyCertSign;
    return this;
  }

   /**
   * Get keyCertSign
   * @return keyCertSign
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getKeyCertSign() {
    return keyCertSign;
  }


  public void setKeyCertSign(Boolean keyCertSign) {
    this.keyCertSign = keyCertSign;
  }


  public ModelsCertificateRetrievalResponseDetailedKeyUsageModel keyEncipherment(Boolean keyEncipherment) {
    
    this.keyEncipherment = keyEncipherment;
    return this;
  }

   /**
   * Get keyEncipherment
   * @return keyEncipherment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getKeyEncipherment() {
    return keyEncipherment;
  }


  public void setKeyEncipherment(Boolean keyEncipherment) {
    this.keyEncipherment = keyEncipherment;
  }


  public ModelsCertificateRetrievalResponseDetailedKeyUsageModel nonRepudiation(Boolean nonRepudiation) {
    
    this.nonRepudiation = nonRepudiation;
    return this;
  }

   /**
   * Get nonRepudiation
   * @return nonRepudiation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getNonRepudiation() {
    return nonRepudiation;
  }


  public void setNonRepudiation(Boolean nonRepudiation) {
    this.nonRepudiation = nonRepudiation;
  }


  public ModelsCertificateRetrievalResponseDetailedKeyUsageModel hexCode(String hexCode) {
    
    this.hexCode = hexCode;
    return this;
  }

   /**
   * Get hexCode
   * @return hexCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHexCode() {
    return hexCode;
  }


  public void setHexCode(String hexCode) {
    this.hexCode = hexCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelsCertificateRetrievalResponseDetailedKeyUsageModel modelsCertificateRetrievalResponseDetailedKeyUsageModel = (ModelsCertificateRetrievalResponseDetailedKeyUsageModel) o;
    return Objects.equals(this.crlSign, modelsCertificateRetrievalResponseDetailedKeyUsageModel.crlSign) &&
        Objects.equals(this.dataEncipherment, modelsCertificateRetrievalResponseDetailedKeyUsageModel.dataEncipherment) &&
        Objects.equals(this.decipherOnly, modelsCertificateRetrievalResponseDetailedKeyUsageModel.decipherOnly) &&
        Objects.equals(this.digitalSignature, modelsCertificateRetrievalResponseDetailedKeyUsageModel.digitalSignature) &&
        Objects.equals(this.encipherOnly, modelsCertificateRetrievalResponseDetailedKeyUsageModel.encipherOnly) &&
        Objects.equals(this.keyAgreement, modelsCertificateRetrievalResponseDetailedKeyUsageModel.keyAgreement) &&
        Objects.equals(this.keyCertSign, modelsCertificateRetrievalResponseDetailedKeyUsageModel.keyCertSign) &&
        Objects.equals(this.keyEncipherment, modelsCertificateRetrievalResponseDetailedKeyUsageModel.keyEncipherment) &&
        Objects.equals(this.nonRepudiation, modelsCertificateRetrievalResponseDetailedKeyUsageModel.nonRepudiation) &&
        Objects.equals(this.hexCode, modelsCertificateRetrievalResponseDetailedKeyUsageModel.hexCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(crlSign, dataEncipherment, decipherOnly, digitalSignature, encipherOnly, keyAgreement, keyCertSign, keyEncipherment, nonRepudiation, hexCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelsCertificateRetrievalResponseDetailedKeyUsageModel {\n");
    sb.append("    crlSign: ").append(toIndentedString(crlSign)).append("\n");
    sb.append("    dataEncipherment: ").append(toIndentedString(dataEncipherment)).append("\n");
    sb.append("    decipherOnly: ").append(toIndentedString(decipherOnly)).append("\n");
    sb.append("    digitalSignature: ").append(toIndentedString(digitalSignature)).append("\n");
    sb.append("    encipherOnly: ").append(toIndentedString(encipherOnly)).append("\n");
    sb.append("    keyAgreement: ").append(toIndentedString(keyAgreement)).append("\n");
    sb.append("    keyCertSign: ").append(toIndentedString(keyCertSign)).append("\n");
    sb.append("    keyEncipherment: ").append(toIndentedString(keyEncipherment)).append("\n");
    sb.append("    nonRepudiation: ").append(toIndentedString(nonRepudiation)).append("\n");
    sb.append("    hexCode: ").append(toIndentedString(hexCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CrlSign");
    openapiFields.add("DataEncipherment");
    openapiFields.add("DecipherOnly");
    openapiFields.add("DigitalSignature");
    openapiFields.add("EncipherOnly");
    openapiFields.add("KeyAgreement");
    openapiFields.add("KeyCertSign");
    openapiFields.add("KeyEncipherment");
    openapiFields.add("NonRepudiation");
    openapiFields.add("HexCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ModelsCertificateRetrievalResponseDetailedKeyUsageModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ModelsCertificateRetrievalResponseDetailedKeyUsageModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelsCertificateRetrievalResponseDetailedKeyUsageModel is not found in the empty JSON string", ModelsCertificateRetrievalResponseDetailedKeyUsageModel.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ModelsCertificateRetrievalResponseDetailedKeyUsageModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelsCertificateRetrievalResponseDetailedKeyUsageModel` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("HexCode") != null && !jsonObj.get("HexCode").isJsonNull()) && !jsonObj.get("HexCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `HexCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("HexCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelsCertificateRetrievalResponseDetailedKeyUsageModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelsCertificateRetrievalResponseDetailedKeyUsageModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelsCertificateRetrievalResponseDetailedKeyUsageModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelsCertificateRetrievalResponseDetailedKeyUsageModel.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelsCertificateRetrievalResponseDetailedKeyUsageModel>() {
           @Override
           public void write(JsonWriter out, ModelsCertificateRetrievalResponseDetailedKeyUsageModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelsCertificateRetrievalResponseDetailedKeyUsageModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModelsCertificateRetrievalResponseDetailedKeyUsageModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModelsCertificateRetrievalResponseDetailedKeyUsageModel
  * @throws IOException if the JSON string is invalid with respect to ModelsCertificateRetrievalResponseDetailedKeyUsageModel
  */
  public static ModelsCertificateRetrievalResponseDetailedKeyUsageModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelsCertificateRetrievalResponseDetailedKeyUsageModel.class);
  }

 /**
  * Convert an instance of ModelsCertificateRetrievalResponseDetailedKeyUsageModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

