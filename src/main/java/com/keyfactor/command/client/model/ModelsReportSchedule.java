/*
 * Keyfactor-v1
 * This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keyfactor.command.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.keyfactor.command.client.model.KeyfactorCommonSchedulingKeyfactorSchedule;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.keyfactor.command.client.JSON;

/**
 * ModelsReportSchedule
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-08T11:48:36.483-07:00[America/Phoenix]")
public class ModelsReportSchedule {
  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_SEND_REPORT = "SendReport";
  @SerializedName(SERIALIZED_NAME_SEND_REPORT)
  private Boolean sendReport;

  public static final String SERIALIZED_NAME_SAVE_REPORT = "SaveReport";
  @SerializedName(SERIALIZED_NAME_SAVE_REPORT)
  private Boolean saveReport;

  public static final String SERIALIZED_NAME_SAVE_REPORT_PATH = "SaveReportPath";
  @SerializedName(SERIALIZED_NAME_SAVE_REPORT_PATH)
  private String saveReportPath;

  public static final String SERIALIZED_NAME_REPORT_FORMAT = "ReportFormat";
  @SerializedName(SERIALIZED_NAME_REPORT_FORMAT)
  private String reportFormat;

  public static final String SERIALIZED_NAME_KEYFACTOR_SCHEDULE = "KeyfactorSchedule";
  @SerializedName(SERIALIZED_NAME_KEYFACTOR_SCHEDULE)
  private KeyfactorCommonSchedulingKeyfactorSchedule keyfactorSchedule;

  public static final String SERIALIZED_NAME_CERTIFICATE_COLLECTION_ID = "CertificateCollectionId";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_COLLECTION_ID)
  private Integer certificateCollectionId;

  public static final String SERIALIZED_NAME_EMAIL_RECIPIENTS = "EmailRecipients";
  @SerializedName(SERIALIZED_NAME_EMAIL_RECIPIENTS)
  private List<String> emailRecipients = null;

  public static final String SERIALIZED_NAME_RUNTIME_PARAMETERS = "RuntimeParameters";
  @SerializedName(SERIALIZED_NAME_RUNTIME_PARAMETERS)
  private Map<String, String> runtimeParameters = null;

  public ModelsReportSchedule() {
  }

  public ModelsReportSchedule id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public ModelsReportSchedule sendReport(Boolean sendReport) {
    
    this.sendReport = sendReport;
    return this;
  }

   /**
   * Get sendReport
   * @return sendReport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSendReport() {
    return sendReport;
  }


  public void setSendReport(Boolean sendReport) {
    this.sendReport = sendReport;
  }


  public ModelsReportSchedule saveReport(Boolean saveReport) {
    
    this.saveReport = saveReport;
    return this;
  }

   /**
   * Get saveReport
   * @return saveReport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSaveReport() {
    return saveReport;
  }


  public void setSaveReport(Boolean saveReport) {
    this.saveReport = saveReport;
  }


  public ModelsReportSchedule saveReportPath(String saveReportPath) {
    
    this.saveReportPath = saveReportPath;
    return this;
  }

   /**
   * Get saveReportPath
   * @return saveReportPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSaveReportPath() {
    return saveReportPath;
  }


  public void setSaveReportPath(String saveReportPath) {
    this.saveReportPath = saveReportPath;
  }


  public ModelsReportSchedule reportFormat(String reportFormat) {
    
    this.reportFormat = reportFormat;
    return this;
  }

   /**
   * Get reportFormat
   * @return reportFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReportFormat() {
    return reportFormat;
  }


  public void setReportFormat(String reportFormat) {
    this.reportFormat = reportFormat;
  }


  public ModelsReportSchedule keyfactorSchedule(KeyfactorCommonSchedulingKeyfactorSchedule keyfactorSchedule) {
    
    this.keyfactorSchedule = keyfactorSchedule;
    return this;
  }

   /**
   * Get keyfactorSchedule
   * @return keyfactorSchedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public KeyfactorCommonSchedulingKeyfactorSchedule getKeyfactorSchedule() {
    return keyfactorSchedule;
  }


  public void setKeyfactorSchedule(KeyfactorCommonSchedulingKeyfactorSchedule keyfactorSchedule) {
    this.keyfactorSchedule = keyfactorSchedule;
  }


  public ModelsReportSchedule certificateCollectionId(Integer certificateCollectionId) {
    
    this.certificateCollectionId = certificateCollectionId;
    return this;
  }

   /**
   * Get certificateCollectionId
   * @return certificateCollectionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCertificateCollectionId() {
    return certificateCollectionId;
  }


  public void setCertificateCollectionId(Integer certificateCollectionId) {
    this.certificateCollectionId = certificateCollectionId;
  }


  public ModelsReportSchedule emailRecipients(List<String> emailRecipients) {
    
    this.emailRecipients = emailRecipients;
    return this;
  }

  public ModelsReportSchedule addEmailRecipientsItem(String emailRecipientsItem) {
    if (this.emailRecipients == null) {
      this.emailRecipients = new ArrayList<>();
    }
    this.emailRecipients.add(emailRecipientsItem);
    return this;
  }

   /**
   * Get emailRecipients
   * @return emailRecipients
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getEmailRecipients() {
    return emailRecipients;
  }


  public void setEmailRecipients(List<String> emailRecipients) {
    this.emailRecipients = emailRecipients;
  }


  public ModelsReportSchedule runtimeParameters(Map<String, String> runtimeParameters) {
    
    this.runtimeParameters = runtimeParameters;
    return this;
  }

  public ModelsReportSchedule putRuntimeParametersItem(String key, String runtimeParametersItem) {
    if (this.runtimeParameters == null) {
      this.runtimeParameters = new HashMap<>();
    }
    this.runtimeParameters.put(key, runtimeParametersItem);
    return this;
  }

   /**
   * Get runtimeParameters
   * @return runtimeParameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getRuntimeParameters() {
    return runtimeParameters;
  }


  public void setRuntimeParameters(Map<String, String> runtimeParameters) {
    this.runtimeParameters = runtimeParameters;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelsReportSchedule modelsReportSchedule = (ModelsReportSchedule) o;
    return Objects.equals(this.id, modelsReportSchedule.id) &&
        Objects.equals(this.sendReport, modelsReportSchedule.sendReport) &&
        Objects.equals(this.saveReport, modelsReportSchedule.saveReport) &&
        Objects.equals(this.saveReportPath, modelsReportSchedule.saveReportPath) &&
        Objects.equals(this.reportFormat, modelsReportSchedule.reportFormat) &&
        Objects.equals(this.keyfactorSchedule, modelsReportSchedule.keyfactorSchedule) &&
        Objects.equals(this.certificateCollectionId, modelsReportSchedule.certificateCollectionId) &&
        Objects.equals(this.emailRecipients, modelsReportSchedule.emailRecipients) &&
        Objects.equals(this.runtimeParameters, modelsReportSchedule.runtimeParameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, sendReport, saveReport, saveReportPath, reportFormat, keyfactorSchedule, certificateCollectionId, emailRecipients, runtimeParameters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelsReportSchedule {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    sendReport: ").append(toIndentedString(sendReport)).append("\n");
    sb.append("    saveReport: ").append(toIndentedString(saveReport)).append("\n");
    sb.append("    saveReportPath: ").append(toIndentedString(saveReportPath)).append("\n");
    sb.append("    reportFormat: ").append(toIndentedString(reportFormat)).append("\n");
    sb.append("    keyfactorSchedule: ").append(toIndentedString(keyfactorSchedule)).append("\n");
    sb.append("    certificateCollectionId: ").append(toIndentedString(certificateCollectionId)).append("\n");
    sb.append("    emailRecipients: ").append(toIndentedString(emailRecipients)).append("\n");
    sb.append("    runtimeParameters: ").append(toIndentedString(runtimeParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Id");
    openapiFields.add("SendReport");
    openapiFields.add("SaveReport");
    openapiFields.add("SaveReportPath");
    openapiFields.add("ReportFormat");
    openapiFields.add("KeyfactorSchedule");
    openapiFields.add("CertificateCollectionId");
    openapiFields.add("EmailRecipients");
    openapiFields.add("RuntimeParameters");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ModelsReportSchedule
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ModelsReportSchedule.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelsReportSchedule is not found in the empty JSON string", ModelsReportSchedule.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ModelsReportSchedule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelsReportSchedule` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("SaveReportPath") != null && !jsonObj.get("SaveReportPath").isJsonNull()) && !jsonObj.get("SaveReportPath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SaveReportPath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SaveReportPath").toString()));
      }
      if ((jsonObj.get("ReportFormat") != null && !jsonObj.get("ReportFormat").isJsonNull()) && !jsonObj.get("ReportFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ReportFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ReportFormat").toString()));
      }
      // validate the optional field `KeyfactorSchedule`
      if (jsonObj.get("KeyfactorSchedule") != null && !jsonObj.get("KeyfactorSchedule").isJsonNull()) {
        KeyfactorCommonSchedulingKeyfactorSchedule.validateJsonObject(jsonObj.getAsJsonObject("KeyfactorSchedule"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("EmailRecipients") != null && !jsonObj.get("EmailRecipients").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `EmailRecipients` to be an array in the JSON string but got `%s`", jsonObj.get("EmailRecipients").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelsReportSchedule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelsReportSchedule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelsReportSchedule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelsReportSchedule.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelsReportSchedule>() {
           @Override
           public void write(JsonWriter out, ModelsReportSchedule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelsReportSchedule read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModelsReportSchedule given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModelsReportSchedule
  * @throws IOException if the JSON string is invalid with respect to ModelsReportSchedule
  */
  public static ModelsReportSchedule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelsReportSchedule.class);
  }

 /**
  * Convert an instance of ModelsReportSchedule to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

