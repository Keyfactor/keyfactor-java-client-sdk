/*
 * Keyfactor-v1
 * This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keyfactor.command.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.keyfactor.command.client.JSON;

/**
 * ModelsSSLEndpoint
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ModelsSSLEndpoint {
  public static final String SERIALIZED_NAME_ENDPOINT_ID = "EndpointId";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_ID)
  private UUID endpointId;

  public static final String SERIALIZED_NAME_NETWORK_ID = "NetworkId";
  @SerializedName(SERIALIZED_NAME_NETWORK_ID)
  private UUID networkId;

  public static final String SERIALIZED_NAME_LAST_HISTORY_ID = "LastHistoryId";
  @SerializedName(SERIALIZED_NAME_LAST_HISTORY_ID)
  private UUID lastHistoryId;

  public static final String SERIALIZED_NAME_IP_ADDRESS_BYTES = "IpAddressBytes";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS_BYTES)
  private byte[] ipAddressBytes;

  public static final String SERIALIZED_NAME_PORT = "Port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private Integer port;

  public static final String SERIALIZED_NAME_SN_I_NAME = "SNIName";
  @SerializedName(SERIALIZED_NAME_SN_I_NAME)
  private String snIName;

  public static final String SERIALIZED_NAME_ENABLE_MONITOR = "EnableMonitor";
  @SerializedName(SERIALIZED_NAME_ENABLE_MONITOR)
  private Boolean enableMonitor;

  public static final String SERIALIZED_NAME_REVIEWED = "Reviewed";
  @SerializedName(SERIALIZED_NAME_REVIEWED)
  private Boolean reviewed;

  public ModelsSSLEndpoint() {
  }

  public ModelsSSLEndpoint endpointId(UUID endpointId) {
    
    this.endpointId = endpointId;
    return this;
  }

   /**
   * Get endpointId
   * @return endpointId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getEndpointId() {
    return endpointId;
  }


  public void setEndpointId(UUID endpointId) {
    this.endpointId = endpointId;
  }


  public ModelsSSLEndpoint networkId(UUID networkId) {
    
    this.networkId = networkId;
    return this;
  }

   /**
   * Get networkId
   * @return networkId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getNetworkId() {
    return networkId;
  }


  public void setNetworkId(UUID networkId) {
    this.networkId = networkId;
  }


  public ModelsSSLEndpoint lastHistoryId(UUID lastHistoryId) {
    
    this.lastHistoryId = lastHistoryId;
    return this;
  }

   /**
   * Get lastHistoryId
   * @return lastHistoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getLastHistoryId() {
    return lastHistoryId;
  }


  public void setLastHistoryId(UUID lastHistoryId) {
    this.lastHistoryId = lastHistoryId;
  }


  public ModelsSSLEndpoint ipAddressBytes(byte[] ipAddressBytes) {
    
    this.ipAddressBytes = ipAddressBytes;
    return this;
  }

   /**
   * Get ipAddressBytes
   * @return ipAddressBytes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public byte[] getIpAddressBytes() {
    return ipAddressBytes;
  }


  public void setIpAddressBytes(byte[] ipAddressBytes) {
    this.ipAddressBytes = ipAddressBytes;
  }


  public ModelsSSLEndpoint port(Integer port) {
    
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPort() {
    return port;
  }


  public void setPort(Integer port) {
    this.port = port;
  }


  public ModelsSSLEndpoint snIName(String snIName) {
    
    this.snIName = snIName;
    return this;
  }

   /**
   * Get snIName
   * @return snIName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSnIName() {
    return snIName;
  }


  public void setSnIName(String snIName) {
    this.snIName = snIName;
  }


  public ModelsSSLEndpoint enableMonitor(Boolean enableMonitor) {
    
    this.enableMonitor = enableMonitor;
    return this;
  }

   /**
   * Get enableMonitor
   * @return enableMonitor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getEnableMonitor() {
    return enableMonitor;
  }


  public void setEnableMonitor(Boolean enableMonitor) {
    this.enableMonitor = enableMonitor;
  }


  public ModelsSSLEndpoint reviewed(Boolean reviewed) {
    
    this.reviewed = reviewed;
    return this;
  }

   /**
   * Get reviewed
   * @return reviewed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getReviewed() {
    return reviewed;
  }


  public void setReviewed(Boolean reviewed) {
    this.reviewed = reviewed;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelsSSLEndpoint modelsSSLEndpoint = (ModelsSSLEndpoint) o;
    return Objects.equals(this.endpointId, modelsSSLEndpoint.endpointId) &&
        Objects.equals(this.networkId, modelsSSLEndpoint.networkId) &&
        Objects.equals(this.lastHistoryId, modelsSSLEndpoint.lastHistoryId) &&
        Arrays.equals(this.ipAddressBytes, modelsSSLEndpoint.ipAddressBytes) &&
        Objects.equals(this.port, modelsSSLEndpoint.port) &&
        Objects.equals(this.snIName, modelsSSLEndpoint.snIName) &&
        Objects.equals(this.enableMonitor, modelsSSLEndpoint.enableMonitor) &&
        Objects.equals(this.reviewed, modelsSSLEndpoint.reviewed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endpointId, networkId, lastHistoryId, Arrays.hashCode(ipAddressBytes), port, snIName, enableMonitor, reviewed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelsSSLEndpoint {\n");
    sb.append("    endpointId: ").append(toIndentedString(endpointId)).append("\n");
    sb.append("    networkId: ").append(toIndentedString(networkId)).append("\n");
    sb.append("    lastHistoryId: ").append(toIndentedString(lastHistoryId)).append("\n");
    sb.append("    ipAddressBytes: ").append(toIndentedString(ipAddressBytes)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    snIName: ").append(toIndentedString(snIName)).append("\n");
    sb.append("    enableMonitor: ").append(toIndentedString(enableMonitor)).append("\n");
    sb.append("    reviewed: ").append(toIndentedString(reviewed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("EndpointId");
    openapiFields.add("NetworkId");
    openapiFields.add("LastHistoryId");
    openapiFields.add("IpAddressBytes");
    openapiFields.add("Port");
    openapiFields.add("SNIName");
    openapiFields.add("EnableMonitor");
    openapiFields.add("Reviewed");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ModelsSSLEndpoint
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ModelsSSLEndpoint.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelsSSLEndpoint is not found in the empty JSON string", ModelsSSLEndpoint.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ModelsSSLEndpoint.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelsSSLEndpoint` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("EndpointId") != null && !jsonObj.get("EndpointId").isJsonNull()) && !jsonObj.get("EndpointId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EndpointId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EndpointId").toString()));
      }
      if ((jsonObj.get("NetworkId") != null && !jsonObj.get("NetworkId").isJsonNull()) && !jsonObj.get("NetworkId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `NetworkId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("NetworkId").toString()));
      }
      if ((jsonObj.get("LastHistoryId") != null && !jsonObj.get("LastHistoryId").isJsonNull()) && !jsonObj.get("LastHistoryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LastHistoryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LastHistoryId").toString()));
      }
      if ((jsonObj.get("SNIName") != null && !jsonObj.get("SNIName").isJsonNull()) && !jsonObj.get("SNIName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SNIName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SNIName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelsSSLEndpoint.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelsSSLEndpoint' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelsSSLEndpoint> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelsSSLEndpoint.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelsSSLEndpoint>() {
           @Override
           public void write(JsonWriter out, ModelsSSLEndpoint value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelsSSLEndpoint read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModelsSSLEndpoint given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModelsSSLEndpoint
  * @throws IOException if the JSON string is invalid with respect to ModelsSSLEndpoint
  */
  public static ModelsSSLEndpoint fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelsSSLEndpoint.class);
  }

 /**
  * Convert an instance of ModelsSSLEndpoint to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

