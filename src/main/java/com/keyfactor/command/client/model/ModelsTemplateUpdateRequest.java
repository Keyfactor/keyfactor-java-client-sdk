/*
 * Keyfactor-v1
 * This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keyfactor.command.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.keyfactor.command.client.model.ModelsTemplateUpdateRequestTemplateDefaultModel;
import com.keyfactor.command.client.model.ModelsTemplateUpdateRequestTemplateEnrollmentFieldModel;
import com.keyfactor.command.client.model.ModelsTemplateUpdateRequestTemplateMetadataFieldModel;
import com.keyfactor.command.client.model.ModelsTemplateUpdateRequestTemplatePolicyModel;
import com.keyfactor.command.client.model.ModelsTemplateUpdateRequestTemplateRegexModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.keyfactor.command.client.JSON;

/**
 * ModelsTemplateUpdateRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-08T11:48:36.483-07:00[America/Phoenix]")
public class ModelsTemplateUpdateRequest {
  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_KEY_SIZE = "KeySize";
  @SerializedName(SERIALIZED_NAME_KEY_SIZE)
  private String keySize;

  public static final String SERIALIZED_NAME_KEY_TYPE = "KeyType";
  @SerializedName(SERIALIZED_NAME_KEY_TYPE)
  private String keyType;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "FriendlyName";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  /**
   * Gets or Sets keyRetention
   */
  @JsonAdapter(KeyRetentionEnum.Adapter.class)
  public enum KeyRetentionEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3);

    private Integer value;

    KeyRetentionEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static KeyRetentionEnum fromValue(Integer value) {
      for (KeyRetentionEnum b : KeyRetentionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<KeyRetentionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final KeyRetentionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public KeyRetentionEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return KeyRetentionEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_KEY_RETENTION = "KeyRetention";
  @SerializedName(SERIALIZED_NAME_KEY_RETENTION)
  private KeyRetentionEnum keyRetention;

  public static final String SERIALIZED_NAME_KEY_RETENTION_DAYS = "KeyRetentionDays";
  @SerializedName(SERIALIZED_NAME_KEY_RETENTION_DAYS)
  private Integer keyRetentionDays;

  public static final String SERIALIZED_NAME_KEY_ARCHIVAL = "KeyArchival";
  @SerializedName(SERIALIZED_NAME_KEY_ARCHIVAL)
  private Boolean keyArchival;

  public static final String SERIALIZED_NAME_ENROLLMENT_FIELDS = "EnrollmentFields";
  @SerializedName(SERIALIZED_NAME_ENROLLMENT_FIELDS)
  private List<ModelsTemplateUpdateRequestTemplateEnrollmentFieldModel> enrollmentFields = null;

  public static final String SERIALIZED_NAME_METADATA_FIELDS = "MetadataFields";
  @SerializedName(SERIALIZED_NAME_METADATA_FIELDS)
  private List<ModelsTemplateUpdateRequestTemplateMetadataFieldModel> metadataFields = null;

  /**
   * Gets or Sets allowedEnrollmentTypes
   */
  @JsonAdapter(AllowedEnrollmentTypesEnum.Adapter.class)
  public enum AllowedEnrollmentTypesEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_4(4);

    private Integer value;

    AllowedEnrollmentTypesEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AllowedEnrollmentTypesEnum fromValue(Integer value) {
      for (AllowedEnrollmentTypesEnum b : AllowedEnrollmentTypesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AllowedEnrollmentTypesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AllowedEnrollmentTypesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AllowedEnrollmentTypesEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return AllowedEnrollmentTypesEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ALLOWED_ENROLLMENT_TYPES = "AllowedEnrollmentTypes";
  @SerializedName(SERIALIZED_NAME_ALLOWED_ENROLLMENT_TYPES)
  private AllowedEnrollmentTypesEnum allowedEnrollmentTypes;

  public static final String SERIALIZED_NAME_TEMPLATE_REGEXES = "TemplateRegexes";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_REGEXES)
  private List<ModelsTemplateUpdateRequestTemplateRegexModel> templateRegexes = null;

  public static final String SERIALIZED_NAME_TEMPLATE_DEFAULTS = "TemplateDefaults";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_DEFAULTS)
  private List<ModelsTemplateUpdateRequestTemplateDefaultModel> templateDefaults = null;

  public static final String SERIALIZED_NAME_TEMPLATE_POLICY = "TemplatePolicy";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_POLICY)
  private ModelsTemplateUpdateRequestTemplatePolicyModel templatePolicy;

  public static final String SERIALIZED_NAME_USE_ALLOWED_REQUESTERS = "UseAllowedRequesters";
  @SerializedName(SERIALIZED_NAME_USE_ALLOWED_REQUESTERS)
  private Boolean useAllowedRequesters;

  public static final String SERIALIZED_NAME_ALLOWED_REQUESTERS = "AllowedRequesters";
  @SerializedName(SERIALIZED_NAME_ALLOWED_REQUESTERS)
  private List<String> allowedRequesters = null;

  public static final String SERIALIZED_NAME_REQUIRES_APPROVAL = "RequiresApproval";
  @SerializedName(SERIALIZED_NAME_REQUIRES_APPROVAL)
  private Boolean requiresApproval;

  public static final String SERIALIZED_NAME_KEY_USAGE = "KeyUsage";
  @SerializedName(SERIALIZED_NAME_KEY_USAGE)
  private Integer keyUsage;

  public ModelsTemplateUpdateRequest() {
  }

  public ModelsTemplateUpdateRequest id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public ModelsTemplateUpdateRequest keySize(String keySize) {
    
    this.keySize = keySize;
    return this;
  }

   /**
   * Get keySize
   * @return keySize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getKeySize() {
    return keySize;
  }


  public void setKeySize(String keySize) {
    this.keySize = keySize;
  }


  public ModelsTemplateUpdateRequest keyType(String keyType) {
    
    this.keyType = keyType;
    return this;
  }

   /**
   * Get keyType
   * @return keyType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getKeyType() {
    return keyType;
  }


  public void setKeyType(String keyType) {
    this.keyType = keyType;
  }


  public ModelsTemplateUpdateRequest friendlyName(String friendlyName) {
    
    this.friendlyName = friendlyName;
    return this;
  }

   /**
   * Get friendlyName
   * @return friendlyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFriendlyName() {
    return friendlyName;
  }


  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  public ModelsTemplateUpdateRequest keyRetention(KeyRetentionEnum keyRetention) {
    
    this.keyRetention = keyRetention;
    return this;
  }

   /**
   * Get keyRetention
   * @return keyRetention
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public KeyRetentionEnum getKeyRetention() {
    return keyRetention;
  }


  public void setKeyRetention(KeyRetentionEnum keyRetention) {
    this.keyRetention = keyRetention;
  }


  public ModelsTemplateUpdateRequest keyRetentionDays(Integer keyRetentionDays) {
    
    this.keyRetentionDays = keyRetentionDays;
    return this;
  }

   /**
   * Get keyRetentionDays
   * @return keyRetentionDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getKeyRetentionDays() {
    return keyRetentionDays;
  }


  public void setKeyRetentionDays(Integer keyRetentionDays) {
    this.keyRetentionDays = keyRetentionDays;
  }


  public ModelsTemplateUpdateRequest keyArchival(Boolean keyArchival) {
    
    this.keyArchival = keyArchival;
    return this;
  }

   /**
   * Get keyArchival
   * @return keyArchival
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getKeyArchival() {
    return keyArchival;
  }


  public void setKeyArchival(Boolean keyArchival) {
    this.keyArchival = keyArchival;
  }


  public ModelsTemplateUpdateRequest enrollmentFields(List<ModelsTemplateUpdateRequestTemplateEnrollmentFieldModel> enrollmentFields) {
    
    this.enrollmentFields = enrollmentFields;
    return this;
  }

  public ModelsTemplateUpdateRequest addEnrollmentFieldsItem(ModelsTemplateUpdateRequestTemplateEnrollmentFieldModel enrollmentFieldsItem) {
    if (this.enrollmentFields == null) {
      this.enrollmentFields = new ArrayList<>();
    }
    this.enrollmentFields.add(enrollmentFieldsItem);
    return this;
  }

   /**
   * Get enrollmentFields
   * @return enrollmentFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelsTemplateUpdateRequestTemplateEnrollmentFieldModel> getEnrollmentFields() {
    return enrollmentFields;
  }


  public void setEnrollmentFields(List<ModelsTemplateUpdateRequestTemplateEnrollmentFieldModel> enrollmentFields) {
    this.enrollmentFields = enrollmentFields;
  }


  public ModelsTemplateUpdateRequest metadataFields(List<ModelsTemplateUpdateRequestTemplateMetadataFieldModel> metadataFields) {
    
    this.metadataFields = metadataFields;
    return this;
  }

  public ModelsTemplateUpdateRequest addMetadataFieldsItem(ModelsTemplateUpdateRequestTemplateMetadataFieldModel metadataFieldsItem) {
    if (this.metadataFields == null) {
      this.metadataFields = new ArrayList<>();
    }
    this.metadataFields.add(metadataFieldsItem);
    return this;
  }

   /**
   * Get metadataFields
   * @return metadataFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelsTemplateUpdateRequestTemplateMetadataFieldModel> getMetadataFields() {
    return metadataFields;
  }


  public void setMetadataFields(List<ModelsTemplateUpdateRequestTemplateMetadataFieldModel> metadataFields) {
    this.metadataFields = metadataFields;
  }


  public ModelsTemplateUpdateRequest allowedEnrollmentTypes(AllowedEnrollmentTypesEnum allowedEnrollmentTypes) {
    
    this.allowedEnrollmentTypes = allowedEnrollmentTypes;
    return this;
  }

   /**
   * Get allowedEnrollmentTypes
   * @return allowedEnrollmentTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AllowedEnrollmentTypesEnum getAllowedEnrollmentTypes() {
    return allowedEnrollmentTypes;
  }


  public void setAllowedEnrollmentTypes(AllowedEnrollmentTypesEnum allowedEnrollmentTypes) {
    this.allowedEnrollmentTypes = allowedEnrollmentTypes;
  }


  public ModelsTemplateUpdateRequest templateRegexes(List<ModelsTemplateUpdateRequestTemplateRegexModel> templateRegexes) {
    
    this.templateRegexes = templateRegexes;
    return this;
  }

  public ModelsTemplateUpdateRequest addTemplateRegexesItem(ModelsTemplateUpdateRequestTemplateRegexModel templateRegexesItem) {
    if (this.templateRegexes == null) {
      this.templateRegexes = new ArrayList<>();
    }
    this.templateRegexes.add(templateRegexesItem);
    return this;
  }

   /**
   * Get templateRegexes
   * @return templateRegexes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelsTemplateUpdateRequestTemplateRegexModel> getTemplateRegexes() {
    return templateRegexes;
  }


  public void setTemplateRegexes(List<ModelsTemplateUpdateRequestTemplateRegexModel> templateRegexes) {
    this.templateRegexes = templateRegexes;
  }


  public ModelsTemplateUpdateRequest templateDefaults(List<ModelsTemplateUpdateRequestTemplateDefaultModel> templateDefaults) {
    
    this.templateDefaults = templateDefaults;
    return this;
  }

  public ModelsTemplateUpdateRequest addTemplateDefaultsItem(ModelsTemplateUpdateRequestTemplateDefaultModel templateDefaultsItem) {
    if (this.templateDefaults == null) {
      this.templateDefaults = new ArrayList<>();
    }
    this.templateDefaults.add(templateDefaultsItem);
    return this;
  }

   /**
   * Get templateDefaults
   * @return templateDefaults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelsTemplateUpdateRequestTemplateDefaultModel> getTemplateDefaults() {
    return templateDefaults;
  }


  public void setTemplateDefaults(List<ModelsTemplateUpdateRequestTemplateDefaultModel> templateDefaults) {
    this.templateDefaults = templateDefaults;
  }


  public ModelsTemplateUpdateRequest templatePolicy(ModelsTemplateUpdateRequestTemplatePolicyModel templatePolicy) {
    
    this.templatePolicy = templatePolicy;
    return this;
  }

   /**
   * Get templatePolicy
   * @return templatePolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ModelsTemplateUpdateRequestTemplatePolicyModel getTemplatePolicy() {
    return templatePolicy;
  }


  public void setTemplatePolicy(ModelsTemplateUpdateRequestTemplatePolicyModel templatePolicy) {
    this.templatePolicy = templatePolicy;
  }


  public ModelsTemplateUpdateRequest useAllowedRequesters(Boolean useAllowedRequesters) {
    
    this.useAllowedRequesters = useAllowedRequesters;
    return this;
  }

   /**
   * Get useAllowedRequesters
   * @return useAllowedRequesters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getUseAllowedRequesters() {
    return useAllowedRequesters;
  }


  public void setUseAllowedRequesters(Boolean useAllowedRequesters) {
    this.useAllowedRequesters = useAllowedRequesters;
  }


  public ModelsTemplateUpdateRequest allowedRequesters(List<String> allowedRequesters) {
    
    this.allowedRequesters = allowedRequesters;
    return this;
  }

  public ModelsTemplateUpdateRequest addAllowedRequestersItem(String allowedRequestersItem) {
    if (this.allowedRequesters == null) {
      this.allowedRequesters = new ArrayList<>();
    }
    this.allowedRequesters.add(allowedRequestersItem);
    return this;
  }

   /**
   * Get allowedRequesters
   * @return allowedRequesters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getAllowedRequesters() {
    return allowedRequesters;
  }


  public void setAllowedRequesters(List<String> allowedRequesters) {
    this.allowedRequesters = allowedRequesters;
  }


  public ModelsTemplateUpdateRequest requiresApproval(Boolean requiresApproval) {
    
    this.requiresApproval = requiresApproval;
    return this;
  }

   /**
   * Get requiresApproval
   * @return requiresApproval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRequiresApproval() {
    return requiresApproval;
  }


  public void setRequiresApproval(Boolean requiresApproval) {
    this.requiresApproval = requiresApproval;
  }


  public ModelsTemplateUpdateRequest keyUsage(Integer keyUsage) {
    
    this.keyUsage = keyUsage;
    return this;
  }

   /**
   * Get keyUsage
   * @return keyUsage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getKeyUsage() {
    return keyUsage;
  }


  public void setKeyUsage(Integer keyUsage) {
    this.keyUsage = keyUsage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelsTemplateUpdateRequest modelsTemplateUpdateRequest = (ModelsTemplateUpdateRequest) o;
    return Objects.equals(this.id, modelsTemplateUpdateRequest.id) &&
        Objects.equals(this.keySize, modelsTemplateUpdateRequest.keySize) &&
        Objects.equals(this.keyType, modelsTemplateUpdateRequest.keyType) &&
        Objects.equals(this.friendlyName, modelsTemplateUpdateRequest.friendlyName) &&
        Objects.equals(this.keyRetention, modelsTemplateUpdateRequest.keyRetention) &&
        Objects.equals(this.keyRetentionDays, modelsTemplateUpdateRequest.keyRetentionDays) &&
        Objects.equals(this.keyArchival, modelsTemplateUpdateRequest.keyArchival) &&
        Objects.equals(this.enrollmentFields, modelsTemplateUpdateRequest.enrollmentFields) &&
        Objects.equals(this.metadataFields, modelsTemplateUpdateRequest.metadataFields) &&
        Objects.equals(this.allowedEnrollmentTypes, modelsTemplateUpdateRequest.allowedEnrollmentTypes) &&
        Objects.equals(this.templateRegexes, modelsTemplateUpdateRequest.templateRegexes) &&
        Objects.equals(this.templateDefaults, modelsTemplateUpdateRequest.templateDefaults) &&
        Objects.equals(this.templatePolicy, modelsTemplateUpdateRequest.templatePolicy) &&
        Objects.equals(this.useAllowedRequesters, modelsTemplateUpdateRequest.useAllowedRequesters) &&
        Objects.equals(this.allowedRequesters, modelsTemplateUpdateRequest.allowedRequesters) &&
        Objects.equals(this.requiresApproval, modelsTemplateUpdateRequest.requiresApproval) &&
        Objects.equals(this.keyUsage, modelsTemplateUpdateRequest.keyUsage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, keySize, keyType, friendlyName, keyRetention, keyRetentionDays, keyArchival, enrollmentFields, metadataFields, allowedEnrollmentTypes, templateRegexes, templateDefaults, templatePolicy, useAllowedRequesters, allowedRequesters, requiresApproval, keyUsage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelsTemplateUpdateRequest {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    keySize: ").append(toIndentedString(keySize)).append("\n");
    sb.append("    keyType: ").append(toIndentedString(keyType)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("    keyRetention: ").append(toIndentedString(keyRetention)).append("\n");
    sb.append("    keyRetentionDays: ").append(toIndentedString(keyRetentionDays)).append("\n");
    sb.append("    keyArchival: ").append(toIndentedString(keyArchival)).append("\n");
    sb.append("    enrollmentFields: ").append(toIndentedString(enrollmentFields)).append("\n");
    sb.append("    metadataFields: ").append(toIndentedString(metadataFields)).append("\n");
    sb.append("    allowedEnrollmentTypes: ").append(toIndentedString(allowedEnrollmentTypes)).append("\n");
    sb.append("    templateRegexes: ").append(toIndentedString(templateRegexes)).append("\n");
    sb.append("    templateDefaults: ").append(toIndentedString(templateDefaults)).append("\n");
    sb.append("    templatePolicy: ").append(toIndentedString(templatePolicy)).append("\n");
    sb.append("    useAllowedRequesters: ").append(toIndentedString(useAllowedRequesters)).append("\n");
    sb.append("    allowedRequesters: ").append(toIndentedString(allowedRequesters)).append("\n");
    sb.append("    requiresApproval: ").append(toIndentedString(requiresApproval)).append("\n");
    sb.append("    keyUsage: ").append(toIndentedString(keyUsage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Id");
    openapiFields.add("KeySize");
    openapiFields.add("KeyType");
    openapiFields.add("FriendlyName");
    openapiFields.add("KeyRetention");
    openapiFields.add("KeyRetentionDays");
    openapiFields.add("KeyArchival");
    openapiFields.add("EnrollmentFields");
    openapiFields.add("MetadataFields");
    openapiFields.add("AllowedEnrollmentTypes");
    openapiFields.add("TemplateRegexes");
    openapiFields.add("TemplateDefaults");
    openapiFields.add("TemplatePolicy");
    openapiFields.add("UseAllowedRequesters");
    openapiFields.add("AllowedRequesters");
    openapiFields.add("RequiresApproval");
    openapiFields.add("KeyUsage");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ModelsTemplateUpdateRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ModelsTemplateUpdateRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelsTemplateUpdateRequest is not found in the empty JSON string", ModelsTemplateUpdateRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ModelsTemplateUpdateRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelsTemplateUpdateRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("KeySize") != null && !jsonObj.get("KeySize").isJsonNull()) && !jsonObj.get("KeySize").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `KeySize` to be a primitive type in the JSON string but got `%s`", jsonObj.get("KeySize").toString()));
      }
      if ((jsonObj.get("KeyType") != null && !jsonObj.get("KeyType").isJsonNull()) && !jsonObj.get("KeyType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `KeyType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("KeyType").toString()));
      }
      if ((jsonObj.get("FriendlyName") != null && !jsonObj.get("FriendlyName").isJsonNull()) && !jsonObj.get("FriendlyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FriendlyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FriendlyName").toString()));
      }
      if (jsonObj.get("EnrollmentFields") != null && !jsonObj.get("EnrollmentFields").isJsonNull()) {
        JsonArray jsonArrayenrollmentFields = jsonObj.getAsJsonArray("EnrollmentFields");
        if (jsonArrayenrollmentFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("EnrollmentFields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `EnrollmentFields` to be an array in the JSON string but got `%s`", jsonObj.get("EnrollmentFields").toString()));
          }

          // validate the optional field `EnrollmentFields` (array)
          for (int i = 0; i < jsonArrayenrollmentFields.size(); i++) {
            ModelsTemplateUpdateRequestTemplateEnrollmentFieldModel.validateJsonObject(jsonArrayenrollmentFields.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("MetadataFields") != null && !jsonObj.get("MetadataFields").isJsonNull()) {
        JsonArray jsonArraymetadataFields = jsonObj.getAsJsonArray("MetadataFields");
        if (jsonArraymetadataFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("MetadataFields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `MetadataFields` to be an array in the JSON string but got `%s`", jsonObj.get("MetadataFields").toString()));
          }

          // validate the optional field `MetadataFields` (array)
          for (int i = 0; i < jsonArraymetadataFields.size(); i++) {
            ModelsTemplateUpdateRequestTemplateMetadataFieldModel.validateJsonObject(jsonArraymetadataFields.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("TemplateRegexes") != null && !jsonObj.get("TemplateRegexes").isJsonNull()) {
        JsonArray jsonArraytemplateRegexes = jsonObj.getAsJsonArray("TemplateRegexes");
        if (jsonArraytemplateRegexes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("TemplateRegexes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `TemplateRegexes` to be an array in the JSON string but got `%s`", jsonObj.get("TemplateRegexes").toString()));
          }

          // validate the optional field `TemplateRegexes` (array)
          for (int i = 0; i < jsonArraytemplateRegexes.size(); i++) {
            ModelsTemplateUpdateRequestTemplateRegexModel.validateJsonObject(jsonArraytemplateRegexes.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("TemplateDefaults") != null && !jsonObj.get("TemplateDefaults").isJsonNull()) {
        JsonArray jsonArraytemplateDefaults = jsonObj.getAsJsonArray("TemplateDefaults");
        if (jsonArraytemplateDefaults != null) {
          // ensure the json data is an array
          if (!jsonObj.get("TemplateDefaults").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `TemplateDefaults` to be an array in the JSON string but got `%s`", jsonObj.get("TemplateDefaults").toString()));
          }

          // validate the optional field `TemplateDefaults` (array)
          for (int i = 0; i < jsonArraytemplateDefaults.size(); i++) {
            ModelsTemplateUpdateRequestTemplateDefaultModel.validateJsonObject(jsonArraytemplateDefaults.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `TemplatePolicy`
      if (jsonObj.get("TemplatePolicy") != null && !jsonObj.get("TemplatePolicy").isJsonNull()) {
        ModelsTemplateUpdateRequestTemplatePolicyModel.validateJsonObject(jsonObj.getAsJsonObject("TemplatePolicy"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("AllowedRequesters") != null && !jsonObj.get("AllowedRequesters").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `AllowedRequesters` to be an array in the JSON string but got `%s`", jsonObj.get("AllowedRequesters").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelsTemplateUpdateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelsTemplateUpdateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelsTemplateUpdateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelsTemplateUpdateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelsTemplateUpdateRequest>() {
           @Override
           public void write(JsonWriter out, ModelsTemplateUpdateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelsTemplateUpdateRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModelsTemplateUpdateRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModelsTemplateUpdateRequest
  * @throws IOException if the JSON string is invalid with respect to ModelsTemplateUpdateRequest
  */
  public static ModelsTemplateUpdateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelsTemplateUpdateRequest.class);
  }

 /**
  * Convert an instance of ModelsTemplateUpdateRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

