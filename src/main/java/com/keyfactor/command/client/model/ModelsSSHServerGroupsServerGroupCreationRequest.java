/*
 * Keyfactor-v1
 * This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keyfactor.command.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.keyfactor.command.client.model.KeyfactorCommonSchedulingKeyfactorSchedule;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.keyfactor.command.client.JSON;

/**
 * ModelsSSHServerGroupsServerGroupCreationRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-08T11:48:36.483-07:00[America/Phoenix]")
public class ModelsSSHServerGroupsServerGroupCreationRequest {
  public static final String SERIALIZED_NAME_OWNER_NAME = "OwnerName";
  @SerializedName(SERIALIZED_NAME_OWNER_NAME)
  private String ownerName;

  public static final String SERIALIZED_NAME_GROUP_NAME = "GroupName";
  @SerializedName(SERIALIZED_NAME_GROUP_NAME)
  private String groupName;

  public static final String SERIALIZED_NAME_SYNC_SCHEDULE = "SyncSchedule";
  @SerializedName(SERIALIZED_NAME_SYNC_SCHEDULE)
  private KeyfactorCommonSchedulingKeyfactorSchedule syncSchedule;

  public static final String SERIALIZED_NAME_UNDER_MANAGEMENT = "UnderManagement";
  @SerializedName(SERIALIZED_NAME_UNDER_MANAGEMENT)
  private Boolean underManagement;

  public ModelsSSHServerGroupsServerGroupCreationRequest() {
  }

  public ModelsSSHServerGroupsServerGroupCreationRequest ownerName(String ownerName) {
    
    this.ownerName = ownerName;
    return this;
  }

   /**
   * Get ownerName
   * @return ownerName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getOwnerName() {
    return ownerName;
  }


  public void setOwnerName(String ownerName) {
    this.ownerName = ownerName;
  }


  public ModelsSSHServerGroupsServerGroupCreationRequest groupName(String groupName) {
    
    this.groupName = groupName;
    return this;
  }

   /**
   * Get groupName
   * @return groupName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getGroupName() {
    return groupName;
  }


  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }


  public ModelsSSHServerGroupsServerGroupCreationRequest syncSchedule(KeyfactorCommonSchedulingKeyfactorSchedule syncSchedule) {
    
    this.syncSchedule = syncSchedule;
    return this;
  }

   /**
   * Get syncSchedule
   * @return syncSchedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public KeyfactorCommonSchedulingKeyfactorSchedule getSyncSchedule() {
    return syncSchedule;
  }


  public void setSyncSchedule(KeyfactorCommonSchedulingKeyfactorSchedule syncSchedule) {
    this.syncSchedule = syncSchedule;
  }


  public ModelsSSHServerGroupsServerGroupCreationRequest underManagement(Boolean underManagement) {
    
    this.underManagement = underManagement;
    return this;
  }

   /**
   * Get underManagement
   * @return underManagement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getUnderManagement() {
    return underManagement;
  }


  public void setUnderManagement(Boolean underManagement) {
    this.underManagement = underManagement;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelsSSHServerGroupsServerGroupCreationRequest modelsSSHServerGroupsServerGroupCreationRequest = (ModelsSSHServerGroupsServerGroupCreationRequest) o;
    return Objects.equals(this.ownerName, modelsSSHServerGroupsServerGroupCreationRequest.ownerName) &&
        Objects.equals(this.groupName, modelsSSHServerGroupsServerGroupCreationRequest.groupName) &&
        Objects.equals(this.syncSchedule, modelsSSHServerGroupsServerGroupCreationRequest.syncSchedule) &&
        Objects.equals(this.underManagement, modelsSSHServerGroupsServerGroupCreationRequest.underManagement);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ownerName, groupName, syncSchedule, underManagement);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelsSSHServerGroupsServerGroupCreationRequest {\n");
    sb.append("    ownerName: ").append(toIndentedString(ownerName)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    syncSchedule: ").append(toIndentedString(syncSchedule)).append("\n");
    sb.append("    underManagement: ").append(toIndentedString(underManagement)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("OwnerName");
    openapiFields.add("GroupName");
    openapiFields.add("SyncSchedule");
    openapiFields.add("UnderManagement");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("OwnerName");
    openapiRequiredFields.add("GroupName");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ModelsSSHServerGroupsServerGroupCreationRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ModelsSSHServerGroupsServerGroupCreationRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelsSSHServerGroupsServerGroupCreationRequest is not found in the empty JSON string", ModelsSSHServerGroupsServerGroupCreationRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ModelsSSHServerGroupsServerGroupCreationRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelsSSHServerGroupsServerGroupCreationRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ModelsSSHServerGroupsServerGroupCreationRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("OwnerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OwnerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OwnerName").toString()));
      }
      if (!jsonObj.get("GroupName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `GroupName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("GroupName").toString()));
      }
      // validate the optional field `SyncSchedule`
      if (jsonObj.get("SyncSchedule") != null && !jsonObj.get("SyncSchedule").isJsonNull()) {
        KeyfactorCommonSchedulingKeyfactorSchedule.validateJsonObject(jsonObj.getAsJsonObject("SyncSchedule"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelsSSHServerGroupsServerGroupCreationRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelsSSHServerGroupsServerGroupCreationRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelsSSHServerGroupsServerGroupCreationRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelsSSHServerGroupsServerGroupCreationRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelsSSHServerGroupsServerGroupCreationRequest>() {
           @Override
           public void write(JsonWriter out, ModelsSSHServerGroupsServerGroupCreationRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelsSSHServerGroupsServerGroupCreationRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModelsSSHServerGroupsServerGroupCreationRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModelsSSHServerGroupsServerGroupCreationRequest
  * @throws IOException if the JSON string is invalid with respect to ModelsSSHServerGroupsServerGroupCreationRequest
  */
  public static ModelsSSHServerGroupsServerGroupCreationRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelsSSHServerGroupsServerGroupCreationRequest.class);
  }

 /**
  * Convert an instance of ModelsSSHServerGroupsServerGroupCreationRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

