/*
 * Keyfactor-v1
 * This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keyfactor.command.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.keyfactor.command.client.model.KeyfactorApiModelsOrchestratorJobsJobFieldResponse;
import com.keyfactor.command.client.model.KeyfactorCommonSchedulingKeyfactorSchedule;
import com.keyfactor.command.client.model.ModelsOrchestratorJobsBulkOrchestratorJobPair;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.keyfactor.command.client.JSON;

/**
 * KeyfactorApiModelsOrchestratorJobsBulkJobResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-08T11:48:36.483-07:00[America/Phoenix]")
public class KeyfactorApiModelsOrchestratorJobsBulkJobResponse {
  public static final String SERIALIZED_NAME_ORCHESTRATOR_JOB_PAIRS = "OrchestratorJobPairs";
  @SerializedName(SERIALIZED_NAME_ORCHESTRATOR_JOB_PAIRS)
  private List<ModelsOrchestratorJobsBulkOrchestratorJobPair> orchestratorJobPairs = null;

  public static final String SERIALIZED_NAME_FAILED_ORCHESTRATOR_IDS = "FailedOrchestratorIds";
  @SerializedName(SERIALIZED_NAME_FAILED_ORCHESTRATOR_IDS)
  private List<UUID> failedOrchestratorIds = null;

  public static final String SERIALIZED_NAME_JOB_TYPE_NAME = "JobTypeName";
  @SerializedName(SERIALIZED_NAME_JOB_TYPE_NAME)
  private String jobTypeName;

  public static final String SERIALIZED_NAME_SCHEDULE = "Schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private KeyfactorCommonSchedulingKeyfactorSchedule schedule;

  public static final String SERIALIZED_NAME_JOB_FIELDS = "JobFields";
  @SerializedName(SERIALIZED_NAME_JOB_FIELDS)
  private List<KeyfactorApiModelsOrchestratorJobsJobFieldResponse> jobFields = null;

  public static final String SERIALIZED_NAME_REQUEST_TIMESTAMP = "RequestTimestamp";
  @SerializedName(SERIALIZED_NAME_REQUEST_TIMESTAMP)
  private OffsetDateTime requestTimestamp;

  public KeyfactorApiModelsOrchestratorJobsBulkJobResponse() {
  }

  public KeyfactorApiModelsOrchestratorJobsBulkJobResponse orchestratorJobPairs(List<ModelsOrchestratorJobsBulkOrchestratorJobPair> orchestratorJobPairs) {
    
    this.orchestratorJobPairs = orchestratorJobPairs;
    return this;
  }

  public KeyfactorApiModelsOrchestratorJobsBulkJobResponse addOrchestratorJobPairsItem(ModelsOrchestratorJobsBulkOrchestratorJobPair orchestratorJobPairsItem) {
    if (this.orchestratorJobPairs == null) {
      this.orchestratorJobPairs = new ArrayList<>();
    }
    this.orchestratorJobPairs.add(orchestratorJobPairsItem);
    return this;
  }

   /**
   * Get orchestratorJobPairs
   * @return orchestratorJobPairs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelsOrchestratorJobsBulkOrchestratorJobPair> getOrchestratorJobPairs() {
    return orchestratorJobPairs;
  }


  public void setOrchestratorJobPairs(List<ModelsOrchestratorJobsBulkOrchestratorJobPair> orchestratorJobPairs) {
    this.orchestratorJobPairs = orchestratorJobPairs;
  }


  public KeyfactorApiModelsOrchestratorJobsBulkJobResponse failedOrchestratorIds(List<UUID> failedOrchestratorIds) {
    
    this.failedOrchestratorIds = failedOrchestratorIds;
    return this;
  }

  public KeyfactorApiModelsOrchestratorJobsBulkJobResponse addFailedOrchestratorIdsItem(UUID failedOrchestratorIdsItem) {
    if (this.failedOrchestratorIds == null) {
      this.failedOrchestratorIds = new ArrayList<>();
    }
    this.failedOrchestratorIds.add(failedOrchestratorIdsItem);
    return this;
  }

   /**
   * Get failedOrchestratorIds
   * @return failedOrchestratorIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<UUID> getFailedOrchestratorIds() {
    return failedOrchestratorIds;
  }


  public void setFailedOrchestratorIds(List<UUID> failedOrchestratorIds) {
    this.failedOrchestratorIds = failedOrchestratorIds;
  }


  public KeyfactorApiModelsOrchestratorJobsBulkJobResponse jobTypeName(String jobTypeName) {
    
    this.jobTypeName = jobTypeName;
    return this;
  }

   /**
   * Get jobTypeName
   * @return jobTypeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobTypeName() {
    return jobTypeName;
  }


  public void setJobTypeName(String jobTypeName) {
    this.jobTypeName = jobTypeName;
  }


  public KeyfactorApiModelsOrchestratorJobsBulkJobResponse schedule(KeyfactorCommonSchedulingKeyfactorSchedule schedule) {
    
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public KeyfactorCommonSchedulingKeyfactorSchedule getSchedule() {
    return schedule;
  }


  public void setSchedule(KeyfactorCommonSchedulingKeyfactorSchedule schedule) {
    this.schedule = schedule;
  }


  public KeyfactorApiModelsOrchestratorJobsBulkJobResponse jobFields(List<KeyfactorApiModelsOrchestratorJobsJobFieldResponse> jobFields) {
    
    this.jobFields = jobFields;
    return this;
  }

  public KeyfactorApiModelsOrchestratorJobsBulkJobResponse addJobFieldsItem(KeyfactorApiModelsOrchestratorJobsJobFieldResponse jobFieldsItem) {
    if (this.jobFields == null) {
      this.jobFields = new ArrayList<>();
    }
    this.jobFields.add(jobFieldsItem);
    return this;
  }

   /**
   * Get jobFields
   * @return jobFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<KeyfactorApiModelsOrchestratorJobsJobFieldResponse> getJobFields() {
    return jobFields;
  }


  public void setJobFields(List<KeyfactorApiModelsOrchestratorJobsJobFieldResponse> jobFields) {
    this.jobFields = jobFields;
  }


  public KeyfactorApiModelsOrchestratorJobsBulkJobResponse requestTimestamp(OffsetDateTime requestTimestamp) {
    
    this.requestTimestamp = requestTimestamp;
    return this;
  }

   /**
   * Get requestTimestamp
   * @return requestTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getRequestTimestamp() {
    return requestTimestamp;
  }


  public void setRequestTimestamp(OffsetDateTime requestTimestamp) {
    this.requestTimestamp = requestTimestamp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeyfactorApiModelsOrchestratorJobsBulkJobResponse keyfactorApiModelsOrchestratorJobsBulkJobResponse = (KeyfactorApiModelsOrchestratorJobsBulkJobResponse) o;
    return Objects.equals(this.orchestratorJobPairs, keyfactorApiModelsOrchestratorJobsBulkJobResponse.orchestratorJobPairs) &&
        Objects.equals(this.failedOrchestratorIds, keyfactorApiModelsOrchestratorJobsBulkJobResponse.failedOrchestratorIds) &&
        Objects.equals(this.jobTypeName, keyfactorApiModelsOrchestratorJobsBulkJobResponse.jobTypeName) &&
        Objects.equals(this.schedule, keyfactorApiModelsOrchestratorJobsBulkJobResponse.schedule) &&
        Objects.equals(this.jobFields, keyfactorApiModelsOrchestratorJobsBulkJobResponse.jobFields) &&
        Objects.equals(this.requestTimestamp, keyfactorApiModelsOrchestratorJobsBulkJobResponse.requestTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orchestratorJobPairs, failedOrchestratorIds, jobTypeName, schedule, jobFields, requestTimestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeyfactorApiModelsOrchestratorJobsBulkJobResponse {\n");
    sb.append("    orchestratorJobPairs: ").append(toIndentedString(orchestratorJobPairs)).append("\n");
    sb.append("    failedOrchestratorIds: ").append(toIndentedString(failedOrchestratorIds)).append("\n");
    sb.append("    jobTypeName: ").append(toIndentedString(jobTypeName)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    jobFields: ").append(toIndentedString(jobFields)).append("\n");
    sb.append("    requestTimestamp: ").append(toIndentedString(requestTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("OrchestratorJobPairs");
    openapiFields.add("FailedOrchestratorIds");
    openapiFields.add("JobTypeName");
    openapiFields.add("Schedule");
    openapiFields.add("JobFields");
    openapiFields.add("RequestTimestamp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to KeyfactorApiModelsOrchestratorJobsBulkJobResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!KeyfactorApiModelsOrchestratorJobsBulkJobResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in KeyfactorApiModelsOrchestratorJobsBulkJobResponse is not found in the empty JSON string", KeyfactorApiModelsOrchestratorJobsBulkJobResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!KeyfactorApiModelsOrchestratorJobsBulkJobResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `KeyfactorApiModelsOrchestratorJobsBulkJobResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("OrchestratorJobPairs") != null && !jsonObj.get("OrchestratorJobPairs").isJsonNull()) {
        JsonArray jsonArrayorchestratorJobPairs = jsonObj.getAsJsonArray("OrchestratorJobPairs");
        if (jsonArrayorchestratorJobPairs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("OrchestratorJobPairs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `OrchestratorJobPairs` to be an array in the JSON string but got `%s`", jsonObj.get("OrchestratorJobPairs").toString()));
          }

          // validate the optional field `OrchestratorJobPairs` (array)
          for (int i = 0; i < jsonArrayorchestratorJobPairs.size(); i++) {
            ModelsOrchestratorJobsBulkOrchestratorJobPair.validateJsonObject(jsonArrayorchestratorJobPairs.get(i).getAsJsonObject());
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("FailedOrchestratorIds") != null && !jsonObj.get("FailedOrchestratorIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `FailedOrchestratorIds` to be an array in the JSON string but got `%s`", jsonObj.get("FailedOrchestratorIds").toString()));
      }
      if ((jsonObj.get("JobTypeName") != null && !jsonObj.get("JobTypeName").isJsonNull()) && !jsonObj.get("JobTypeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `JobTypeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("JobTypeName").toString()));
      }
      // validate the optional field `Schedule`
      if (jsonObj.get("Schedule") != null && !jsonObj.get("Schedule").isJsonNull()) {
        KeyfactorCommonSchedulingKeyfactorSchedule.validateJsonObject(jsonObj.getAsJsonObject("Schedule"));
      }
      if (jsonObj.get("JobFields") != null && !jsonObj.get("JobFields").isJsonNull()) {
        JsonArray jsonArrayjobFields = jsonObj.getAsJsonArray("JobFields");
        if (jsonArrayjobFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("JobFields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `JobFields` to be an array in the JSON string but got `%s`", jsonObj.get("JobFields").toString()));
          }

          // validate the optional field `JobFields` (array)
          for (int i = 0; i < jsonArrayjobFields.size(); i++) {
            KeyfactorApiModelsOrchestratorJobsJobFieldResponse.validateJsonObject(jsonArrayjobFields.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!KeyfactorApiModelsOrchestratorJobsBulkJobResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'KeyfactorApiModelsOrchestratorJobsBulkJobResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<KeyfactorApiModelsOrchestratorJobsBulkJobResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(KeyfactorApiModelsOrchestratorJobsBulkJobResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<KeyfactorApiModelsOrchestratorJobsBulkJobResponse>() {
           @Override
           public void write(JsonWriter out, KeyfactorApiModelsOrchestratorJobsBulkJobResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public KeyfactorApiModelsOrchestratorJobsBulkJobResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of KeyfactorApiModelsOrchestratorJobsBulkJobResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of KeyfactorApiModelsOrchestratorJobsBulkJobResponse
  * @throws IOException if the JSON string is invalid with respect to KeyfactorApiModelsOrchestratorJobsBulkJobResponse
  */
  public static KeyfactorApiModelsOrchestratorJobsBulkJobResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, KeyfactorApiModelsOrchestratorJobsBulkJobResponse.class);
  }

 /**
  * Convert an instance of KeyfactorApiModelsOrchestratorJobsBulkJobResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

