/*
 * Keyfactor-v1
 * This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keyfactor.command.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.keyfactor.command.client.model.ModelsSSLScanJobPartDefinition;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.keyfactor.command.client.JSON;

/**
 * ModelsSSLScanJobPart
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ModelsSSLScanJobPart {
  public static final String SERIALIZED_NAME_SCAN_JOB_PART_ID = "ScanJobPartId";
  @SerializedName(SERIALIZED_NAME_SCAN_JOB_PART_ID)
  private UUID scanJobPartId;

  public static final String SERIALIZED_NAME_LOGICAL_SCAN_JOB_ID = "LogicalScanJobId";
  @SerializedName(SERIALIZED_NAME_LOGICAL_SCAN_JOB_ID)
  private UUID logicalScanJobId;

  public static final String SERIALIZED_NAME_AGENT_JOB_ID = "AgentJobId";
  @SerializedName(SERIALIZED_NAME_AGENT_JOB_ID)
  private UUID agentJobId;

  public static final String SERIALIZED_NAME_ESTIMATED_ENDPOINT_COUNT = "EstimatedEndpointCount";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_ENDPOINT_COUNT)
  private Integer estimatedEndpointCount;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3);

    private Integer value;

    StatusEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(Integer value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_STAT_TOTAL_ENDPOINT_COUNT = "StatTotalEndpointCount";
  @SerializedName(SERIALIZED_NAME_STAT_TOTAL_ENDPOINT_COUNT)
  private Integer statTotalEndpointCount;

  public static final String SERIALIZED_NAME_STAT_TIMED_OUT_CONNECTING_COUNT = "StatTimedOutConnectingCount";
  @SerializedName(SERIALIZED_NAME_STAT_TIMED_OUT_CONNECTING_COUNT)
  private Integer statTimedOutConnectingCount;

  public static final String SERIALIZED_NAME_STAT_CONNECTION_REFUSED_COUNT = "StatConnectionRefusedCount";
  @SerializedName(SERIALIZED_NAME_STAT_CONNECTION_REFUSED_COUNT)
  private Integer statConnectionRefusedCount;

  public static final String SERIALIZED_NAME_STAT_TIMED_OUT_DOWNLOADING_COUNT = "StatTimedOutDownloadingCount";
  @SerializedName(SERIALIZED_NAME_STAT_TIMED_OUT_DOWNLOADING_COUNT)
  private Integer statTimedOutDownloadingCount;

  public static final String SERIALIZED_NAME_STAT_EXCEPTION_DOWNLOADING_COUNT = "StatExceptionDownloadingCount";
  @SerializedName(SERIALIZED_NAME_STAT_EXCEPTION_DOWNLOADING_COUNT)
  private Integer statExceptionDownloadingCount;

  public static final String SERIALIZED_NAME_STAT_NOT_SSL_COUNT = "StatNotSslCount";
  @SerializedName(SERIALIZED_NAME_STAT_NOT_SSL_COUNT)
  private Integer statNotSslCount;

  public static final String SERIALIZED_NAME_STAT_BAD_SSL_HANDSHAKE_COUNT = "StatBadSslHandshakeCount";
  @SerializedName(SERIALIZED_NAME_STAT_BAD_SSL_HANDSHAKE_COUNT)
  private Integer statBadSslHandshakeCount;

  public static final String SERIALIZED_NAME_STAT_CERTIFICATE_FOUND_COUNT = "StatCertificateFoundCount";
  @SerializedName(SERIALIZED_NAME_STAT_CERTIFICATE_FOUND_COUNT)
  private Integer statCertificateFoundCount;

  public static final String SERIALIZED_NAME_STAT_NO_CERTIFICATE_COUNT = "StatNoCertificateCount";
  @SerializedName(SERIALIZED_NAME_STAT_NO_CERTIFICATE_COUNT)
  private Integer statNoCertificateCount;

  public static final String SERIALIZED_NAME_SCAN_JOB_PART_DEFINITIONS = "ScanJobPartDefinitions";
  @SerializedName(SERIALIZED_NAME_SCAN_JOB_PART_DEFINITIONS)
  private List<ModelsSSLScanJobPartDefinition> scanJobPartDefinitions = null;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public ModelsSSLScanJobPart() {
  }

  public ModelsSSLScanJobPart scanJobPartId(UUID scanJobPartId) {
    
    this.scanJobPartId = scanJobPartId;
    return this;
  }

   /**
   * Get scanJobPartId
   * @return scanJobPartId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getScanJobPartId() {
    return scanJobPartId;
  }


  public void setScanJobPartId(UUID scanJobPartId) {
    this.scanJobPartId = scanJobPartId;
  }


  public ModelsSSLScanJobPart logicalScanJobId(UUID logicalScanJobId) {
    
    this.logicalScanJobId = logicalScanJobId;
    return this;
  }

   /**
   * Get logicalScanJobId
   * @return logicalScanJobId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getLogicalScanJobId() {
    return logicalScanJobId;
  }


  public void setLogicalScanJobId(UUID logicalScanJobId) {
    this.logicalScanJobId = logicalScanJobId;
  }


  public ModelsSSLScanJobPart agentJobId(UUID agentJobId) {
    
    this.agentJobId = agentJobId;
    return this;
  }

   /**
   * Get agentJobId
   * @return agentJobId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getAgentJobId() {
    return agentJobId;
  }


  public void setAgentJobId(UUID agentJobId) {
    this.agentJobId = agentJobId;
  }


  public ModelsSSLScanJobPart estimatedEndpointCount(Integer estimatedEndpointCount) {
    
    this.estimatedEndpointCount = estimatedEndpointCount;
    return this;
  }

   /**
   * Get estimatedEndpointCount
   * @return estimatedEndpointCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getEstimatedEndpointCount() {
    return estimatedEndpointCount;
  }


  public void setEstimatedEndpointCount(Integer estimatedEndpointCount) {
    this.estimatedEndpointCount = estimatedEndpointCount;
  }


  public ModelsSSLScanJobPart status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public ModelsSSLScanJobPart statTotalEndpointCount(Integer statTotalEndpointCount) {
    
    this.statTotalEndpointCount = statTotalEndpointCount;
    return this;
  }

   /**
   * Get statTotalEndpointCount
   * @return statTotalEndpointCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStatTotalEndpointCount() {
    return statTotalEndpointCount;
  }


  public void setStatTotalEndpointCount(Integer statTotalEndpointCount) {
    this.statTotalEndpointCount = statTotalEndpointCount;
  }


  public ModelsSSLScanJobPart statTimedOutConnectingCount(Integer statTimedOutConnectingCount) {
    
    this.statTimedOutConnectingCount = statTimedOutConnectingCount;
    return this;
  }

   /**
   * Get statTimedOutConnectingCount
   * @return statTimedOutConnectingCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStatTimedOutConnectingCount() {
    return statTimedOutConnectingCount;
  }


  public void setStatTimedOutConnectingCount(Integer statTimedOutConnectingCount) {
    this.statTimedOutConnectingCount = statTimedOutConnectingCount;
  }


  public ModelsSSLScanJobPart statConnectionRefusedCount(Integer statConnectionRefusedCount) {
    
    this.statConnectionRefusedCount = statConnectionRefusedCount;
    return this;
  }

   /**
   * Get statConnectionRefusedCount
   * @return statConnectionRefusedCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStatConnectionRefusedCount() {
    return statConnectionRefusedCount;
  }


  public void setStatConnectionRefusedCount(Integer statConnectionRefusedCount) {
    this.statConnectionRefusedCount = statConnectionRefusedCount;
  }


  public ModelsSSLScanJobPart statTimedOutDownloadingCount(Integer statTimedOutDownloadingCount) {
    
    this.statTimedOutDownloadingCount = statTimedOutDownloadingCount;
    return this;
  }

   /**
   * Get statTimedOutDownloadingCount
   * @return statTimedOutDownloadingCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStatTimedOutDownloadingCount() {
    return statTimedOutDownloadingCount;
  }


  public void setStatTimedOutDownloadingCount(Integer statTimedOutDownloadingCount) {
    this.statTimedOutDownloadingCount = statTimedOutDownloadingCount;
  }


  public ModelsSSLScanJobPart statExceptionDownloadingCount(Integer statExceptionDownloadingCount) {
    
    this.statExceptionDownloadingCount = statExceptionDownloadingCount;
    return this;
  }

   /**
   * Get statExceptionDownloadingCount
   * @return statExceptionDownloadingCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStatExceptionDownloadingCount() {
    return statExceptionDownloadingCount;
  }


  public void setStatExceptionDownloadingCount(Integer statExceptionDownloadingCount) {
    this.statExceptionDownloadingCount = statExceptionDownloadingCount;
  }


  public ModelsSSLScanJobPart statNotSslCount(Integer statNotSslCount) {
    
    this.statNotSslCount = statNotSslCount;
    return this;
  }

   /**
   * Get statNotSslCount
   * @return statNotSslCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStatNotSslCount() {
    return statNotSslCount;
  }


  public void setStatNotSslCount(Integer statNotSslCount) {
    this.statNotSslCount = statNotSslCount;
  }


  public ModelsSSLScanJobPart statBadSslHandshakeCount(Integer statBadSslHandshakeCount) {
    
    this.statBadSslHandshakeCount = statBadSslHandshakeCount;
    return this;
  }

   /**
   * Get statBadSslHandshakeCount
   * @return statBadSslHandshakeCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStatBadSslHandshakeCount() {
    return statBadSslHandshakeCount;
  }


  public void setStatBadSslHandshakeCount(Integer statBadSslHandshakeCount) {
    this.statBadSslHandshakeCount = statBadSslHandshakeCount;
  }


  public ModelsSSLScanJobPart statCertificateFoundCount(Integer statCertificateFoundCount) {
    
    this.statCertificateFoundCount = statCertificateFoundCount;
    return this;
  }

   /**
   * Get statCertificateFoundCount
   * @return statCertificateFoundCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStatCertificateFoundCount() {
    return statCertificateFoundCount;
  }


  public void setStatCertificateFoundCount(Integer statCertificateFoundCount) {
    this.statCertificateFoundCount = statCertificateFoundCount;
  }


  public ModelsSSLScanJobPart statNoCertificateCount(Integer statNoCertificateCount) {
    
    this.statNoCertificateCount = statNoCertificateCount;
    return this;
  }

   /**
   * Get statNoCertificateCount
   * @return statNoCertificateCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStatNoCertificateCount() {
    return statNoCertificateCount;
  }


  public void setStatNoCertificateCount(Integer statNoCertificateCount) {
    this.statNoCertificateCount = statNoCertificateCount;
  }


  public ModelsSSLScanJobPart scanJobPartDefinitions(List<ModelsSSLScanJobPartDefinition> scanJobPartDefinitions) {
    
    this.scanJobPartDefinitions = scanJobPartDefinitions;
    return this;
  }

  public ModelsSSLScanJobPart addScanJobPartDefinitionsItem(ModelsSSLScanJobPartDefinition scanJobPartDefinitionsItem) {
    if (this.scanJobPartDefinitions == null) {
      this.scanJobPartDefinitions = new ArrayList<>();
    }
    this.scanJobPartDefinitions.add(scanJobPartDefinitionsItem);
    return this;
  }

   /**
   * Get scanJobPartDefinitions
   * @return scanJobPartDefinitions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelsSSLScanJobPartDefinition> getScanJobPartDefinitions() {
    return scanJobPartDefinitions;
  }


  public void setScanJobPartDefinitions(List<ModelsSSLScanJobPartDefinition> scanJobPartDefinitions) {
    this.scanJobPartDefinitions = scanJobPartDefinitions;
  }


  public ModelsSSLScanJobPart startTime(OffsetDateTime startTime) {
    
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getStartTime() {
    return startTime;
  }


  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public ModelsSSLScanJobPart endTime(OffsetDateTime endTime) {
    
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEndTime() {
    return endTime;
  }


  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelsSSLScanJobPart modelsSSLScanJobPart = (ModelsSSLScanJobPart) o;
    return Objects.equals(this.scanJobPartId, modelsSSLScanJobPart.scanJobPartId) &&
        Objects.equals(this.logicalScanJobId, modelsSSLScanJobPart.logicalScanJobId) &&
        Objects.equals(this.agentJobId, modelsSSLScanJobPart.agentJobId) &&
        Objects.equals(this.estimatedEndpointCount, modelsSSLScanJobPart.estimatedEndpointCount) &&
        Objects.equals(this.status, modelsSSLScanJobPart.status) &&
        Objects.equals(this.statTotalEndpointCount, modelsSSLScanJobPart.statTotalEndpointCount) &&
        Objects.equals(this.statTimedOutConnectingCount, modelsSSLScanJobPart.statTimedOutConnectingCount) &&
        Objects.equals(this.statConnectionRefusedCount, modelsSSLScanJobPart.statConnectionRefusedCount) &&
        Objects.equals(this.statTimedOutDownloadingCount, modelsSSLScanJobPart.statTimedOutDownloadingCount) &&
        Objects.equals(this.statExceptionDownloadingCount, modelsSSLScanJobPart.statExceptionDownloadingCount) &&
        Objects.equals(this.statNotSslCount, modelsSSLScanJobPart.statNotSslCount) &&
        Objects.equals(this.statBadSslHandshakeCount, modelsSSLScanJobPart.statBadSslHandshakeCount) &&
        Objects.equals(this.statCertificateFoundCount, modelsSSLScanJobPart.statCertificateFoundCount) &&
        Objects.equals(this.statNoCertificateCount, modelsSSLScanJobPart.statNoCertificateCount) &&
        Objects.equals(this.scanJobPartDefinitions, modelsSSLScanJobPart.scanJobPartDefinitions) &&
        Objects.equals(this.startTime, modelsSSLScanJobPart.startTime) &&
        Objects.equals(this.endTime, modelsSSLScanJobPart.endTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(scanJobPartId, logicalScanJobId, agentJobId, estimatedEndpointCount, status, statTotalEndpointCount, statTimedOutConnectingCount, statConnectionRefusedCount, statTimedOutDownloadingCount, statExceptionDownloadingCount, statNotSslCount, statBadSslHandshakeCount, statCertificateFoundCount, statNoCertificateCount, scanJobPartDefinitions, startTime, endTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelsSSLScanJobPart {\n");
    sb.append("    scanJobPartId: ").append(toIndentedString(scanJobPartId)).append("\n");
    sb.append("    logicalScanJobId: ").append(toIndentedString(logicalScanJobId)).append("\n");
    sb.append("    agentJobId: ").append(toIndentedString(agentJobId)).append("\n");
    sb.append("    estimatedEndpointCount: ").append(toIndentedString(estimatedEndpointCount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statTotalEndpointCount: ").append(toIndentedString(statTotalEndpointCount)).append("\n");
    sb.append("    statTimedOutConnectingCount: ").append(toIndentedString(statTimedOutConnectingCount)).append("\n");
    sb.append("    statConnectionRefusedCount: ").append(toIndentedString(statConnectionRefusedCount)).append("\n");
    sb.append("    statTimedOutDownloadingCount: ").append(toIndentedString(statTimedOutDownloadingCount)).append("\n");
    sb.append("    statExceptionDownloadingCount: ").append(toIndentedString(statExceptionDownloadingCount)).append("\n");
    sb.append("    statNotSslCount: ").append(toIndentedString(statNotSslCount)).append("\n");
    sb.append("    statBadSslHandshakeCount: ").append(toIndentedString(statBadSslHandshakeCount)).append("\n");
    sb.append("    statCertificateFoundCount: ").append(toIndentedString(statCertificateFoundCount)).append("\n");
    sb.append("    statNoCertificateCount: ").append(toIndentedString(statNoCertificateCount)).append("\n");
    sb.append("    scanJobPartDefinitions: ").append(toIndentedString(scanJobPartDefinitions)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ScanJobPartId");
    openapiFields.add("LogicalScanJobId");
    openapiFields.add("AgentJobId");
    openapiFields.add("EstimatedEndpointCount");
    openapiFields.add("Status");
    openapiFields.add("StatTotalEndpointCount");
    openapiFields.add("StatTimedOutConnectingCount");
    openapiFields.add("StatConnectionRefusedCount");
    openapiFields.add("StatTimedOutDownloadingCount");
    openapiFields.add("StatExceptionDownloadingCount");
    openapiFields.add("StatNotSslCount");
    openapiFields.add("StatBadSslHandshakeCount");
    openapiFields.add("StatCertificateFoundCount");
    openapiFields.add("StatNoCertificateCount");
    openapiFields.add("ScanJobPartDefinitions");
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ModelsSSLScanJobPart
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ModelsSSLScanJobPart.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelsSSLScanJobPart is not found in the empty JSON string", ModelsSSLScanJobPart.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ModelsSSLScanJobPart.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelsSSLScanJobPart` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("ScanJobPartId") != null && !jsonObj.get("ScanJobPartId").isJsonNull()) && !jsonObj.get("ScanJobPartId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ScanJobPartId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ScanJobPartId").toString()));
      }
      if ((jsonObj.get("LogicalScanJobId") != null && !jsonObj.get("LogicalScanJobId").isJsonNull()) && !jsonObj.get("LogicalScanJobId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LogicalScanJobId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LogicalScanJobId").toString()));
      }
      if ((jsonObj.get("AgentJobId") != null && !jsonObj.get("AgentJobId").isJsonNull()) && !jsonObj.get("AgentJobId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AgentJobId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AgentJobId").toString()));
      }
      if (jsonObj.get("ScanJobPartDefinitions") != null && !jsonObj.get("ScanJobPartDefinitions").isJsonNull()) {
        JsonArray jsonArrayscanJobPartDefinitions = jsonObj.getAsJsonArray("ScanJobPartDefinitions");
        if (jsonArrayscanJobPartDefinitions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ScanJobPartDefinitions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ScanJobPartDefinitions` to be an array in the JSON string but got `%s`", jsonObj.get("ScanJobPartDefinitions").toString()));
          }

          // validate the optional field `ScanJobPartDefinitions` (array)
          for (int i = 0; i < jsonArrayscanJobPartDefinitions.size(); i++) {
            ModelsSSLScanJobPartDefinition.validateJsonObject(jsonArrayscanJobPartDefinitions.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelsSSLScanJobPart.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelsSSLScanJobPart' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelsSSLScanJobPart> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelsSSLScanJobPart.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelsSSLScanJobPart>() {
           @Override
           public void write(JsonWriter out, ModelsSSLScanJobPart value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelsSSLScanJobPart read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModelsSSLScanJobPart given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModelsSSLScanJobPart
  * @throws IOException if the JSON string is invalid with respect to ModelsSSLScanJobPart
  */
  public static ModelsSSLScanJobPart fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelsSSLScanJobPart.class);
  }

 /**
  * Convert an instance of ModelsSSLScanJobPart to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

