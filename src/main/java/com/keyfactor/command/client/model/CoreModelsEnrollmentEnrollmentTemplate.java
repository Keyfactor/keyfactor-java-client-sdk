/*
 * Keyfactor-v1
 * This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keyfactor.command.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.keyfactor.command.client.model.CoreModelsEnrollmentEnrollmentCA;
import com.keyfactor.command.client.model.ModelsExtendedKeyUsage;
import com.keyfactor.command.client.model.ModelsTemplateEnrollmentField;
import com.keyfactor.command.client.model.ModelsTemplateMetadataField;
import com.keyfactor.command.client.model.ModelsTemplateRegex;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.keyfactor.command.client.JSON;

/**
 * CoreModelsEnrollmentEnrollmentTemplate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-08T11:48:36.483-07:00[America/Phoenix]")
public class CoreModelsEnrollmentEnrollmentTemplate {
  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "DisplayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_FOREST = "Forest";
  @SerializedName(SERIALIZED_NAME_FOREST)
  private String forest;

  public static final String SERIALIZED_NAME_KEY_SIZE = "KeySize";
  @SerializedName(SERIALIZED_NAME_KEY_SIZE)
  private String keySize;

  public static final String SERIALIZED_NAME_KEY_TYPE = "KeyType";
  @SerializedName(SERIALIZED_NAME_KEY_TYPE)
  private String keyType;

  public static final String SERIALIZED_NAME_REQUIRES_APPROVAL = "RequiresApproval";
  @SerializedName(SERIALIZED_NAME_REQUIRES_APPROVAL)
  private Boolean requiresApproval;

  public static final String SERIALIZED_NAME_RF_C_ENFORCEMENT = "RFCEnforcement";
  @SerializedName(SERIALIZED_NAME_RF_C_ENFORCEMENT)
  private Boolean rfCEnforcement;

  public static final String SERIALIZED_NAME_CAS = "CAs";
  @SerializedName(SERIALIZED_NAME_CAS)
  private List<CoreModelsEnrollmentEnrollmentCA> cas = null;

  public static final String SERIALIZED_NAME_ENROLLMENT_FIELDS = "EnrollmentFields";
  @SerializedName(SERIALIZED_NAME_ENROLLMENT_FIELDS)
  private List<ModelsTemplateEnrollmentField> enrollmentFields = null;

  public static final String SERIALIZED_NAME_METADATA_FIELDS = "MetadataFields";
  @SerializedName(SERIALIZED_NAME_METADATA_FIELDS)
  private List<ModelsTemplateMetadataField> metadataFields = null;

  public static final String SERIALIZED_NAME_REGEXES = "Regexes";
  @SerializedName(SERIALIZED_NAME_REGEXES)
  private List<ModelsTemplateRegex> regexes = null;

  public static final String SERIALIZED_NAME_EXTENDED_KEY_USAGES = "ExtendedKeyUsages";
  @SerializedName(SERIALIZED_NAME_EXTENDED_KEY_USAGES)
  private List<ModelsExtendedKeyUsage> extendedKeyUsages = null;

  public static final String SERIALIZED_NAME_CURVE = "Curve";
  @SerializedName(SERIALIZED_NAME_CURVE)
  private String curve;

  public CoreModelsEnrollmentEnrollmentTemplate() {
  }

  public CoreModelsEnrollmentEnrollmentTemplate id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public CoreModelsEnrollmentEnrollmentTemplate name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CoreModelsEnrollmentEnrollmentTemplate displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public CoreModelsEnrollmentEnrollmentTemplate forest(String forest) {
    
    this.forest = forest;
    return this;
  }

   /**
   * Get forest
   * @return forest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getForest() {
    return forest;
  }


  public void setForest(String forest) {
    this.forest = forest;
  }


  public CoreModelsEnrollmentEnrollmentTemplate keySize(String keySize) {
    
    this.keySize = keySize;
    return this;
  }

   /**
   * Get keySize
   * @return keySize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getKeySize() {
    return keySize;
  }


  public void setKeySize(String keySize) {
    this.keySize = keySize;
  }


  public CoreModelsEnrollmentEnrollmentTemplate keyType(String keyType) {
    
    this.keyType = keyType;
    return this;
  }

   /**
   * Get keyType
   * @return keyType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getKeyType() {
    return keyType;
  }


  public void setKeyType(String keyType) {
    this.keyType = keyType;
  }


  public CoreModelsEnrollmentEnrollmentTemplate requiresApproval(Boolean requiresApproval) {
    
    this.requiresApproval = requiresApproval;
    return this;
  }

   /**
   * Get requiresApproval
   * @return requiresApproval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRequiresApproval() {
    return requiresApproval;
  }


  public void setRequiresApproval(Boolean requiresApproval) {
    this.requiresApproval = requiresApproval;
  }


  public CoreModelsEnrollmentEnrollmentTemplate rfCEnforcement(Boolean rfCEnforcement) {
    
    this.rfCEnforcement = rfCEnforcement;
    return this;
  }

   /**
   * Get rfCEnforcement
   * @return rfCEnforcement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRfCEnforcement() {
    return rfCEnforcement;
  }


  public void setRfCEnforcement(Boolean rfCEnforcement) {
    this.rfCEnforcement = rfCEnforcement;
  }


  public CoreModelsEnrollmentEnrollmentTemplate cas(List<CoreModelsEnrollmentEnrollmentCA> cas) {
    
    this.cas = cas;
    return this;
  }

  public CoreModelsEnrollmentEnrollmentTemplate addCasItem(CoreModelsEnrollmentEnrollmentCA casItem) {
    if (this.cas == null) {
      this.cas = new ArrayList<>();
    }
    this.cas.add(casItem);
    return this;
  }

   /**
   * Get cas
   * @return cas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CoreModelsEnrollmentEnrollmentCA> getCas() {
    return cas;
  }


  public void setCas(List<CoreModelsEnrollmentEnrollmentCA> cas) {
    this.cas = cas;
  }


  public CoreModelsEnrollmentEnrollmentTemplate enrollmentFields(List<ModelsTemplateEnrollmentField> enrollmentFields) {
    
    this.enrollmentFields = enrollmentFields;
    return this;
  }

  public CoreModelsEnrollmentEnrollmentTemplate addEnrollmentFieldsItem(ModelsTemplateEnrollmentField enrollmentFieldsItem) {
    if (this.enrollmentFields == null) {
      this.enrollmentFields = new ArrayList<>();
    }
    this.enrollmentFields.add(enrollmentFieldsItem);
    return this;
  }

   /**
   * Get enrollmentFields
   * @return enrollmentFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelsTemplateEnrollmentField> getEnrollmentFields() {
    return enrollmentFields;
  }


  public void setEnrollmentFields(List<ModelsTemplateEnrollmentField> enrollmentFields) {
    this.enrollmentFields = enrollmentFields;
  }


  public CoreModelsEnrollmentEnrollmentTemplate metadataFields(List<ModelsTemplateMetadataField> metadataFields) {
    
    this.metadataFields = metadataFields;
    return this;
  }

  public CoreModelsEnrollmentEnrollmentTemplate addMetadataFieldsItem(ModelsTemplateMetadataField metadataFieldsItem) {
    if (this.metadataFields == null) {
      this.metadataFields = new ArrayList<>();
    }
    this.metadataFields.add(metadataFieldsItem);
    return this;
  }

   /**
   * Get metadataFields
   * @return metadataFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelsTemplateMetadataField> getMetadataFields() {
    return metadataFields;
  }


  public void setMetadataFields(List<ModelsTemplateMetadataField> metadataFields) {
    this.metadataFields = metadataFields;
  }


  public CoreModelsEnrollmentEnrollmentTemplate regexes(List<ModelsTemplateRegex> regexes) {
    
    this.regexes = regexes;
    return this;
  }

  public CoreModelsEnrollmentEnrollmentTemplate addRegexesItem(ModelsTemplateRegex regexesItem) {
    if (this.regexes == null) {
      this.regexes = new ArrayList<>();
    }
    this.regexes.add(regexesItem);
    return this;
  }

   /**
   * Get regexes
   * @return regexes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelsTemplateRegex> getRegexes() {
    return regexes;
  }


  public void setRegexes(List<ModelsTemplateRegex> regexes) {
    this.regexes = regexes;
  }


  public CoreModelsEnrollmentEnrollmentTemplate extendedKeyUsages(List<ModelsExtendedKeyUsage> extendedKeyUsages) {
    
    this.extendedKeyUsages = extendedKeyUsages;
    return this;
  }

  public CoreModelsEnrollmentEnrollmentTemplate addExtendedKeyUsagesItem(ModelsExtendedKeyUsage extendedKeyUsagesItem) {
    if (this.extendedKeyUsages == null) {
      this.extendedKeyUsages = new ArrayList<>();
    }
    this.extendedKeyUsages.add(extendedKeyUsagesItem);
    return this;
  }

   /**
   * Get extendedKeyUsages
   * @return extendedKeyUsages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelsExtendedKeyUsage> getExtendedKeyUsages() {
    return extendedKeyUsages;
  }


  public void setExtendedKeyUsages(List<ModelsExtendedKeyUsage> extendedKeyUsages) {
    this.extendedKeyUsages = extendedKeyUsages;
  }


  public CoreModelsEnrollmentEnrollmentTemplate curve(String curve) {
    
    this.curve = curve;
    return this;
  }

   /**
   * Get curve
   * @return curve
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurve() {
    return curve;
  }


  public void setCurve(String curve) {
    this.curve = curve;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoreModelsEnrollmentEnrollmentTemplate coreModelsEnrollmentEnrollmentTemplate = (CoreModelsEnrollmentEnrollmentTemplate) o;
    return Objects.equals(this.id, coreModelsEnrollmentEnrollmentTemplate.id) &&
        Objects.equals(this.name, coreModelsEnrollmentEnrollmentTemplate.name) &&
        Objects.equals(this.displayName, coreModelsEnrollmentEnrollmentTemplate.displayName) &&
        Objects.equals(this.forest, coreModelsEnrollmentEnrollmentTemplate.forest) &&
        Objects.equals(this.keySize, coreModelsEnrollmentEnrollmentTemplate.keySize) &&
        Objects.equals(this.keyType, coreModelsEnrollmentEnrollmentTemplate.keyType) &&
        Objects.equals(this.requiresApproval, coreModelsEnrollmentEnrollmentTemplate.requiresApproval) &&
        Objects.equals(this.rfCEnforcement, coreModelsEnrollmentEnrollmentTemplate.rfCEnforcement) &&
        Objects.equals(this.cas, coreModelsEnrollmentEnrollmentTemplate.cas) &&
        Objects.equals(this.enrollmentFields, coreModelsEnrollmentEnrollmentTemplate.enrollmentFields) &&
        Objects.equals(this.metadataFields, coreModelsEnrollmentEnrollmentTemplate.metadataFields) &&
        Objects.equals(this.regexes, coreModelsEnrollmentEnrollmentTemplate.regexes) &&
        Objects.equals(this.extendedKeyUsages, coreModelsEnrollmentEnrollmentTemplate.extendedKeyUsages) &&
        Objects.equals(this.curve, coreModelsEnrollmentEnrollmentTemplate.curve);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, displayName, forest, keySize, keyType, requiresApproval, rfCEnforcement, cas, enrollmentFields, metadataFields, regexes, extendedKeyUsages, curve);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoreModelsEnrollmentEnrollmentTemplate {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    forest: ").append(toIndentedString(forest)).append("\n");
    sb.append("    keySize: ").append(toIndentedString(keySize)).append("\n");
    sb.append("    keyType: ").append(toIndentedString(keyType)).append("\n");
    sb.append("    requiresApproval: ").append(toIndentedString(requiresApproval)).append("\n");
    sb.append("    rfCEnforcement: ").append(toIndentedString(rfCEnforcement)).append("\n");
    sb.append("    cas: ").append(toIndentedString(cas)).append("\n");
    sb.append("    enrollmentFields: ").append(toIndentedString(enrollmentFields)).append("\n");
    sb.append("    metadataFields: ").append(toIndentedString(metadataFields)).append("\n");
    sb.append("    regexes: ").append(toIndentedString(regexes)).append("\n");
    sb.append("    extendedKeyUsages: ").append(toIndentedString(extendedKeyUsages)).append("\n");
    sb.append("    curve: ").append(toIndentedString(curve)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Id");
    openapiFields.add("Name");
    openapiFields.add("DisplayName");
    openapiFields.add("Forest");
    openapiFields.add("KeySize");
    openapiFields.add("KeyType");
    openapiFields.add("RequiresApproval");
    openapiFields.add("RFCEnforcement");
    openapiFields.add("CAs");
    openapiFields.add("EnrollmentFields");
    openapiFields.add("MetadataFields");
    openapiFields.add("Regexes");
    openapiFields.add("ExtendedKeyUsages");
    openapiFields.add("Curve");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CoreModelsEnrollmentEnrollmentTemplate
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CoreModelsEnrollmentEnrollmentTemplate.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CoreModelsEnrollmentEnrollmentTemplate is not found in the empty JSON string", CoreModelsEnrollmentEnrollmentTemplate.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CoreModelsEnrollmentEnrollmentTemplate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CoreModelsEnrollmentEnrollmentTemplate` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if ((jsonObj.get("DisplayName") != null && !jsonObj.get("DisplayName").isJsonNull()) && !jsonObj.get("DisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DisplayName").toString()));
      }
      if ((jsonObj.get("Forest") != null && !jsonObj.get("Forest").isJsonNull()) && !jsonObj.get("Forest").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Forest` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Forest").toString()));
      }
      if ((jsonObj.get("KeySize") != null && !jsonObj.get("KeySize").isJsonNull()) && !jsonObj.get("KeySize").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `KeySize` to be a primitive type in the JSON string but got `%s`", jsonObj.get("KeySize").toString()));
      }
      if ((jsonObj.get("KeyType") != null && !jsonObj.get("KeyType").isJsonNull()) && !jsonObj.get("KeyType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `KeyType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("KeyType").toString()));
      }
      if (jsonObj.get("CAs") != null && !jsonObj.get("CAs").isJsonNull()) {
        JsonArray jsonArraycas = jsonObj.getAsJsonArray("CAs");
        if (jsonArraycas != null) {
          // ensure the json data is an array
          if (!jsonObj.get("CAs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `CAs` to be an array in the JSON string but got `%s`", jsonObj.get("CAs").toString()));
          }

          // validate the optional field `CAs` (array)
          for (int i = 0; i < jsonArraycas.size(); i++) {
            CoreModelsEnrollmentEnrollmentCA.validateJsonObject(jsonArraycas.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("EnrollmentFields") != null && !jsonObj.get("EnrollmentFields").isJsonNull()) {
        JsonArray jsonArrayenrollmentFields = jsonObj.getAsJsonArray("EnrollmentFields");
        if (jsonArrayenrollmentFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("EnrollmentFields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `EnrollmentFields` to be an array in the JSON string but got `%s`", jsonObj.get("EnrollmentFields").toString()));
          }

          // validate the optional field `EnrollmentFields` (array)
          for (int i = 0; i < jsonArrayenrollmentFields.size(); i++) {
            ModelsTemplateEnrollmentField.validateJsonObject(jsonArrayenrollmentFields.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("MetadataFields") != null && !jsonObj.get("MetadataFields").isJsonNull()) {
        JsonArray jsonArraymetadataFields = jsonObj.getAsJsonArray("MetadataFields");
        if (jsonArraymetadataFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("MetadataFields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `MetadataFields` to be an array in the JSON string but got `%s`", jsonObj.get("MetadataFields").toString()));
          }

          // validate the optional field `MetadataFields` (array)
          for (int i = 0; i < jsonArraymetadataFields.size(); i++) {
            ModelsTemplateMetadataField.validateJsonObject(jsonArraymetadataFields.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("Regexes") != null && !jsonObj.get("Regexes").isJsonNull()) {
        JsonArray jsonArrayregexes = jsonObj.getAsJsonArray("Regexes");
        if (jsonArrayregexes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Regexes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Regexes` to be an array in the JSON string but got `%s`", jsonObj.get("Regexes").toString()));
          }

          // validate the optional field `Regexes` (array)
          for (int i = 0; i < jsonArrayregexes.size(); i++) {
            ModelsTemplateRegex.validateJsonObject(jsonArrayregexes.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("ExtendedKeyUsages") != null && !jsonObj.get("ExtendedKeyUsages").isJsonNull()) {
        JsonArray jsonArrayextendedKeyUsages = jsonObj.getAsJsonArray("ExtendedKeyUsages");
        if (jsonArrayextendedKeyUsages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ExtendedKeyUsages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ExtendedKeyUsages` to be an array in the JSON string but got `%s`", jsonObj.get("ExtendedKeyUsages").toString()));
          }

          // validate the optional field `ExtendedKeyUsages` (array)
          for (int i = 0; i < jsonArrayextendedKeyUsages.size(); i++) {
            ModelsExtendedKeyUsage.validateJsonObject(jsonArrayextendedKeyUsages.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("Curve") != null && !jsonObj.get("Curve").isJsonNull()) && !jsonObj.get("Curve").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Curve` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Curve").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CoreModelsEnrollmentEnrollmentTemplate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CoreModelsEnrollmentEnrollmentTemplate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CoreModelsEnrollmentEnrollmentTemplate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CoreModelsEnrollmentEnrollmentTemplate.class));

       return (TypeAdapter<T>) new TypeAdapter<CoreModelsEnrollmentEnrollmentTemplate>() {
           @Override
           public void write(JsonWriter out, CoreModelsEnrollmentEnrollmentTemplate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CoreModelsEnrollmentEnrollmentTemplate read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CoreModelsEnrollmentEnrollmentTemplate given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CoreModelsEnrollmentEnrollmentTemplate
  * @throws IOException if the JSON string is invalid with respect to CoreModelsEnrollmentEnrollmentTemplate
  */
  public static CoreModelsEnrollmentEnrollmentTemplate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CoreModelsEnrollmentEnrollmentTemplate.class);
  }

 /**
  * Convert an instance of CoreModelsEnrollmentEnrollmentTemplate to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

