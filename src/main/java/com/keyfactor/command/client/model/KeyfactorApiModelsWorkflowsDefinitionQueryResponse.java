/*
 * Keyfactor-v1
 * This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keyfactor.command.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.keyfactor.command.client.JSON;

/**
 * KeyfactorApiModelsWorkflowsDefinitionQueryResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class KeyfactorApiModelsWorkflowsDefinitionQueryResponse {
  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "DisplayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_KEY = "Key";
  @SerializedName(SERIALIZED_NAME_KEY)
  private String key;

  public static final String SERIALIZED_NAME_KEY_DISPLAY_NAME = "KeyDisplayName";
  @SerializedName(SERIALIZED_NAME_KEY_DISPLAY_NAME)
  private String keyDisplayName;

  public static final String SERIALIZED_NAME_WORKFLOW_TYPE = "WorkflowType";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_TYPE)
  private String workflowType;

  public static final String SERIALIZED_NAME_DRAFT_VERSION = "DraftVersion";
  @SerializedName(SERIALIZED_NAME_DRAFT_VERSION)
  private Integer draftVersion;

  public static final String SERIALIZED_NAME_PUBLISHED_VERSION = "PublishedVersion";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_VERSION)
  private Integer publishedVersion;

  public KeyfactorApiModelsWorkflowsDefinitionQueryResponse() {
  }

  public KeyfactorApiModelsWorkflowsDefinitionQueryResponse id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public KeyfactorApiModelsWorkflowsDefinitionQueryResponse displayName(String displayName) {
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public KeyfactorApiModelsWorkflowsDefinitionQueryResponse key(String key) {
    
    this.key = key;
    return this;
  }

   /**
   * Get key
   * @return key
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getKey() {
    return key;
  }


  public void setKey(String key) {
    this.key = key;
  }


  public KeyfactorApiModelsWorkflowsDefinitionQueryResponse keyDisplayName(String keyDisplayName) {
    
    this.keyDisplayName = keyDisplayName;
    return this;
  }

   /**
   * Get keyDisplayName
   * @return keyDisplayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getKeyDisplayName() {
    return keyDisplayName;
  }


  public void setKeyDisplayName(String keyDisplayName) {
    this.keyDisplayName = keyDisplayName;
  }


  public KeyfactorApiModelsWorkflowsDefinitionQueryResponse workflowType(String workflowType) {
    
    this.workflowType = workflowType;
    return this;
  }

   /**
   * Get workflowType
   * @return workflowType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkflowType() {
    return workflowType;
  }


  public void setWorkflowType(String workflowType) {
    this.workflowType = workflowType;
  }


  public KeyfactorApiModelsWorkflowsDefinitionQueryResponse draftVersion(Integer draftVersion) {
    
    this.draftVersion = draftVersion;
    return this;
  }

   /**
   * Get draftVersion
   * @return draftVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDraftVersion() {
    return draftVersion;
  }


  public void setDraftVersion(Integer draftVersion) {
    this.draftVersion = draftVersion;
  }


  public KeyfactorApiModelsWorkflowsDefinitionQueryResponse publishedVersion(Integer publishedVersion) {
    
    this.publishedVersion = publishedVersion;
    return this;
  }

   /**
   * Get publishedVersion
   * @return publishedVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPublishedVersion() {
    return publishedVersion;
  }


  public void setPublishedVersion(Integer publishedVersion) {
    this.publishedVersion = publishedVersion;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeyfactorApiModelsWorkflowsDefinitionQueryResponse keyfactorApiModelsWorkflowsDefinitionQueryResponse = (KeyfactorApiModelsWorkflowsDefinitionQueryResponse) o;
    return Objects.equals(this.id, keyfactorApiModelsWorkflowsDefinitionQueryResponse.id) &&
        Objects.equals(this.displayName, keyfactorApiModelsWorkflowsDefinitionQueryResponse.displayName) &&
        Objects.equals(this.key, keyfactorApiModelsWorkflowsDefinitionQueryResponse.key) &&
        Objects.equals(this.keyDisplayName, keyfactorApiModelsWorkflowsDefinitionQueryResponse.keyDisplayName) &&
        Objects.equals(this.workflowType, keyfactorApiModelsWorkflowsDefinitionQueryResponse.workflowType) &&
        Objects.equals(this.draftVersion, keyfactorApiModelsWorkflowsDefinitionQueryResponse.draftVersion) &&
        Objects.equals(this.publishedVersion, keyfactorApiModelsWorkflowsDefinitionQueryResponse.publishedVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, displayName, key, keyDisplayName, workflowType, draftVersion, publishedVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeyfactorApiModelsWorkflowsDefinitionQueryResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    keyDisplayName: ").append(toIndentedString(keyDisplayName)).append("\n");
    sb.append("    workflowType: ").append(toIndentedString(workflowType)).append("\n");
    sb.append("    draftVersion: ").append(toIndentedString(draftVersion)).append("\n");
    sb.append("    publishedVersion: ").append(toIndentedString(publishedVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Id");
    openapiFields.add("DisplayName");
    openapiFields.add("Key");
    openapiFields.add("KeyDisplayName");
    openapiFields.add("WorkflowType");
    openapiFields.add("DraftVersion");
    openapiFields.add("PublishedVersion");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to KeyfactorApiModelsWorkflowsDefinitionQueryResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!KeyfactorApiModelsWorkflowsDefinitionQueryResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in KeyfactorApiModelsWorkflowsDefinitionQueryResponse is not found in the empty JSON string", KeyfactorApiModelsWorkflowsDefinitionQueryResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!KeyfactorApiModelsWorkflowsDefinitionQueryResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `KeyfactorApiModelsWorkflowsDefinitionQueryResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) && !jsonObj.get("Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Id").toString()));
      }
      if ((jsonObj.get("DisplayName") != null && !jsonObj.get("DisplayName").isJsonNull()) && !jsonObj.get("DisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DisplayName").toString()));
      }
      if ((jsonObj.get("Key") != null && !jsonObj.get("Key").isJsonNull()) && !jsonObj.get("Key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Key").toString()));
      }
      if ((jsonObj.get("KeyDisplayName") != null && !jsonObj.get("KeyDisplayName").isJsonNull()) && !jsonObj.get("KeyDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `KeyDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("KeyDisplayName").toString()));
      }
      if ((jsonObj.get("WorkflowType") != null && !jsonObj.get("WorkflowType").isJsonNull()) && !jsonObj.get("WorkflowType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `WorkflowType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("WorkflowType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!KeyfactorApiModelsWorkflowsDefinitionQueryResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'KeyfactorApiModelsWorkflowsDefinitionQueryResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<KeyfactorApiModelsWorkflowsDefinitionQueryResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(KeyfactorApiModelsWorkflowsDefinitionQueryResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<KeyfactorApiModelsWorkflowsDefinitionQueryResponse>() {
           @Override
           public void write(JsonWriter out, KeyfactorApiModelsWorkflowsDefinitionQueryResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public KeyfactorApiModelsWorkflowsDefinitionQueryResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of KeyfactorApiModelsWorkflowsDefinitionQueryResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of KeyfactorApiModelsWorkflowsDefinitionQueryResponse
  * @throws IOException if the JSON string is invalid with respect to KeyfactorApiModelsWorkflowsDefinitionQueryResponse
  */
  public static KeyfactorApiModelsWorkflowsDefinitionQueryResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, KeyfactorApiModelsWorkflowsDefinitionQueryResponse.class);
  }

 /**
  * Convert an instance of KeyfactorApiModelsWorkflowsDefinitionQueryResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

