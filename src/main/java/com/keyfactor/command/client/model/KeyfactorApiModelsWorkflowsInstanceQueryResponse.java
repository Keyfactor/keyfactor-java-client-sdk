/*
 * Keyfactor-v1
 * This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keyfactor.command.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsInstanceDefinitionResponse;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.UUID;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.keyfactor.command.client.JSON;

/**
 * KeyfactorApiModelsWorkflowsInstanceQueryResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class KeyfactorApiModelsWorkflowsInstanceQueryResponse {
  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6);

    private Integer value;

    StatusEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(Integer value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_CURRENT_STEP_ID = "CurrentStepId";
  @SerializedName(SERIALIZED_NAME_CURRENT_STEP_ID)
  private UUID currentStepId;

  public static final String SERIALIZED_NAME_STATUS_MESSAGE = "StatusMessage";
  @SerializedName(SERIALIZED_NAME_STATUS_MESSAGE)
  private String statusMessage;

  public static final String SERIALIZED_NAME_DEFINITION = "Definition";
  @SerializedName(SERIALIZED_NAME_DEFINITION)
  private KeyfactorApiModelsWorkflowsInstanceDefinitionResponse definition;

  public static final String SERIALIZED_NAME_CURRENT_STEP_DISPLAY_NAME = "CurrentStepDisplayName";
  @SerializedName(SERIALIZED_NAME_CURRENT_STEP_DISPLAY_NAME)
  private String currentStepDisplayName;

  public static final String SERIALIZED_NAME_CURRENT_STEP_UNIQUE_NAME = "CurrentStepUniqueName";
  @SerializedName(SERIALIZED_NAME_CURRENT_STEP_UNIQUE_NAME)
  private String currentStepUniqueName;

  public static final String SERIALIZED_NAME_TITLE = "Title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_LAST_MODIFIED = "LastModified";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED)
  private OffsetDateTime lastModified;

  public static final String SERIALIZED_NAME_START_DATE = "StartDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_REFERENCE_ID = "ReferenceId";
  @SerializedName(SERIALIZED_NAME_REFERENCE_ID)
  private Long referenceId;

  public KeyfactorApiModelsWorkflowsInstanceQueryResponse() {
  }

  public KeyfactorApiModelsWorkflowsInstanceQueryResponse id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public KeyfactorApiModelsWorkflowsInstanceQueryResponse status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public KeyfactorApiModelsWorkflowsInstanceQueryResponse currentStepId(UUID currentStepId) {
    
    this.currentStepId = currentStepId;
    return this;
  }

   /**
   * Get currentStepId
   * @return currentStepId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getCurrentStepId() {
    return currentStepId;
  }


  public void setCurrentStepId(UUID currentStepId) {
    this.currentStepId = currentStepId;
  }


  public KeyfactorApiModelsWorkflowsInstanceQueryResponse statusMessage(String statusMessage) {
    
    this.statusMessage = statusMessage;
    return this;
  }

   /**
   * Get statusMessage
   * @return statusMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatusMessage() {
    return statusMessage;
  }


  public void setStatusMessage(String statusMessage) {
    this.statusMessage = statusMessage;
  }


  public KeyfactorApiModelsWorkflowsInstanceQueryResponse definition(KeyfactorApiModelsWorkflowsInstanceDefinitionResponse definition) {
    
    this.definition = definition;
    return this;
  }

   /**
   * Get definition
   * @return definition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public KeyfactorApiModelsWorkflowsInstanceDefinitionResponse getDefinition() {
    return definition;
  }


  public void setDefinition(KeyfactorApiModelsWorkflowsInstanceDefinitionResponse definition) {
    this.definition = definition;
  }


  public KeyfactorApiModelsWorkflowsInstanceQueryResponse currentStepDisplayName(String currentStepDisplayName) {
    
    this.currentStepDisplayName = currentStepDisplayName;
    return this;
  }

   /**
   * Get currentStepDisplayName
   * @return currentStepDisplayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurrentStepDisplayName() {
    return currentStepDisplayName;
  }


  public void setCurrentStepDisplayName(String currentStepDisplayName) {
    this.currentStepDisplayName = currentStepDisplayName;
  }


  public KeyfactorApiModelsWorkflowsInstanceQueryResponse currentStepUniqueName(String currentStepUniqueName) {
    
    this.currentStepUniqueName = currentStepUniqueName;
    return this;
  }

   /**
   * Get currentStepUniqueName
   * @return currentStepUniqueName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurrentStepUniqueName() {
    return currentStepUniqueName;
  }


  public void setCurrentStepUniqueName(String currentStepUniqueName) {
    this.currentStepUniqueName = currentStepUniqueName;
  }


  public KeyfactorApiModelsWorkflowsInstanceQueryResponse title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public KeyfactorApiModelsWorkflowsInstanceQueryResponse lastModified(OffsetDateTime lastModified) {
    
    this.lastModified = lastModified;
    return this;
  }

   /**
   * Get lastModified
   * @return lastModified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getLastModified() {
    return lastModified;
  }


  public void setLastModified(OffsetDateTime lastModified) {
    this.lastModified = lastModified;
  }


  public KeyfactorApiModelsWorkflowsInstanceQueryResponse startDate(OffsetDateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public KeyfactorApiModelsWorkflowsInstanceQueryResponse referenceId(Long referenceId) {
    
    this.referenceId = referenceId;
    return this;
  }

   /**
   * Get referenceId
   * @return referenceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getReferenceId() {
    return referenceId;
  }


  public void setReferenceId(Long referenceId) {
    this.referenceId = referenceId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeyfactorApiModelsWorkflowsInstanceQueryResponse keyfactorApiModelsWorkflowsInstanceQueryResponse = (KeyfactorApiModelsWorkflowsInstanceQueryResponse) o;
    return Objects.equals(this.id, keyfactorApiModelsWorkflowsInstanceQueryResponse.id) &&
        Objects.equals(this.status, keyfactorApiModelsWorkflowsInstanceQueryResponse.status) &&
        Objects.equals(this.currentStepId, keyfactorApiModelsWorkflowsInstanceQueryResponse.currentStepId) &&
        Objects.equals(this.statusMessage, keyfactorApiModelsWorkflowsInstanceQueryResponse.statusMessage) &&
        Objects.equals(this.definition, keyfactorApiModelsWorkflowsInstanceQueryResponse.definition) &&
        Objects.equals(this.currentStepDisplayName, keyfactorApiModelsWorkflowsInstanceQueryResponse.currentStepDisplayName) &&
        Objects.equals(this.currentStepUniqueName, keyfactorApiModelsWorkflowsInstanceQueryResponse.currentStepUniqueName) &&
        Objects.equals(this.title, keyfactorApiModelsWorkflowsInstanceQueryResponse.title) &&
        Objects.equals(this.lastModified, keyfactorApiModelsWorkflowsInstanceQueryResponse.lastModified) &&
        Objects.equals(this.startDate, keyfactorApiModelsWorkflowsInstanceQueryResponse.startDate) &&
        Objects.equals(this.referenceId, keyfactorApiModelsWorkflowsInstanceQueryResponse.referenceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, status, currentStepId, statusMessage, definition, currentStepDisplayName, currentStepUniqueName, title, lastModified, startDate, referenceId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeyfactorApiModelsWorkflowsInstanceQueryResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    currentStepId: ").append(toIndentedString(currentStepId)).append("\n");
    sb.append("    statusMessage: ").append(toIndentedString(statusMessage)).append("\n");
    sb.append("    definition: ").append(toIndentedString(definition)).append("\n");
    sb.append("    currentStepDisplayName: ").append(toIndentedString(currentStepDisplayName)).append("\n");
    sb.append("    currentStepUniqueName: ").append(toIndentedString(currentStepUniqueName)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    referenceId: ").append(toIndentedString(referenceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Id");
    openapiFields.add("Status");
    openapiFields.add("CurrentStepId");
    openapiFields.add("StatusMessage");
    openapiFields.add("Definition");
    openapiFields.add("CurrentStepDisplayName");
    openapiFields.add("CurrentStepUniqueName");
    openapiFields.add("Title");
    openapiFields.add("LastModified");
    openapiFields.add("StartDate");
    openapiFields.add("ReferenceId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to KeyfactorApiModelsWorkflowsInstanceQueryResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!KeyfactorApiModelsWorkflowsInstanceQueryResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in KeyfactorApiModelsWorkflowsInstanceQueryResponse is not found in the empty JSON string", KeyfactorApiModelsWorkflowsInstanceQueryResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!KeyfactorApiModelsWorkflowsInstanceQueryResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `KeyfactorApiModelsWorkflowsInstanceQueryResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) && !jsonObj.get("Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Id").toString()));
      }
      if ((jsonObj.get("CurrentStepId") != null && !jsonObj.get("CurrentStepId").isJsonNull()) && !jsonObj.get("CurrentStepId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CurrentStepId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CurrentStepId").toString()));
      }
      if ((jsonObj.get("StatusMessage") != null && !jsonObj.get("StatusMessage").isJsonNull()) && !jsonObj.get("StatusMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StatusMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StatusMessage").toString()));
      }
      // validate the optional field `Definition`
      if (jsonObj.get("Definition") != null && !jsonObj.get("Definition").isJsonNull()) {
        KeyfactorApiModelsWorkflowsInstanceDefinitionResponse.validateJsonObject(jsonObj.getAsJsonObject("Definition"));
      }
      if ((jsonObj.get("CurrentStepDisplayName") != null && !jsonObj.get("CurrentStepDisplayName").isJsonNull()) && !jsonObj.get("CurrentStepDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CurrentStepDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CurrentStepDisplayName").toString()));
      }
      if ((jsonObj.get("CurrentStepUniqueName") != null && !jsonObj.get("CurrentStepUniqueName").isJsonNull()) && !jsonObj.get("CurrentStepUniqueName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CurrentStepUniqueName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CurrentStepUniqueName").toString()));
      }
      if ((jsonObj.get("Title") != null && !jsonObj.get("Title").isJsonNull()) && !jsonObj.get("Title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!KeyfactorApiModelsWorkflowsInstanceQueryResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'KeyfactorApiModelsWorkflowsInstanceQueryResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<KeyfactorApiModelsWorkflowsInstanceQueryResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(KeyfactorApiModelsWorkflowsInstanceQueryResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<KeyfactorApiModelsWorkflowsInstanceQueryResponse>() {
           @Override
           public void write(JsonWriter out, KeyfactorApiModelsWorkflowsInstanceQueryResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public KeyfactorApiModelsWorkflowsInstanceQueryResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of KeyfactorApiModelsWorkflowsInstanceQueryResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of KeyfactorApiModelsWorkflowsInstanceQueryResponse
  * @throws IOException if the JSON string is invalid with respect to KeyfactorApiModelsWorkflowsInstanceQueryResponse
  */
  public static KeyfactorApiModelsWorkflowsInstanceQueryResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, KeyfactorApiModelsWorkflowsInstanceQueryResponse.class);
  }

 /**
  * Convert an instance of KeyfactorApiModelsWorkflowsInstanceQueryResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

