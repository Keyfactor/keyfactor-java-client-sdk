/*
 * Keyfactor-v1
 * This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keyfactor.command.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.keyfactor.command.client.model.KeyfactorCommonSchedulingKeyfactorSchedule;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.UUID;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.keyfactor.command.client.JSON;

/**
 * KeyfactorApiModelsCertificateStoresJobHistoryResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-08T11:48:36.483-07:00[America/Phoenix]")
public class KeyfactorApiModelsCertificateStoresJobHistoryResponse {
  public static final String SERIALIZED_NAME_JOB_HISTORY_ID = "JobHistoryId";
  @SerializedName(SERIALIZED_NAME_JOB_HISTORY_ID)
  private Long jobHistoryId;

  public static final String SERIALIZED_NAME_AGENT_MACHINE = "AgentMachine";
  @SerializedName(SERIALIZED_NAME_AGENT_MACHINE)
  private String agentMachine;

  public static final String SERIALIZED_NAME_JOB_ID = "JobId";
  @SerializedName(SERIALIZED_NAME_JOB_ID)
  private UUID jobId;

  public static final String SERIALIZED_NAME_SCHEDULE = "Schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private KeyfactorCommonSchedulingKeyfactorSchedule schedule;

  public static final String SERIALIZED_NAME_JOB_TYPE = "JobType";
  @SerializedName(SERIALIZED_NAME_JOB_TYPE)
  private String jobType;

  public static final String SERIALIZED_NAME_OPERATION_START = "OperationStart";
  @SerializedName(SERIALIZED_NAME_OPERATION_START)
  private OffsetDateTime operationStart;

  public static final String SERIALIZED_NAME_OPERATION_END = "OperationEnd";
  @SerializedName(SERIALIZED_NAME_OPERATION_END)
  private OffsetDateTime operationEnd;

  public static final String SERIALIZED_NAME_MESSAGE = "Message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  /**
   * Gets or Sets result
   */
  @JsonAdapter(ResultEnum.Adapter.class)
  public enum ResultEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4);

    private Integer value;

    ResultEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ResultEnum fromValue(Integer value) {
      for (ResultEnum b : ResultEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ResultEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ResultEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ResultEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return ResultEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_RESULT = "Result";
  @SerializedName(SERIALIZED_NAME_RESULT)
  private ResultEnum result;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5);

    private Integer value;

    StatusEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(Integer value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_STORE_PATH = "StorePath";
  @SerializedName(SERIALIZED_NAME_STORE_PATH)
  private String storePath;

  public static final String SERIALIZED_NAME_CLIENT_MACHINE = "ClientMachine";
  @SerializedName(SERIALIZED_NAME_CLIENT_MACHINE)
  private String clientMachine;

  public KeyfactorApiModelsCertificateStoresJobHistoryResponse() {
  }

  public KeyfactorApiModelsCertificateStoresJobHistoryResponse jobHistoryId(Long jobHistoryId) {
    
    this.jobHistoryId = jobHistoryId;
    return this;
  }

   /**
   * Get jobHistoryId
   * @return jobHistoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getJobHistoryId() {
    return jobHistoryId;
  }


  public void setJobHistoryId(Long jobHistoryId) {
    this.jobHistoryId = jobHistoryId;
  }


  public KeyfactorApiModelsCertificateStoresJobHistoryResponse agentMachine(String agentMachine) {
    
    this.agentMachine = agentMachine;
    return this;
  }

   /**
   * Get agentMachine
   * @return agentMachine
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAgentMachine() {
    return agentMachine;
  }


  public void setAgentMachine(String agentMachine) {
    this.agentMachine = agentMachine;
  }


  public KeyfactorApiModelsCertificateStoresJobHistoryResponse jobId(UUID jobId) {
    
    this.jobId = jobId;
    return this;
  }

   /**
   * Get jobId
   * @return jobId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getJobId() {
    return jobId;
  }


  public void setJobId(UUID jobId) {
    this.jobId = jobId;
  }


  public KeyfactorApiModelsCertificateStoresJobHistoryResponse schedule(KeyfactorCommonSchedulingKeyfactorSchedule schedule) {
    
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public KeyfactorCommonSchedulingKeyfactorSchedule getSchedule() {
    return schedule;
  }


  public void setSchedule(KeyfactorCommonSchedulingKeyfactorSchedule schedule) {
    this.schedule = schedule;
  }


  public KeyfactorApiModelsCertificateStoresJobHistoryResponse jobType(String jobType) {
    
    this.jobType = jobType;
    return this;
  }

   /**
   * Get jobType
   * @return jobType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobType() {
    return jobType;
  }


  public void setJobType(String jobType) {
    this.jobType = jobType;
  }


  public KeyfactorApiModelsCertificateStoresJobHistoryResponse operationStart(OffsetDateTime operationStart) {
    
    this.operationStart = operationStart;
    return this;
  }

   /**
   * Get operationStart
   * @return operationStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getOperationStart() {
    return operationStart;
  }


  public void setOperationStart(OffsetDateTime operationStart) {
    this.operationStart = operationStart;
  }


  public KeyfactorApiModelsCertificateStoresJobHistoryResponse operationEnd(OffsetDateTime operationEnd) {
    
    this.operationEnd = operationEnd;
    return this;
  }

   /**
   * Get operationEnd
   * @return operationEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getOperationEnd() {
    return operationEnd;
  }


  public void setOperationEnd(OffsetDateTime operationEnd) {
    this.operationEnd = operationEnd;
  }


  public KeyfactorApiModelsCertificateStoresJobHistoryResponse message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  public KeyfactorApiModelsCertificateStoresJobHistoryResponse result(ResultEnum result) {
    
    this.result = result;
    return this;
  }

   /**
   * Get result
   * @return result
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ResultEnum getResult() {
    return result;
  }


  public void setResult(ResultEnum result) {
    this.result = result;
  }


  public KeyfactorApiModelsCertificateStoresJobHistoryResponse status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public KeyfactorApiModelsCertificateStoresJobHistoryResponse storePath(String storePath) {
    
    this.storePath = storePath;
    return this;
  }

   /**
   * Get storePath
   * @return storePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStorePath() {
    return storePath;
  }


  public void setStorePath(String storePath) {
    this.storePath = storePath;
  }


  public KeyfactorApiModelsCertificateStoresJobHistoryResponse clientMachine(String clientMachine) {
    
    this.clientMachine = clientMachine;
    return this;
  }

   /**
   * Get clientMachine
   * @return clientMachine
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getClientMachine() {
    return clientMachine;
  }


  public void setClientMachine(String clientMachine) {
    this.clientMachine = clientMachine;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeyfactorApiModelsCertificateStoresJobHistoryResponse keyfactorApiModelsCertificateStoresJobHistoryResponse = (KeyfactorApiModelsCertificateStoresJobHistoryResponse) o;
    return Objects.equals(this.jobHistoryId, keyfactorApiModelsCertificateStoresJobHistoryResponse.jobHistoryId) &&
        Objects.equals(this.agentMachine, keyfactorApiModelsCertificateStoresJobHistoryResponse.agentMachine) &&
        Objects.equals(this.jobId, keyfactorApiModelsCertificateStoresJobHistoryResponse.jobId) &&
        Objects.equals(this.schedule, keyfactorApiModelsCertificateStoresJobHistoryResponse.schedule) &&
        Objects.equals(this.jobType, keyfactorApiModelsCertificateStoresJobHistoryResponse.jobType) &&
        Objects.equals(this.operationStart, keyfactorApiModelsCertificateStoresJobHistoryResponse.operationStart) &&
        Objects.equals(this.operationEnd, keyfactorApiModelsCertificateStoresJobHistoryResponse.operationEnd) &&
        Objects.equals(this.message, keyfactorApiModelsCertificateStoresJobHistoryResponse.message) &&
        Objects.equals(this.result, keyfactorApiModelsCertificateStoresJobHistoryResponse.result) &&
        Objects.equals(this.status, keyfactorApiModelsCertificateStoresJobHistoryResponse.status) &&
        Objects.equals(this.storePath, keyfactorApiModelsCertificateStoresJobHistoryResponse.storePath) &&
        Objects.equals(this.clientMachine, keyfactorApiModelsCertificateStoresJobHistoryResponse.clientMachine);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobHistoryId, agentMachine, jobId, schedule, jobType, operationStart, operationEnd, message, result, status, storePath, clientMachine);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeyfactorApiModelsCertificateStoresJobHistoryResponse {\n");
    sb.append("    jobHistoryId: ").append(toIndentedString(jobHistoryId)).append("\n");
    sb.append("    agentMachine: ").append(toIndentedString(agentMachine)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    jobType: ").append(toIndentedString(jobType)).append("\n");
    sb.append("    operationStart: ").append(toIndentedString(operationStart)).append("\n");
    sb.append("    operationEnd: ").append(toIndentedString(operationEnd)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    storePath: ").append(toIndentedString(storePath)).append("\n");
    sb.append("    clientMachine: ").append(toIndentedString(clientMachine)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("JobHistoryId");
    openapiFields.add("AgentMachine");
    openapiFields.add("JobId");
    openapiFields.add("Schedule");
    openapiFields.add("JobType");
    openapiFields.add("OperationStart");
    openapiFields.add("OperationEnd");
    openapiFields.add("Message");
    openapiFields.add("Result");
    openapiFields.add("Status");
    openapiFields.add("StorePath");
    openapiFields.add("ClientMachine");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to KeyfactorApiModelsCertificateStoresJobHistoryResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!KeyfactorApiModelsCertificateStoresJobHistoryResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in KeyfactorApiModelsCertificateStoresJobHistoryResponse is not found in the empty JSON string", KeyfactorApiModelsCertificateStoresJobHistoryResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!KeyfactorApiModelsCertificateStoresJobHistoryResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `KeyfactorApiModelsCertificateStoresJobHistoryResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("AgentMachine") != null && !jsonObj.get("AgentMachine").isJsonNull()) && !jsonObj.get("AgentMachine").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AgentMachine` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AgentMachine").toString()));
      }
      if ((jsonObj.get("JobId") != null && !jsonObj.get("JobId").isJsonNull()) && !jsonObj.get("JobId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `JobId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("JobId").toString()));
      }
      // validate the optional field `Schedule`
      if (jsonObj.get("Schedule") != null && !jsonObj.get("Schedule").isJsonNull()) {
        KeyfactorCommonSchedulingKeyfactorSchedule.validateJsonObject(jsonObj.getAsJsonObject("Schedule"));
      }
      if ((jsonObj.get("JobType") != null && !jsonObj.get("JobType").isJsonNull()) && !jsonObj.get("JobType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `JobType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("JobType").toString()));
      }
      if ((jsonObj.get("Message") != null && !jsonObj.get("Message").isJsonNull()) && !jsonObj.get("Message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Message").toString()));
      }
      if ((jsonObj.get("StorePath") != null && !jsonObj.get("StorePath").isJsonNull()) && !jsonObj.get("StorePath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StorePath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StorePath").toString()));
      }
      if ((jsonObj.get("ClientMachine") != null && !jsonObj.get("ClientMachine").isJsonNull()) && !jsonObj.get("ClientMachine").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ClientMachine` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ClientMachine").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!KeyfactorApiModelsCertificateStoresJobHistoryResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'KeyfactorApiModelsCertificateStoresJobHistoryResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<KeyfactorApiModelsCertificateStoresJobHistoryResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(KeyfactorApiModelsCertificateStoresJobHistoryResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<KeyfactorApiModelsCertificateStoresJobHistoryResponse>() {
           @Override
           public void write(JsonWriter out, KeyfactorApiModelsCertificateStoresJobHistoryResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public KeyfactorApiModelsCertificateStoresJobHistoryResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of KeyfactorApiModelsCertificateStoresJobHistoryResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of KeyfactorApiModelsCertificateStoresJobHistoryResponse
  * @throws IOException if the JSON string is invalid with respect to KeyfactorApiModelsCertificateStoresJobHistoryResponse
  */
  public static KeyfactorApiModelsCertificateStoresJobHistoryResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, KeyfactorApiModelsCertificateStoresJobHistoryResponse.class);
  }

 /**
  * Convert an instance of KeyfactorApiModelsCertificateStoresJobHistoryResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

