/*
 * Keyfactor-v1
 * This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keyfactor.command.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.keyfactor.command.client.model.ModelsCertificateRetrievalResponseCRLDistributionPointModel;
import com.keyfactor.command.client.model.ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel;
import com.keyfactor.command.client.model.ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel;
import com.keyfactor.command.client.model.ModelsCertificateRetrievalResponseDetailedKeyUsageModel;
import com.keyfactor.command.client.model.ModelsCertificateRetrievalResponseExtendedKeyUsageModel;
import com.keyfactor.command.client.model.ModelsCertificateRetrievalResponseLocationCountModel;
import com.keyfactor.command.client.model.ModelsCertificateRetrievalResponseSubjectAlternativeNameModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.keyfactor.command.client.JSON;

/**
 * ModelsCertificateRetrievalResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ModelsCertificateRetrievalResponse {
  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_THUMBPRINT = "Thumbprint";
  @SerializedName(SERIALIZED_NAME_THUMBPRINT)
  private byte[] thumbprint;

  public static final String SERIALIZED_NAME_SERIAL_NUMBER = "SerialNumber";
  @SerializedName(SERIALIZED_NAME_SERIAL_NUMBER)
  private byte[] serialNumber;

  public static final String SERIALIZED_NAME_ISSUED_D_N = "IssuedDN";
  @SerializedName(SERIALIZED_NAME_ISSUED_D_N)
  private String issuedDN;

  public static final String SERIALIZED_NAME_ISSUED_C_N = "IssuedCN";
  @SerializedName(SERIALIZED_NAME_ISSUED_C_N)
  private String issuedCN;

  public static final String SERIALIZED_NAME_IMPORT_DATE = "ImportDate";
  @SerializedName(SERIALIZED_NAME_IMPORT_DATE)
  private OffsetDateTime importDate;

  public static final String SERIALIZED_NAME_NOT_BEFORE = "NotBefore";
  @SerializedName(SERIALIZED_NAME_NOT_BEFORE)
  private OffsetDateTime notBefore;

  public static final String SERIALIZED_NAME_NOT_AFTER = "NotAfter";
  @SerializedName(SERIALIZED_NAME_NOT_AFTER)
  private OffsetDateTime notAfter;

  public static final String SERIALIZED_NAME_ISSUER_D_N = "IssuerDN";
  @SerializedName(SERIALIZED_NAME_ISSUER_D_N)
  private String issuerDN;

  public static final String SERIALIZED_NAME_PRINCIPAL_ID = "PrincipalId";
  @SerializedName(SERIALIZED_NAME_PRINCIPAL_ID)
  private Integer principalId;

  public static final String SERIALIZED_NAME_TEMPLATE_ID = "TemplateId";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_ID)
  private Integer templateId;

  /**
   * Gets or Sets certState
   */
  @JsonAdapter(CertStateEnum.Adapter.class)
  public enum CertStateEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6),
    
    NUMBER_7(7),
    
    NUMBER_8(8);

    private Integer value;

    CertStateEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CertStateEnum fromValue(Integer value) {
      for (CertStateEnum b : CertStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CertStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CertStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CertStateEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return CertStateEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CERT_STATE = "CertState";
  @SerializedName(SERIALIZED_NAME_CERT_STATE)
  private CertStateEnum certState;

  public static final String SERIALIZED_NAME_KEY_SIZE_IN_BITS = "KeySizeInBits";
  @SerializedName(SERIALIZED_NAME_KEY_SIZE_IN_BITS)
  private Integer keySizeInBits;

  /**
   * Gets or Sets keyType
   */
  @JsonAdapter(KeyTypeEnum.Adapter.class)
  public enum KeyTypeEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4);

    private Integer value;

    KeyTypeEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static KeyTypeEnum fromValue(Integer value) {
      for (KeyTypeEnum b : KeyTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<KeyTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final KeyTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public KeyTypeEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return KeyTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_KEY_TYPE = "KeyType";
  @SerializedName(SERIALIZED_NAME_KEY_TYPE)
  private KeyTypeEnum keyType;

  public static final String SERIALIZED_NAME_REQUESTER_ID = "RequesterId";
  @SerializedName(SERIALIZED_NAME_REQUESTER_ID)
  private Integer requesterId;

  public static final String SERIALIZED_NAME_ISSUED_O_U = "IssuedOU";
  @SerializedName(SERIALIZED_NAME_ISSUED_O_U)
  private String issuedOU;

  public static final String SERIALIZED_NAME_ISSUED_EMAIL = "IssuedEmail";
  @SerializedName(SERIALIZED_NAME_ISSUED_EMAIL)
  private String issuedEmail;

  public static final String SERIALIZED_NAME_KEY_USAGE = "KeyUsage";
  @SerializedName(SERIALIZED_NAME_KEY_USAGE)
  private Integer keyUsage;

  public static final String SERIALIZED_NAME_SIGNING_ALGORITHM = "SigningAlgorithm";
  @SerializedName(SERIALIZED_NAME_SIGNING_ALGORITHM)
  private String signingAlgorithm;

  public static final String SERIALIZED_NAME_CERT_STATE_STRING = "CertStateString";
  @SerializedName(SERIALIZED_NAME_CERT_STATE_STRING)
  private String certStateString;

  public static final String SERIALIZED_NAME_KEY_TYPE_STRING = "KeyTypeString";
  @SerializedName(SERIALIZED_NAME_KEY_TYPE_STRING)
  private String keyTypeString;

  public static final String SERIALIZED_NAME_REVOCATION_EFF_DATE = "RevocationEffDate";
  @SerializedName(SERIALIZED_NAME_REVOCATION_EFF_DATE)
  private OffsetDateTime revocationEffDate;

  /**
   * Gets or Sets revocationReason
   */
  @JsonAdapter(RevocationReasonEnum.Adapter.class)
  public enum RevocationReasonEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6),
    
    NUMBER_8(8),
    
    NUMBER_999(999),
    
    NUMBER_MINUS_1(-1);

    private Integer value;

    RevocationReasonEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RevocationReasonEnum fromValue(Integer value) {
      for (RevocationReasonEnum b : RevocationReasonEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RevocationReasonEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RevocationReasonEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RevocationReasonEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return RevocationReasonEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_REVOCATION_REASON = "RevocationReason";
  @SerializedName(SERIALIZED_NAME_REVOCATION_REASON)
  private RevocationReasonEnum revocationReason;

  public static final String SERIALIZED_NAME_REVOCATION_COMMENT = "RevocationComment";
  @SerializedName(SERIALIZED_NAME_REVOCATION_COMMENT)
  private String revocationComment;

  public static final String SERIALIZED_NAME_CERTIFICATE_AUTHORITY_ID = "CertificateAuthorityId";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_AUTHORITY_ID)
  private Integer certificateAuthorityId;

  public static final String SERIALIZED_NAME_CERTIFICATE_AUTHORITY_NAME = "CertificateAuthorityName";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_AUTHORITY_NAME)
  private String certificateAuthorityName;

  public static final String SERIALIZED_NAME_TEMPLATE_NAME = "TemplateName";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_NAME)
  private String templateName;

  public static final String SERIALIZED_NAME_ARCHIVED_KEY = "ArchivedKey";
  @SerializedName(SERIALIZED_NAME_ARCHIVED_KEY)
  private Boolean archivedKey;

  public static final String SERIALIZED_NAME_HAS_PRIVATE_KEY = "HasPrivateKey";
  @SerializedName(SERIALIZED_NAME_HAS_PRIVATE_KEY)
  private Boolean hasPrivateKey;

  public static final String SERIALIZED_NAME_PRINCIPAL_NAME = "PrincipalName";
  @SerializedName(SERIALIZED_NAME_PRINCIPAL_NAME)
  private String principalName;

  public static final String SERIALIZED_NAME_CERT_REQUEST_ID = "CertRequestId";
  @SerializedName(SERIALIZED_NAME_CERT_REQUEST_ID)
  private Integer certRequestId;

  public static final String SERIALIZED_NAME_REQUESTER_NAME = "RequesterName";
  @SerializedName(SERIALIZED_NAME_REQUESTER_NAME)
  private String requesterName;

  public static final String SERIALIZED_NAME_CONTENT_BYTES = "ContentBytes";
  @SerializedName(SERIALIZED_NAME_CONTENT_BYTES)
  private byte[] contentBytes;

  public static final String SERIALIZED_NAME_EXTENDED_KEY_USAGES = "ExtendedKeyUsages";
  @SerializedName(SERIALIZED_NAME_EXTENDED_KEY_USAGES)
  private List<ModelsCertificateRetrievalResponseExtendedKeyUsageModel> extendedKeyUsages = null;

  public static final String SERIALIZED_NAME_SUBJECT_ALT_NAME_ELEMENTS = "SubjectAltNameElements";
  @SerializedName(SERIALIZED_NAME_SUBJECT_ALT_NAME_ELEMENTS)
  private List<ModelsCertificateRetrievalResponseSubjectAlternativeNameModel> subjectAltNameElements = null;

  public static final String SERIALIZED_NAME_CR_L_DISTRIBUTION_POINTS = "CRLDistributionPoints";
  @SerializedName(SERIALIZED_NAME_CR_L_DISTRIBUTION_POINTS)
  private List<ModelsCertificateRetrievalResponseCRLDistributionPointModel> crLDistributionPoints = null;

  public static final String SERIALIZED_NAME_LOCATIONS_COUNT = "LocationsCount";
  @SerializedName(SERIALIZED_NAME_LOCATIONS_COUNT)
  private List<ModelsCertificateRetrievalResponseLocationCountModel> locationsCount = null;

  public static final String SERIALIZED_NAME_SS_L_LOCATIONS = "SSLLocations";
  @SerializedName(SERIALIZED_NAME_SS_L_LOCATIONS)
  private List<ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel> ssLLocations = null;

  public static final String SERIALIZED_NAME_LOCATIONS = "Locations";
  @SerializedName(SERIALIZED_NAME_LOCATIONS)
  private List<ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel> locations = null;

  public static final String SERIALIZED_NAME_METADATA = "Metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Map<String, String> metadata = null;

  public static final String SERIALIZED_NAME_CERTIFICATE_KEY_ID = "CertificateKeyId";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_KEY_ID)
  private Integer certificateKeyId;

  public static final String SERIALIZED_NAME_CA_ROW_INDEX = "CARowIndex";
  @SerializedName(SERIALIZED_NAME_CA_ROW_INDEX)
  private Long caRowIndex;

  public static final String SERIALIZED_NAME_CA_RECORD_ID = "CARecordId";
  @SerializedName(SERIALIZED_NAME_CA_RECORD_ID)
  private String caRecordId;

  public static final String SERIALIZED_NAME_DETAILED_KEY_USAGE = "DetailedKeyUsage";
  @SerializedName(SERIALIZED_NAME_DETAILED_KEY_USAGE)
  private ModelsCertificateRetrievalResponseDetailedKeyUsageModel detailedKeyUsage;

  public static final String SERIALIZED_NAME_KEY_RECOVERABLE = "KeyRecoverable";
  @SerializedName(SERIALIZED_NAME_KEY_RECOVERABLE)
  private Boolean keyRecoverable;

  public static final String SERIALIZED_NAME_CURVE = "Curve";
  @SerializedName(SERIALIZED_NAME_CURVE)
  private String curve;

  public ModelsCertificateRetrievalResponse() {
  }

  
  public ModelsCertificateRetrievalResponse(
     Long caRowIndex
  ) {
    this();
    this.caRowIndex = caRowIndex;
  }

  public ModelsCertificateRetrievalResponse id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public ModelsCertificateRetrievalResponse thumbprint(byte[] thumbprint) {
    
    this.thumbprint = thumbprint;
    return this;
  }

   /**
   * Get thumbprint
   * @return thumbprint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public byte[] getThumbprint() {
    return thumbprint;
  }


  public void setThumbprint(byte[] thumbprint) {
    this.thumbprint = thumbprint;
  }


  public ModelsCertificateRetrievalResponse serialNumber(byte[] serialNumber) {
    
    this.serialNumber = serialNumber;
    return this;
  }

   /**
   * Get serialNumber
   * @return serialNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public byte[] getSerialNumber() {
    return serialNumber;
  }


  public void setSerialNumber(byte[] serialNumber) {
    this.serialNumber = serialNumber;
  }


  public ModelsCertificateRetrievalResponse issuedDN(String issuedDN) {
    
    this.issuedDN = issuedDN;
    return this;
  }

   /**
   * Get issuedDN
   * @return issuedDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIssuedDN() {
    return issuedDN;
  }


  public void setIssuedDN(String issuedDN) {
    this.issuedDN = issuedDN;
  }


  public ModelsCertificateRetrievalResponse issuedCN(String issuedCN) {
    
    this.issuedCN = issuedCN;
    return this;
  }

   /**
   * Get issuedCN
   * @return issuedCN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIssuedCN() {
    return issuedCN;
  }


  public void setIssuedCN(String issuedCN) {
    this.issuedCN = issuedCN;
  }


  public ModelsCertificateRetrievalResponse importDate(OffsetDateTime importDate) {
    
    this.importDate = importDate;
    return this;
  }

   /**
   * Get importDate
   * @return importDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getImportDate() {
    return importDate;
  }


  public void setImportDate(OffsetDateTime importDate) {
    this.importDate = importDate;
  }


  public ModelsCertificateRetrievalResponse notBefore(OffsetDateTime notBefore) {
    
    this.notBefore = notBefore;
    return this;
  }

   /**
   * Get notBefore
   * @return notBefore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getNotBefore() {
    return notBefore;
  }


  public void setNotBefore(OffsetDateTime notBefore) {
    this.notBefore = notBefore;
  }


  public ModelsCertificateRetrievalResponse notAfter(OffsetDateTime notAfter) {
    
    this.notAfter = notAfter;
    return this;
  }

   /**
   * Get notAfter
   * @return notAfter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getNotAfter() {
    return notAfter;
  }


  public void setNotAfter(OffsetDateTime notAfter) {
    this.notAfter = notAfter;
  }


  public ModelsCertificateRetrievalResponse issuerDN(String issuerDN) {
    
    this.issuerDN = issuerDN;
    return this;
  }

   /**
   * Get issuerDN
   * @return issuerDN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIssuerDN() {
    return issuerDN;
  }


  public void setIssuerDN(String issuerDN) {
    this.issuerDN = issuerDN;
  }


  public ModelsCertificateRetrievalResponse principalId(Integer principalId) {
    
    this.principalId = principalId;
    return this;
  }

   /**
   * Get principalId
   * @return principalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPrincipalId() {
    return principalId;
  }


  public void setPrincipalId(Integer principalId) {
    this.principalId = principalId;
  }


  public ModelsCertificateRetrievalResponse templateId(Integer templateId) {
    
    this.templateId = templateId;
    return this;
  }

   /**
   * Get templateId
   * @return templateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTemplateId() {
    return templateId;
  }


  public void setTemplateId(Integer templateId) {
    this.templateId = templateId;
  }


  public ModelsCertificateRetrievalResponse certState(CertStateEnum certState) {
    
    this.certState = certState;
    return this;
  }

   /**
   * Get certState
   * @return certState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CertStateEnum getCertState() {
    return certState;
  }


  public void setCertState(CertStateEnum certState) {
    this.certState = certState;
  }


  public ModelsCertificateRetrievalResponse keySizeInBits(Integer keySizeInBits) {
    
    this.keySizeInBits = keySizeInBits;
    return this;
  }

   /**
   * Get keySizeInBits
   * @return keySizeInBits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getKeySizeInBits() {
    return keySizeInBits;
  }


  public void setKeySizeInBits(Integer keySizeInBits) {
    this.keySizeInBits = keySizeInBits;
  }


  public ModelsCertificateRetrievalResponse keyType(KeyTypeEnum keyType) {
    
    this.keyType = keyType;
    return this;
  }

   /**
   * Get keyType
   * @return keyType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public KeyTypeEnum getKeyType() {
    return keyType;
  }


  public void setKeyType(KeyTypeEnum keyType) {
    this.keyType = keyType;
  }


  public ModelsCertificateRetrievalResponse requesterId(Integer requesterId) {
    
    this.requesterId = requesterId;
    return this;
  }

   /**
   * Get requesterId
   * @return requesterId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRequesterId() {
    return requesterId;
  }


  public void setRequesterId(Integer requesterId) {
    this.requesterId = requesterId;
  }


  public ModelsCertificateRetrievalResponse issuedOU(String issuedOU) {
    
    this.issuedOU = issuedOU;
    return this;
  }

   /**
   * Get issuedOU
   * @return issuedOU
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIssuedOU() {
    return issuedOU;
  }


  public void setIssuedOU(String issuedOU) {
    this.issuedOU = issuedOU;
  }


  public ModelsCertificateRetrievalResponse issuedEmail(String issuedEmail) {
    
    this.issuedEmail = issuedEmail;
    return this;
  }

   /**
   * Get issuedEmail
   * @return issuedEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIssuedEmail() {
    return issuedEmail;
  }


  public void setIssuedEmail(String issuedEmail) {
    this.issuedEmail = issuedEmail;
  }


  public ModelsCertificateRetrievalResponse keyUsage(Integer keyUsage) {
    
    this.keyUsage = keyUsage;
    return this;
  }

   /**
   * Get keyUsage
   * @return keyUsage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getKeyUsage() {
    return keyUsage;
  }


  public void setKeyUsage(Integer keyUsage) {
    this.keyUsage = keyUsage;
  }


  public ModelsCertificateRetrievalResponse signingAlgorithm(String signingAlgorithm) {
    
    this.signingAlgorithm = signingAlgorithm;
    return this;
  }

   /**
   * Get signingAlgorithm
   * @return signingAlgorithm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSigningAlgorithm() {
    return signingAlgorithm;
  }


  public void setSigningAlgorithm(String signingAlgorithm) {
    this.signingAlgorithm = signingAlgorithm;
  }


  public ModelsCertificateRetrievalResponse certStateString(String certStateString) {
    
    this.certStateString = certStateString;
    return this;
  }

   /**
   * Get certStateString
   * @return certStateString
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCertStateString() {
    return certStateString;
  }


  public void setCertStateString(String certStateString) {
    this.certStateString = certStateString;
  }


  public ModelsCertificateRetrievalResponse keyTypeString(String keyTypeString) {
    
    this.keyTypeString = keyTypeString;
    return this;
  }

   /**
   * Get keyTypeString
   * @return keyTypeString
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getKeyTypeString() {
    return keyTypeString;
  }


  public void setKeyTypeString(String keyTypeString) {
    this.keyTypeString = keyTypeString;
  }


  public ModelsCertificateRetrievalResponse revocationEffDate(OffsetDateTime revocationEffDate) {
    
    this.revocationEffDate = revocationEffDate;
    return this;
  }

   /**
   * Get revocationEffDate
   * @return revocationEffDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getRevocationEffDate() {
    return revocationEffDate;
  }


  public void setRevocationEffDate(OffsetDateTime revocationEffDate) {
    this.revocationEffDate = revocationEffDate;
  }


  public ModelsCertificateRetrievalResponse revocationReason(RevocationReasonEnum revocationReason) {
    
    this.revocationReason = revocationReason;
    return this;
  }

   /**
   * Get revocationReason
   * @return revocationReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RevocationReasonEnum getRevocationReason() {
    return revocationReason;
  }


  public void setRevocationReason(RevocationReasonEnum revocationReason) {
    this.revocationReason = revocationReason;
  }


  public ModelsCertificateRetrievalResponse revocationComment(String revocationComment) {
    
    this.revocationComment = revocationComment;
    return this;
  }

   /**
   * Get revocationComment
   * @return revocationComment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRevocationComment() {
    return revocationComment;
  }


  public void setRevocationComment(String revocationComment) {
    this.revocationComment = revocationComment;
  }


  public ModelsCertificateRetrievalResponse certificateAuthorityId(Integer certificateAuthorityId) {
    
    this.certificateAuthorityId = certificateAuthorityId;
    return this;
  }

   /**
   * Get certificateAuthorityId
   * @return certificateAuthorityId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCertificateAuthorityId() {
    return certificateAuthorityId;
  }


  public void setCertificateAuthorityId(Integer certificateAuthorityId) {
    this.certificateAuthorityId = certificateAuthorityId;
  }


  public ModelsCertificateRetrievalResponse certificateAuthorityName(String certificateAuthorityName) {
    
    this.certificateAuthorityName = certificateAuthorityName;
    return this;
  }

   /**
   * Get certificateAuthorityName
   * @return certificateAuthorityName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCertificateAuthorityName() {
    return certificateAuthorityName;
  }


  public void setCertificateAuthorityName(String certificateAuthorityName) {
    this.certificateAuthorityName = certificateAuthorityName;
  }


  public ModelsCertificateRetrievalResponse templateName(String templateName) {
    
    this.templateName = templateName;
    return this;
  }

   /**
   * Full template display name.
   * @return templateName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Full template display name.")

  public String getTemplateName() {
    return templateName;
  }


  public void setTemplateName(String templateName) {
    this.templateName = templateName;
  }


  public ModelsCertificateRetrievalResponse archivedKey(Boolean archivedKey) {
    
    this.archivedKey = archivedKey;
    return this;
  }

   /**
   * Get archivedKey
   * @return archivedKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getArchivedKey() {
    return archivedKey;
  }


  public void setArchivedKey(Boolean archivedKey) {
    this.archivedKey = archivedKey;
  }


  public ModelsCertificateRetrievalResponse hasPrivateKey(Boolean hasPrivateKey) {
    
    this.hasPrivateKey = hasPrivateKey;
    return this;
  }

   /**
   * Get hasPrivateKey
   * @return hasPrivateKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHasPrivateKey() {
    return hasPrivateKey;
  }


  public void setHasPrivateKey(Boolean hasPrivateKey) {
    this.hasPrivateKey = hasPrivateKey;
  }


  public ModelsCertificateRetrievalResponse principalName(String principalName) {
    
    this.principalName = principalName;
    return this;
  }

   /**
   * Get principalName
   * @return principalName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrincipalName() {
    return principalName;
  }


  public void setPrincipalName(String principalName) {
    this.principalName = principalName;
  }


  public ModelsCertificateRetrievalResponse certRequestId(Integer certRequestId) {
    
    this.certRequestId = certRequestId;
    return this;
  }

   /**
   * Get certRequestId
   * @return certRequestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCertRequestId() {
    return certRequestId;
  }


  public void setCertRequestId(Integer certRequestId) {
    this.certRequestId = certRequestId;
  }


  public ModelsCertificateRetrievalResponse requesterName(String requesterName) {
    
    this.requesterName = requesterName;
    return this;
  }

   /**
   * Get requesterName
   * @return requesterName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRequesterName() {
    return requesterName;
  }


  public void setRequesterName(String requesterName) {
    this.requesterName = requesterName;
  }


  public ModelsCertificateRetrievalResponse contentBytes(byte[] contentBytes) {
    
    this.contentBytes = contentBytes;
    return this;
  }

   /**
   * Get contentBytes
   * @return contentBytes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public byte[] getContentBytes() {
    return contentBytes;
  }


  public void setContentBytes(byte[] contentBytes) {
    this.contentBytes = contentBytes;
  }


  public ModelsCertificateRetrievalResponse extendedKeyUsages(List<ModelsCertificateRetrievalResponseExtendedKeyUsageModel> extendedKeyUsages) {
    
    this.extendedKeyUsages = extendedKeyUsages;
    return this;
  }

  public ModelsCertificateRetrievalResponse addExtendedKeyUsagesItem(ModelsCertificateRetrievalResponseExtendedKeyUsageModel extendedKeyUsagesItem) {
    if (this.extendedKeyUsages == null) {
      this.extendedKeyUsages = new ArrayList<>();
    }
    this.extendedKeyUsages.add(extendedKeyUsagesItem);
    return this;
  }

   /**
   * Get extendedKeyUsages
   * @return extendedKeyUsages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelsCertificateRetrievalResponseExtendedKeyUsageModel> getExtendedKeyUsages() {
    return extendedKeyUsages;
  }


  public void setExtendedKeyUsages(List<ModelsCertificateRetrievalResponseExtendedKeyUsageModel> extendedKeyUsages) {
    this.extendedKeyUsages = extendedKeyUsages;
  }


  public ModelsCertificateRetrievalResponse subjectAltNameElements(List<ModelsCertificateRetrievalResponseSubjectAlternativeNameModel> subjectAltNameElements) {
    
    this.subjectAltNameElements = subjectAltNameElements;
    return this;
  }

  public ModelsCertificateRetrievalResponse addSubjectAltNameElementsItem(ModelsCertificateRetrievalResponseSubjectAlternativeNameModel subjectAltNameElementsItem) {
    if (this.subjectAltNameElements == null) {
      this.subjectAltNameElements = new ArrayList<>();
    }
    this.subjectAltNameElements.add(subjectAltNameElementsItem);
    return this;
  }

   /**
   * Get subjectAltNameElements
   * @return subjectAltNameElements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelsCertificateRetrievalResponseSubjectAlternativeNameModel> getSubjectAltNameElements() {
    return subjectAltNameElements;
  }


  public void setSubjectAltNameElements(List<ModelsCertificateRetrievalResponseSubjectAlternativeNameModel> subjectAltNameElements) {
    this.subjectAltNameElements = subjectAltNameElements;
  }


  public ModelsCertificateRetrievalResponse crLDistributionPoints(List<ModelsCertificateRetrievalResponseCRLDistributionPointModel> crLDistributionPoints) {
    
    this.crLDistributionPoints = crLDistributionPoints;
    return this;
  }

  public ModelsCertificateRetrievalResponse addCrLDistributionPointsItem(ModelsCertificateRetrievalResponseCRLDistributionPointModel crLDistributionPointsItem) {
    if (this.crLDistributionPoints == null) {
      this.crLDistributionPoints = new ArrayList<>();
    }
    this.crLDistributionPoints.add(crLDistributionPointsItem);
    return this;
  }

   /**
   * Get crLDistributionPoints
   * @return crLDistributionPoints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelsCertificateRetrievalResponseCRLDistributionPointModel> getCrLDistributionPoints() {
    return crLDistributionPoints;
  }


  public void setCrLDistributionPoints(List<ModelsCertificateRetrievalResponseCRLDistributionPointModel> crLDistributionPoints) {
    this.crLDistributionPoints = crLDistributionPoints;
  }


  public ModelsCertificateRetrievalResponse locationsCount(List<ModelsCertificateRetrievalResponseLocationCountModel> locationsCount) {
    
    this.locationsCount = locationsCount;
    return this;
  }

  public ModelsCertificateRetrievalResponse addLocationsCountItem(ModelsCertificateRetrievalResponseLocationCountModel locationsCountItem) {
    if (this.locationsCount == null) {
      this.locationsCount = new ArrayList<>();
    }
    this.locationsCount.add(locationsCountItem);
    return this;
  }

   /**
   * Get locationsCount
   * @return locationsCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelsCertificateRetrievalResponseLocationCountModel> getLocationsCount() {
    return locationsCount;
  }


  public void setLocationsCount(List<ModelsCertificateRetrievalResponseLocationCountModel> locationsCount) {
    this.locationsCount = locationsCount;
  }


  public ModelsCertificateRetrievalResponse ssLLocations(List<ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel> ssLLocations) {
    
    this.ssLLocations = ssLLocations;
    return this;
  }

  public ModelsCertificateRetrievalResponse addSsLLocationsItem(ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel ssLLocationsItem) {
    if (this.ssLLocations == null) {
      this.ssLLocations = new ArrayList<>();
    }
    this.ssLLocations.add(ssLLocationsItem);
    return this;
  }

   /**
   * Get ssLLocations
   * @return ssLLocations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel> getSsLLocations() {
    return ssLLocations;
  }


  public void setSsLLocations(List<ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel> ssLLocations) {
    this.ssLLocations = ssLLocations;
  }


  public ModelsCertificateRetrievalResponse locations(List<ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel> locations) {
    
    this.locations = locations;
    return this;
  }

  public ModelsCertificateRetrievalResponse addLocationsItem(ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel locationsItem) {
    if (this.locations == null) {
      this.locations = new ArrayList<>();
    }
    this.locations.add(locationsItem);
    return this;
  }

   /**
   * Get locations
   * @return locations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel> getLocations() {
    return locations;
  }


  public void setLocations(List<ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel> locations) {
    this.locations = locations;
  }


  public ModelsCertificateRetrievalResponse metadata(Map<String, String> metadata) {
    
    this.metadata = metadata;
    return this;
  }

  public ModelsCertificateRetrievalResponse putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getMetadata() {
    return metadata;
  }


  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }


  public ModelsCertificateRetrievalResponse certificateKeyId(Integer certificateKeyId) {
    
    this.certificateKeyId = certificateKeyId;
    return this;
  }

   /**
   * Get certificateKeyId
   * @return certificateKeyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCertificateKeyId() {
    return certificateKeyId;
  }


  public void setCertificateKeyId(Integer certificateKeyId) {
    this.certificateKeyId = certificateKeyId;
  }


   /**
   * Get caRowIndex
   * @return caRowIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getCaRowIndex() {
    return caRowIndex;
  }




  public ModelsCertificateRetrievalResponse caRecordId(String caRecordId) {
    
    this.caRecordId = caRecordId;
    return this;
  }

   /**
   * Get caRecordId
   * @return caRecordId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCaRecordId() {
    return caRecordId;
  }


  public void setCaRecordId(String caRecordId) {
    this.caRecordId = caRecordId;
  }


  public ModelsCertificateRetrievalResponse detailedKeyUsage(ModelsCertificateRetrievalResponseDetailedKeyUsageModel detailedKeyUsage) {
    
    this.detailedKeyUsage = detailedKeyUsage;
    return this;
  }

   /**
   * Get detailedKeyUsage
   * @return detailedKeyUsage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ModelsCertificateRetrievalResponseDetailedKeyUsageModel getDetailedKeyUsage() {
    return detailedKeyUsage;
  }


  public void setDetailedKeyUsage(ModelsCertificateRetrievalResponseDetailedKeyUsageModel detailedKeyUsage) {
    this.detailedKeyUsage = detailedKeyUsage;
  }


  public ModelsCertificateRetrievalResponse keyRecoverable(Boolean keyRecoverable) {
    
    this.keyRecoverable = keyRecoverable;
    return this;
  }

   /**
   * Get keyRecoverable
   * @return keyRecoverable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getKeyRecoverable() {
    return keyRecoverable;
  }


  public void setKeyRecoverable(Boolean keyRecoverable) {
    this.keyRecoverable = keyRecoverable;
  }


  public ModelsCertificateRetrievalResponse curve(String curve) {
    
    this.curve = curve;
    return this;
  }

   /**
   * Get curve
   * @return curve
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurve() {
    return curve;
  }


  public void setCurve(String curve) {
    this.curve = curve;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelsCertificateRetrievalResponse modelsCertificateRetrievalResponse = (ModelsCertificateRetrievalResponse) o;
    return Objects.equals(this.id, modelsCertificateRetrievalResponse.id) &&
        Arrays.equals(this.thumbprint, modelsCertificateRetrievalResponse.thumbprint) &&
        Arrays.equals(this.serialNumber, modelsCertificateRetrievalResponse.serialNumber) &&
        Objects.equals(this.issuedDN, modelsCertificateRetrievalResponse.issuedDN) &&
        Objects.equals(this.issuedCN, modelsCertificateRetrievalResponse.issuedCN) &&
        Objects.equals(this.importDate, modelsCertificateRetrievalResponse.importDate) &&
        Objects.equals(this.notBefore, modelsCertificateRetrievalResponse.notBefore) &&
        Objects.equals(this.notAfter, modelsCertificateRetrievalResponse.notAfter) &&
        Objects.equals(this.issuerDN, modelsCertificateRetrievalResponse.issuerDN) &&
        Objects.equals(this.principalId, modelsCertificateRetrievalResponse.principalId) &&
        Objects.equals(this.templateId, modelsCertificateRetrievalResponse.templateId) &&
        Objects.equals(this.certState, modelsCertificateRetrievalResponse.certState) &&
        Objects.equals(this.keySizeInBits, modelsCertificateRetrievalResponse.keySizeInBits) &&
        Objects.equals(this.keyType, modelsCertificateRetrievalResponse.keyType) &&
        Objects.equals(this.requesterId, modelsCertificateRetrievalResponse.requesterId) &&
        Objects.equals(this.issuedOU, modelsCertificateRetrievalResponse.issuedOU) &&
        Objects.equals(this.issuedEmail, modelsCertificateRetrievalResponse.issuedEmail) &&
        Objects.equals(this.keyUsage, modelsCertificateRetrievalResponse.keyUsage) &&
        Objects.equals(this.signingAlgorithm, modelsCertificateRetrievalResponse.signingAlgorithm) &&
        Objects.equals(this.certStateString, modelsCertificateRetrievalResponse.certStateString) &&
        Objects.equals(this.keyTypeString, modelsCertificateRetrievalResponse.keyTypeString) &&
        Objects.equals(this.revocationEffDate, modelsCertificateRetrievalResponse.revocationEffDate) &&
        Objects.equals(this.revocationReason, modelsCertificateRetrievalResponse.revocationReason) &&
        Objects.equals(this.revocationComment, modelsCertificateRetrievalResponse.revocationComment) &&
        Objects.equals(this.certificateAuthorityId, modelsCertificateRetrievalResponse.certificateAuthorityId) &&
        Objects.equals(this.certificateAuthorityName, modelsCertificateRetrievalResponse.certificateAuthorityName) &&
        Objects.equals(this.templateName, modelsCertificateRetrievalResponse.templateName) &&
        Objects.equals(this.archivedKey, modelsCertificateRetrievalResponse.archivedKey) &&
        Objects.equals(this.hasPrivateKey, modelsCertificateRetrievalResponse.hasPrivateKey) &&
        Objects.equals(this.principalName, modelsCertificateRetrievalResponse.principalName) &&
        Objects.equals(this.certRequestId, modelsCertificateRetrievalResponse.certRequestId) &&
        Objects.equals(this.requesterName, modelsCertificateRetrievalResponse.requesterName) &&
        Arrays.equals(this.contentBytes, modelsCertificateRetrievalResponse.contentBytes) &&
        Objects.equals(this.extendedKeyUsages, modelsCertificateRetrievalResponse.extendedKeyUsages) &&
        Objects.equals(this.subjectAltNameElements, modelsCertificateRetrievalResponse.subjectAltNameElements) &&
        Objects.equals(this.crLDistributionPoints, modelsCertificateRetrievalResponse.crLDistributionPoints) &&
        Objects.equals(this.locationsCount, modelsCertificateRetrievalResponse.locationsCount) &&
        Objects.equals(this.ssLLocations, modelsCertificateRetrievalResponse.ssLLocations) &&
        Objects.equals(this.locations, modelsCertificateRetrievalResponse.locations) &&
        Objects.equals(this.metadata, modelsCertificateRetrievalResponse.metadata) &&
        Objects.equals(this.certificateKeyId, modelsCertificateRetrievalResponse.certificateKeyId) &&
        Objects.equals(this.caRowIndex, modelsCertificateRetrievalResponse.caRowIndex) &&
        Objects.equals(this.caRecordId, modelsCertificateRetrievalResponse.caRecordId) &&
        Objects.equals(this.detailedKeyUsage, modelsCertificateRetrievalResponse.detailedKeyUsage) &&
        Objects.equals(this.keyRecoverable, modelsCertificateRetrievalResponse.keyRecoverable) &&
        Objects.equals(this.curve, modelsCertificateRetrievalResponse.curve);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, Arrays.hashCode(thumbprint), Arrays.hashCode(serialNumber), issuedDN, issuedCN, importDate, notBefore, notAfter, issuerDN, principalId, templateId, certState, keySizeInBits, keyType, requesterId, issuedOU, issuedEmail, keyUsage, signingAlgorithm, certStateString, keyTypeString, revocationEffDate, revocationReason, revocationComment, certificateAuthorityId, certificateAuthorityName, templateName, archivedKey, hasPrivateKey, principalName, certRequestId, requesterName, Arrays.hashCode(contentBytes), extendedKeyUsages, subjectAltNameElements, crLDistributionPoints, locationsCount, ssLLocations, locations, metadata, certificateKeyId, caRowIndex, caRecordId, detailedKeyUsage, keyRecoverable, curve);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelsCertificateRetrievalResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    thumbprint: ").append(toIndentedString(thumbprint)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    issuedDN: ").append(toIndentedString(issuedDN)).append("\n");
    sb.append("    issuedCN: ").append(toIndentedString(issuedCN)).append("\n");
    sb.append("    importDate: ").append(toIndentedString(importDate)).append("\n");
    sb.append("    notBefore: ").append(toIndentedString(notBefore)).append("\n");
    sb.append("    notAfter: ").append(toIndentedString(notAfter)).append("\n");
    sb.append("    issuerDN: ").append(toIndentedString(issuerDN)).append("\n");
    sb.append("    principalId: ").append(toIndentedString(principalId)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    certState: ").append(toIndentedString(certState)).append("\n");
    sb.append("    keySizeInBits: ").append(toIndentedString(keySizeInBits)).append("\n");
    sb.append("    keyType: ").append(toIndentedString(keyType)).append("\n");
    sb.append("    requesterId: ").append(toIndentedString(requesterId)).append("\n");
    sb.append("    issuedOU: ").append(toIndentedString(issuedOU)).append("\n");
    sb.append("    issuedEmail: ").append(toIndentedString(issuedEmail)).append("\n");
    sb.append("    keyUsage: ").append(toIndentedString(keyUsage)).append("\n");
    sb.append("    signingAlgorithm: ").append(toIndentedString(signingAlgorithm)).append("\n");
    sb.append("    certStateString: ").append(toIndentedString(certStateString)).append("\n");
    sb.append("    keyTypeString: ").append(toIndentedString(keyTypeString)).append("\n");
    sb.append("    revocationEffDate: ").append(toIndentedString(revocationEffDate)).append("\n");
    sb.append("    revocationReason: ").append(toIndentedString(revocationReason)).append("\n");
    sb.append("    revocationComment: ").append(toIndentedString(revocationComment)).append("\n");
    sb.append("    certificateAuthorityId: ").append(toIndentedString(certificateAuthorityId)).append("\n");
    sb.append("    certificateAuthorityName: ").append(toIndentedString(certificateAuthorityName)).append("\n");
    sb.append("    templateName: ").append(toIndentedString(templateName)).append("\n");
    sb.append("    archivedKey: ").append(toIndentedString(archivedKey)).append("\n");
    sb.append("    hasPrivateKey: ").append(toIndentedString(hasPrivateKey)).append("\n");
    sb.append("    principalName: ").append(toIndentedString(principalName)).append("\n");
    sb.append("    certRequestId: ").append(toIndentedString(certRequestId)).append("\n");
    sb.append("    requesterName: ").append(toIndentedString(requesterName)).append("\n");
    sb.append("    contentBytes: ").append(toIndentedString(contentBytes)).append("\n");
    sb.append("    extendedKeyUsages: ").append(toIndentedString(extendedKeyUsages)).append("\n");
    sb.append("    subjectAltNameElements: ").append(toIndentedString(subjectAltNameElements)).append("\n");
    sb.append("    crLDistributionPoints: ").append(toIndentedString(crLDistributionPoints)).append("\n");
    sb.append("    locationsCount: ").append(toIndentedString(locationsCount)).append("\n");
    sb.append("    ssLLocations: ").append(toIndentedString(ssLLocations)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    certificateKeyId: ").append(toIndentedString(certificateKeyId)).append("\n");
    sb.append("    caRowIndex: ").append(toIndentedString(caRowIndex)).append("\n");
    sb.append("    caRecordId: ").append(toIndentedString(caRecordId)).append("\n");
    sb.append("    detailedKeyUsage: ").append(toIndentedString(detailedKeyUsage)).append("\n");
    sb.append("    keyRecoverable: ").append(toIndentedString(keyRecoverable)).append("\n");
    sb.append("    curve: ").append(toIndentedString(curve)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Id");
    openapiFields.add("Thumbprint");
    openapiFields.add("SerialNumber");
    openapiFields.add("IssuedDN");
    openapiFields.add("IssuedCN");
    openapiFields.add("ImportDate");
    openapiFields.add("NotBefore");
    openapiFields.add("NotAfter");
    openapiFields.add("IssuerDN");
    openapiFields.add("PrincipalId");
    openapiFields.add("TemplateId");
    openapiFields.add("CertState");
    openapiFields.add("KeySizeInBits");
    openapiFields.add("KeyType");
    openapiFields.add("RequesterId");
    openapiFields.add("IssuedOU");
    openapiFields.add("IssuedEmail");
    openapiFields.add("KeyUsage");
    openapiFields.add("SigningAlgorithm");
    openapiFields.add("CertStateString");
    openapiFields.add("KeyTypeString");
    openapiFields.add("RevocationEffDate");
    openapiFields.add("RevocationReason");
    openapiFields.add("RevocationComment");
    openapiFields.add("CertificateAuthorityId");
    openapiFields.add("CertificateAuthorityName");
    openapiFields.add("TemplateName");
    openapiFields.add("ArchivedKey");
    openapiFields.add("HasPrivateKey");
    openapiFields.add("PrincipalName");
    openapiFields.add("CertRequestId");
    openapiFields.add("RequesterName");
    openapiFields.add("ContentBytes");
    openapiFields.add("ExtendedKeyUsages");
    openapiFields.add("SubjectAltNameElements");
    openapiFields.add("CRLDistributionPoints");
    openapiFields.add("LocationsCount");
    openapiFields.add("SSLLocations");
    openapiFields.add("Locations");
    openapiFields.add("Metadata");
    openapiFields.add("CertificateKeyId");
    openapiFields.add("CARowIndex");
    openapiFields.add("CARecordId");
    openapiFields.add("DetailedKeyUsage");
    openapiFields.add("KeyRecoverable");
    openapiFields.add("Curve");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ModelsCertificateRetrievalResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ModelsCertificateRetrievalResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelsCertificateRetrievalResponse is not found in the empty JSON string", ModelsCertificateRetrievalResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ModelsCertificateRetrievalResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelsCertificateRetrievalResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("IssuedDN") != null && !jsonObj.get("IssuedDN").isJsonNull()) && !jsonObj.get("IssuedDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IssuedDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IssuedDN").toString()));
      }
      if ((jsonObj.get("IssuedCN") != null && !jsonObj.get("IssuedCN").isJsonNull()) && !jsonObj.get("IssuedCN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IssuedCN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IssuedCN").toString()));
      }
      if ((jsonObj.get("IssuerDN") != null && !jsonObj.get("IssuerDN").isJsonNull()) && !jsonObj.get("IssuerDN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IssuerDN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IssuerDN").toString()));
      }
      if ((jsonObj.get("IssuedOU") != null && !jsonObj.get("IssuedOU").isJsonNull()) && !jsonObj.get("IssuedOU").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IssuedOU` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IssuedOU").toString()));
      }
      if ((jsonObj.get("IssuedEmail") != null && !jsonObj.get("IssuedEmail").isJsonNull()) && !jsonObj.get("IssuedEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IssuedEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IssuedEmail").toString()));
      }
      if ((jsonObj.get("SigningAlgorithm") != null && !jsonObj.get("SigningAlgorithm").isJsonNull()) && !jsonObj.get("SigningAlgorithm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SigningAlgorithm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SigningAlgorithm").toString()));
      }
      if ((jsonObj.get("CertStateString") != null && !jsonObj.get("CertStateString").isJsonNull()) && !jsonObj.get("CertStateString").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CertStateString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CertStateString").toString()));
      }
      if ((jsonObj.get("KeyTypeString") != null && !jsonObj.get("KeyTypeString").isJsonNull()) && !jsonObj.get("KeyTypeString").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `KeyTypeString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("KeyTypeString").toString()));
      }
      if ((jsonObj.get("RevocationComment") != null && !jsonObj.get("RevocationComment").isJsonNull()) && !jsonObj.get("RevocationComment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `RevocationComment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("RevocationComment").toString()));
      }
      if ((jsonObj.get("CertificateAuthorityName") != null && !jsonObj.get("CertificateAuthorityName").isJsonNull()) && !jsonObj.get("CertificateAuthorityName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CertificateAuthorityName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CertificateAuthorityName").toString()));
      }
      if ((jsonObj.get("TemplateName") != null && !jsonObj.get("TemplateName").isJsonNull()) && !jsonObj.get("TemplateName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TemplateName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TemplateName").toString()));
      }
      if ((jsonObj.get("PrincipalName") != null && !jsonObj.get("PrincipalName").isJsonNull()) && !jsonObj.get("PrincipalName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PrincipalName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PrincipalName").toString()));
      }
      if ((jsonObj.get("RequesterName") != null && !jsonObj.get("RequesterName").isJsonNull()) && !jsonObj.get("RequesterName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `RequesterName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("RequesterName").toString()));
      }
      if (jsonObj.get("ExtendedKeyUsages") != null && !jsonObj.get("ExtendedKeyUsages").isJsonNull()) {
        JsonArray jsonArrayextendedKeyUsages = jsonObj.getAsJsonArray("ExtendedKeyUsages");
        if (jsonArrayextendedKeyUsages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ExtendedKeyUsages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ExtendedKeyUsages` to be an array in the JSON string but got `%s`", jsonObj.get("ExtendedKeyUsages").toString()));
          }

          // validate the optional field `ExtendedKeyUsages` (array)
          for (int i = 0; i < jsonArrayextendedKeyUsages.size(); i++) {
            ModelsCertificateRetrievalResponseExtendedKeyUsageModel.validateJsonObject(jsonArrayextendedKeyUsages.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("SubjectAltNameElements") != null && !jsonObj.get("SubjectAltNameElements").isJsonNull()) {
        JsonArray jsonArraysubjectAltNameElements = jsonObj.getAsJsonArray("SubjectAltNameElements");
        if (jsonArraysubjectAltNameElements != null) {
          // ensure the json data is an array
          if (!jsonObj.get("SubjectAltNameElements").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `SubjectAltNameElements` to be an array in the JSON string but got `%s`", jsonObj.get("SubjectAltNameElements").toString()));
          }

          // validate the optional field `SubjectAltNameElements` (array)
          for (int i = 0; i < jsonArraysubjectAltNameElements.size(); i++) {
            ModelsCertificateRetrievalResponseSubjectAlternativeNameModel.validateJsonObject(jsonArraysubjectAltNameElements.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("CRLDistributionPoints") != null && !jsonObj.get("CRLDistributionPoints").isJsonNull()) {
        JsonArray jsonArraycrLDistributionPoints = jsonObj.getAsJsonArray("CRLDistributionPoints");
        if (jsonArraycrLDistributionPoints != null) {
          // ensure the json data is an array
          if (!jsonObj.get("CRLDistributionPoints").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `CRLDistributionPoints` to be an array in the JSON string but got `%s`", jsonObj.get("CRLDistributionPoints").toString()));
          }

          // validate the optional field `CRLDistributionPoints` (array)
          for (int i = 0; i < jsonArraycrLDistributionPoints.size(); i++) {
            ModelsCertificateRetrievalResponseCRLDistributionPointModel.validateJsonObject(jsonArraycrLDistributionPoints.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("LocationsCount") != null && !jsonObj.get("LocationsCount").isJsonNull()) {
        JsonArray jsonArraylocationsCount = jsonObj.getAsJsonArray("LocationsCount");
        if (jsonArraylocationsCount != null) {
          // ensure the json data is an array
          if (!jsonObj.get("LocationsCount").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `LocationsCount` to be an array in the JSON string but got `%s`", jsonObj.get("LocationsCount").toString()));
          }

          // validate the optional field `LocationsCount` (array)
          for (int i = 0; i < jsonArraylocationsCount.size(); i++) {
            ModelsCertificateRetrievalResponseLocationCountModel.validateJsonObject(jsonArraylocationsCount.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("SSLLocations") != null && !jsonObj.get("SSLLocations").isJsonNull()) {
        JsonArray jsonArrayssLLocations = jsonObj.getAsJsonArray("SSLLocations");
        if (jsonArrayssLLocations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("SSLLocations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `SSLLocations` to be an array in the JSON string but got `%s`", jsonObj.get("SSLLocations").toString()));
          }

          // validate the optional field `SSLLocations` (array)
          for (int i = 0; i < jsonArrayssLLocations.size(); i++) {
            ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel.validateJsonObject(jsonArrayssLLocations.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("Locations") != null && !jsonObj.get("Locations").isJsonNull()) {
        JsonArray jsonArraylocations = jsonObj.getAsJsonArray("Locations");
        if (jsonArraylocations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Locations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Locations` to be an array in the JSON string but got `%s`", jsonObj.get("Locations").toString()));
          }

          // validate the optional field `Locations` (array)
          for (int i = 0; i < jsonArraylocations.size(); i++) {
            ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel.validateJsonObject(jsonArraylocations.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("CARecordId") != null && !jsonObj.get("CARecordId").isJsonNull()) && !jsonObj.get("CARecordId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CARecordId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CARecordId").toString()));
      }
      // validate the optional field `DetailedKeyUsage`
      if (jsonObj.get("DetailedKeyUsage") != null && !jsonObj.get("DetailedKeyUsage").isJsonNull()) {
        ModelsCertificateRetrievalResponseDetailedKeyUsageModel.validateJsonObject(jsonObj.getAsJsonObject("DetailedKeyUsage"));
      }
      if ((jsonObj.get("Curve") != null && !jsonObj.get("Curve").isJsonNull()) && !jsonObj.get("Curve").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Curve` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Curve").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelsCertificateRetrievalResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelsCertificateRetrievalResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelsCertificateRetrievalResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelsCertificateRetrievalResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelsCertificateRetrievalResponse>() {
           @Override
           public void write(JsonWriter out, ModelsCertificateRetrievalResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelsCertificateRetrievalResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModelsCertificateRetrievalResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModelsCertificateRetrievalResponse
  * @throws IOException if the JSON string is invalid with respect to ModelsCertificateRetrievalResponse
  */
  public static ModelsCertificateRetrievalResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelsCertificateRetrievalResponse.class);
  }

 /**
  * Convert an instance of ModelsCertificateRetrievalResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

