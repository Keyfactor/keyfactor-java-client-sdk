/*
 * Keyfactor-v1
 * This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keyfactor.command.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.keyfactor.command.client.model.ModelsCertStoreTypePasswordOptions;
import com.keyfactor.command.client.model.ModelsCertStoreTypeSupportedOperations;
import com.keyfactor.command.client.model.ModelsCertificateStoreTypeProperty;
import com.keyfactor.command.client.model.ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.keyfactor.command.client.JSON;

/**
 * KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest {
  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SHORT_NAME = "ShortName";
  @SerializedName(SERIALIZED_NAME_SHORT_NAME)
  private String shortName;

  public static final String SERIALIZED_NAME_CAPABILITY = "Capability";
  @SerializedName(SERIALIZED_NAME_CAPABILITY)
  private String capability;

  public static final String SERIALIZED_NAME_LOCAL_STORE = "LocalStore";
  @SerializedName(SERIALIZED_NAME_LOCAL_STORE)
  private Boolean localStore;

  public static final String SERIALIZED_NAME_SUPPORTED_OPERATIONS = "SupportedOperations";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_OPERATIONS)
  private ModelsCertStoreTypeSupportedOperations supportedOperations;

  public static final String SERIALIZED_NAME_PROPERTIES = "Properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private List<ModelsCertificateStoreTypeProperty> properties = null;

  public static final String SERIALIZED_NAME_PASSWORD_OPTIONS = "PasswordOptions";
  @SerializedName(SERIALIZED_NAME_PASSWORD_OPTIONS)
  private ModelsCertStoreTypePasswordOptions passwordOptions;

  public static final String SERIALIZED_NAME_STORE_PATH_TYPE = "StorePathType";
  @SerializedName(SERIALIZED_NAME_STORE_PATH_TYPE)
  private String storePathType;

  public static final String SERIALIZED_NAME_STORE_PATH_VALUE = "StorePathValue";
  @SerializedName(SERIALIZED_NAME_STORE_PATH_VALUE)
  private String storePathValue;

  /**
   * Gets or Sets privateKeyAllowed
   */
  @JsonAdapter(PrivateKeyAllowedEnum.Adapter.class)
  public enum PrivateKeyAllowedEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    PrivateKeyAllowedEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PrivateKeyAllowedEnum fromValue(Integer value) {
      for (PrivateKeyAllowedEnum b : PrivateKeyAllowedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PrivateKeyAllowedEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PrivateKeyAllowedEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PrivateKeyAllowedEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return PrivateKeyAllowedEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PRIVATE_KEY_ALLOWED = "PrivateKeyAllowed";
  @SerializedName(SERIALIZED_NAME_PRIVATE_KEY_ALLOWED)
  private PrivateKeyAllowedEnum privateKeyAllowed;

  public static final String SERIALIZED_NAME_SERVER_REQUIRED = "ServerRequired";
  @SerializedName(SERIALIZED_NAME_SERVER_REQUIRED)
  private Boolean serverRequired;

  public static final String SERIALIZED_NAME_POWER_SHELL = "PowerShell";
  @SerializedName(SERIALIZED_NAME_POWER_SHELL)
  private Boolean powerShell;

  public static final String SERIALIZED_NAME_BLUEPRINT_ALLOWED = "BlueprintAllowed";
  @SerializedName(SERIALIZED_NAME_BLUEPRINT_ALLOWED)
  private Boolean blueprintAllowed;

  /**
   * Gets or Sets customAliasAllowed
   */
  @JsonAdapter(CustomAliasAllowedEnum.Adapter.class)
  public enum CustomAliasAllowedEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2);

    private Integer value;

    CustomAliasAllowedEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CustomAliasAllowedEnum fromValue(Integer value) {
      for (CustomAliasAllowedEnum b : CustomAliasAllowedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CustomAliasAllowedEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CustomAliasAllowedEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CustomAliasAllowedEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return CustomAliasAllowedEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CUSTOM_ALIAS_ALLOWED = "CustomAliasAllowed";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ALIAS_ALLOWED)
  private CustomAliasAllowedEnum customAliasAllowed;

  public static final String SERIALIZED_NAME_SERVER_REGISTRATION = "ServerRegistration";
  @SerializedName(SERIALIZED_NAME_SERVER_REGISTRATION)
  private Integer serverRegistration;

  public static final String SERIALIZED_NAME_INVENTORY_ENDPOINT = "InventoryEndpoint";
  @SerializedName(SERIALIZED_NAME_INVENTORY_ENDPOINT)
  private String inventoryEndpoint;

  public static final String SERIALIZED_NAME_INVENTORY_JOB_TYPE_ID = "InventoryJobTypeId";
  @SerializedName(SERIALIZED_NAME_INVENTORY_JOB_TYPE_ID)
  private UUID inventoryJobTypeId;

  public static final String SERIALIZED_NAME_MANAGEMENT_JOB_TYPE_ID = "ManagementJobTypeId";
  @SerializedName(SERIALIZED_NAME_MANAGEMENT_JOB_TYPE_ID)
  private UUID managementJobTypeId;

  public static final String SERIALIZED_NAME_DISCOVERY_JOB_TYPE_ID = "DiscoveryJobTypeId";
  @SerializedName(SERIALIZED_NAME_DISCOVERY_JOB_TYPE_ID)
  private UUID discoveryJobTypeId;

  public static final String SERIALIZED_NAME_ENROLLMENT_JOB_TYPE_ID = "EnrollmentJobTypeId";
  @SerializedName(SERIALIZED_NAME_ENROLLMENT_JOB_TYPE_ID)
  private UUID enrollmentJobTypeId;

  public static final String SERIALIZED_NAME_ENTRY_PARAMETERS = "EntryParameters";
  @SerializedName(SERIALIZED_NAME_ENTRY_PARAMETERS)
  private List<ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter> entryParameters = null;

  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest() {
  }

  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest shortName(String shortName) {
    
    this.shortName = shortName;
    return this;
  }

   /**
   * Get shortName
   * @return shortName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getShortName() {
    return shortName;
  }


  public void setShortName(String shortName) {
    this.shortName = shortName;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest capability(String capability) {
    
    this.capability = capability;
    return this;
  }

   /**
   * Get capability
   * @return capability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCapability() {
    return capability;
  }


  public void setCapability(String capability) {
    this.capability = capability;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest localStore(Boolean localStore) {
    
    this.localStore = localStore;
    return this;
  }

   /**
   * Get localStore
   * @return localStore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getLocalStore() {
    return localStore;
  }


  public void setLocalStore(Boolean localStore) {
    this.localStore = localStore;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest supportedOperations(ModelsCertStoreTypeSupportedOperations supportedOperations) {
    
    this.supportedOperations = supportedOperations;
    return this;
  }

   /**
   * Get supportedOperations
   * @return supportedOperations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ModelsCertStoreTypeSupportedOperations getSupportedOperations() {
    return supportedOperations;
  }


  public void setSupportedOperations(ModelsCertStoreTypeSupportedOperations supportedOperations) {
    this.supportedOperations = supportedOperations;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest properties(List<ModelsCertificateStoreTypeProperty> properties) {
    
    this.properties = properties;
    return this;
  }

  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest addPropertiesItem(ModelsCertificateStoreTypeProperty propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelsCertificateStoreTypeProperty> getProperties() {
    return properties;
  }


  public void setProperties(List<ModelsCertificateStoreTypeProperty> properties) {
    this.properties = properties;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest passwordOptions(ModelsCertStoreTypePasswordOptions passwordOptions) {
    
    this.passwordOptions = passwordOptions;
    return this;
  }

   /**
   * Get passwordOptions
   * @return passwordOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ModelsCertStoreTypePasswordOptions getPasswordOptions() {
    return passwordOptions;
  }


  public void setPasswordOptions(ModelsCertStoreTypePasswordOptions passwordOptions) {
    this.passwordOptions = passwordOptions;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest storePathType(String storePathType) {
    
    this.storePathType = storePathType;
    return this;
  }

   /**
   * Get storePathType
   * @return storePathType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStorePathType() {
    return storePathType;
  }


  public void setStorePathType(String storePathType) {
    this.storePathType = storePathType;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest storePathValue(String storePathValue) {
    
    this.storePathValue = storePathValue;
    return this;
  }

   /**
   * Get storePathValue
   * @return storePathValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStorePathValue() {
    return storePathValue;
  }


  public void setStorePathValue(String storePathValue) {
    this.storePathValue = storePathValue;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest privateKeyAllowed(PrivateKeyAllowedEnum privateKeyAllowed) {
    
    this.privateKeyAllowed = privateKeyAllowed;
    return this;
  }

   /**
   * Get privateKeyAllowed
   * @return privateKeyAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PrivateKeyAllowedEnum getPrivateKeyAllowed() {
    return privateKeyAllowed;
  }


  public void setPrivateKeyAllowed(PrivateKeyAllowedEnum privateKeyAllowed) {
    this.privateKeyAllowed = privateKeyAllowed;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest serverRequired(Boolean serverRequired) {
    
    this.serverRequired = serverRequired;
    return this;
  }

   /**
   * Get serverRequired
   * @return serverRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getServerRequired() {
    return serverRequired;
  }


  public void setServerRequired(Boolean serverRequired) {
    this.serverRequired = serverRequired;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest powerShell(Boolean powerShell) {
    
    this.powerShell = powerShell;
    return this;
  }

   /**
   * Get powerShell
   * @return powerShell
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPowerShell() {
    return powerShell;
  }


  public void setPowerShell(Boolean powerShell) {
    this.powerShell = powerShell;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest blueprintAllowed(Boolean blueprintAllowed) {
    
    this.blueprintAllowed = blueprintAllowed;
    return this;
  }

   /**
   * Get blueprintAllowed
   * @return blueprintAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getBlueprintAllowed() {
    return blueprintAllowed;
  }


  public void setBlueprintAllowed(Boolean blueprintAllowed) {
    this.blueprintAllowed = blueprintAllowed;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest customAliasAllowed(CustomAliasAllowedEnum customAliasAllowed) {
    
    this.customAliasAllowed = customAliasAllowed;
    return this;
  }

   /**
   * Get customAliasAllowed
   * @return customAliasAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CustomAliasAllowedEnum getCustomAliasAllowed() {
    return customAliasAllowed;
  }


  public void setCustomAliasAllowed(CustomAliasAllowedEnum customAliasAllowed) {
    this.customAliasAllowed = customAliasAllowed;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest serverRegistration(Integer serverRegistration) {
    
    this.serverRegistration = serverRegistration;
    return this;
  }

   /**
   * Get serverRegistration
   * @return serverRegistration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getServerRegistration() {
    return serverRegistration;
  }


  public void setServerRegistration(Integer serverRegistration) {
    this.serverRegistration = serverRegistration;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest inventoryEndpoint(String inventoryEndpoint) {
    
    this.inventoryEndpoint = inventoryEndpoint;
    return this;
  }

   /**
   * Get inventoryEndpoint
   * @return inventoryEndpoint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInventoryEndpoint() {
    return inventoryEndpoint;
  }


  public void setInventoryEndpoint(String inventoryEndpoint) {
    this.inventoryEndpoint = inventoryEndpoint;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest inventoryJobTypeId(UUID inventoryJobTypeId) {
    
    this.inventoryJobTypeId = inventoryJobTypeId;
    return this;
  }

   /**
   * Get inventoryJobTypeId
   * @return inventoryJobTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getInventoryJobTypeId() {
    return inventoryJobTypeId;
  }


  public void setInventoryJobTypeId(UUID inventoryJobTypeId) {
    this.inventoryJobTypeId = inventoryJobTypeId;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest managementJobTypeId(UUID managementJobTypeId) {
    
    this.managementJobTypeId = managementJobTypeId;
    return this;
  }

   /**
   * Get managementJobTypeId
   * @return managementJobTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getManagementJobTypeId() {
    return managementJobTypeId;
  }


  public void setManagementJobTypeId(UUID managementJobTypeId) {
    this.managementJobTypeId = managementJobTypeId;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest discoveryJobTypeId(UUID discoveryJobTypeId) {
    
    this.discoveryJobTypeId = discoveryJobTypeId;
    return this;
  }

   /**
   * Get discoveryJobTypeId
   * @return discoveryJobTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getDiscoveryJobTypeId() {
    return discoveryJobTypeId;
  }


  public void setDiscoveryJobTypeId(UUID discoveryJobTypeId) {
    this.discoveryJobTypeId = discoveryJobTypeId;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest enrollmentJobTypeId(UUID enrollmentJobTypeId) {
    
    this.enrollmentJobTypeId = enrollmentJobTypeId;
    return this;
  }

   /**
   * Get enrollmentJobTypeId
   * @return enrollmentJobTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getEnrollmentJobTypeId() {
    return enrollmentJobTypeId;
  }


  public void setEnrollmentJobTypeId(UUID enrollmentJobTypeId) {
    this.enrollmentJobTypeId = enrollmentJobTypeId;
  }


  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest entryParameters(List<ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter> entryParameters) {
    
    this.entryParameters = entryParameters;
    return this;
  }

  public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest addEntryParametersItem(ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter entryParametersItem) {
    if (this.entryParameters == null) {
      this.entryParameters = new ArrayList<>();
    }
    this.entryParameters.add(entryParametersItem);
    return this;
  }

   /**
   * Get entryParameters
   * @return entryParameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter> getEntryParameters() {
    return entryParameters;
  }


  public void setEntryParameters(List<ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter> entryParameters) {
    this.entryParameters = entryParameters;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest = (KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) o;
    return Objects.equals(this.name, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.name) &&
        Objects.equals(this.shortName, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.shortName) &&
        Objects.equals(this.capability, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.capability) &&
        Objects.equals(this.localStore, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.localStore) &&
        Objects.equals(this.supportedOperations, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.supportedOperations) &&
        Objects.equals(this.properties, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.properties) &&
        Objects.equals(this.passwordOptions, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.passwordOptions) &&
        Objects.equals(this.storePathType, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.storePathType) &&
        Objects.equals(this.storePathValue, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.storePathValue) &&
        Objects.equals(this.privateKeyAllowed, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.privateKeyAllowed) &&
        Objects.equals(this.serverRequired, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.serverRequired) &&
        Objects.equals(this.powerShell, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.powerShell) &&
        Objects.equals(this.blueprintAllowed, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.blueprintAllowed) &&
        Objects.equals(this.customAliasAllowed, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.customAliasAllowed) &&
        Objects.equals(this.serverRegistration, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.serverRegistration) &&
        Objects.equals(this.inventoryEndpoint, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.inventoryEndpoint) &&
        Objects.equals(this.inventoryJobTypeId, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.inventoryJobTypeId) &&
        Objects.equals(this.managementJobTypeId, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.managementJobTypeId) &&
        Objects.equals(this.discoveryJobTypeId, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.discoveryJobTypeId) &&
        Objects.equals(this.enrollmentJobTypeId, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.enrollmentJobTypeId) &&
        Objects.equals(this.entryParameters, keyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.entryParameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, shortName, capability, localStore, supportedOperations, properties, passwordOptions, storePathType, storePathValue, privateKeyAllowed, serverRequired, powerShell, blueprintAllowed, customAliasAllowed, serverRegistration, inventoryEndpoint, inventoryJobTypeId, managementJobTypeId, discoveryJobTypeId, enrollmentJobTypeId, entryParameters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    shortName: ").append(toIndentedString(shortName)).append("\n");
    sb.append("    capability: ").append(toIndentedString(capability)).append("\n");
    sb.append("    localStore: ").append(toIndentedString(localStore)).append("\n");
    sb.append("    supportedOperations: ").append(toIndentedString(supportedOperations)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    passwordOptions: ").append(toIndentedString(passwordOptions)).append("\n");
    sb.append("    storePathType: ").append(toIndentedString(storePathType)).append("\n");
    sb.append("    storePathValue: ").append(toIndentedString(storePathValue)).append("\n");
    sb.append("    privateKeyAllowed: ").append(toIndentedString(privateKeyAllowed)).append("\n");
    sb.append("    serverRequired: ").append(toIndentedString(serverRequired)).append("\n");
    sb.append("    powerShell: ").append(toIndentedString(powerShell)).append("\n");
    sb.append("    blueprintAllowed: ").append(toIndentedString(blueprintAllowed)).append("\n");
    sb.append("    customAliasAllowed: ").append(toIndentedString(customAliasAllowed)).append("\n");
    sb.append("    serverRegistration: ").append(toIndentedString(serverRegistration)).append("\n");
    sb.append("    inventoryEndpoint: ").append(toIndentedString(inventoryEndpoint)).append("\n");
    sb.append("    inventoryJobTypeId: ").append(toIndentedString(inventoryJobTypeId)).append("\n");
    sb.append("    managementJobTypeId: ").append(toIndentedString(managementJobTypeId)).append("\n");
    sb.append("    discoveryJobTypeId: ").append(toIndentedString(discoveryJobTypeId)).append("\n");
    sb.append("    enrollmentJobTypeId: ").append(toIndentedString(enrollmentJobTypeId)).append("\n");
    sb.append("    entryParameters: ").append(toIndentedString(entryParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Name");
    openapiFields.add("ShortName");
    openapiFields.add("Capability");
    openapiFields.add("LocalStore");
    openapiFields.add("SupportedOperations");
    openapiFields.add("Properties");
    openapiFields.add("PasswordOptions");
    openapiFields.add("StorePathType");
    openapiFields.add("StorePathValue");
    openapiFields.add("PrivateKeyAllowed");
    openapiFields.add("ServerRequired");
    openapiFields.add("PowerShell");
    openapiFields.add("BlueprintAllowed");
    openapiFields.add("CustomAliasAllowed");
    openapiFields.add("ServerRegistration");
    openapiFields.add("InventoryEndpoint");
    openapiFields.add("InventoryJobTypeId");
    openapiFields.add("ManagementJobTypeId");
    openapiFields.add("DiscoveryJobTypeId");
    openapiFields.add("EnrollmentJobTypeId");
    openapiFields.add("EntryParameters");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Name");
    openapiRequiredFields.add("ShortName");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest is not found in the empty JSON string", KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if (!jsonObj.get("ShortName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ShortName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ShortName").toString()));
      }
      if ((jsonObj.get("Capability") != null && !jsonObj.get("Capability").isJsonNull()) && !jsonObj.get("Capability").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Capability` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Capability").toString()));
      }
      // validate the optional field `SupportedOperations`
      if (jsonObj.get("SupportedOperations") != null && !jsonObj.get("SupportedOperations").isJsonNull()) {
        ModelsCertStoreTypeSupportedOperations.validateJsonObject(jsonObj.getAsJsonObject("SupportedOperations"));
      }
      if (jsonObj.get("Properties") != null && !jsonObj.get("Properties").isJsonNull()) {
        JsonArray jsonArrayproperties = jsonObj.getAsJsonArray("Properties");
        if (jsonArrayproperties != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Properties").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Properties` to be an array in the JSON string but got `%s`", jsonObj.get("Properties").toString()));
          }

          // validate the optional field `Properties` (array)
          for (int i = 0; i < jsonArrayproperties.size(); i++) {
            ModelsCertificateStoreTypeProperty.validateJsonObject(jsonArrayproperties.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `PasswordOptions`
      if (jsonObj.get("PasswordOptions") != null && !jsonObj.get("PasswordOptions").isJsonNull()) {
        ModelsCertStoreTypePasswordOptions.validateJsonObject(jsonObj.getAsJsonObject("PasswordOptions"));
      }
      if ((jsonObj.get("StorePathType") != null && !jsonObj.get("StorePathType").isJsonNull()) && !jsonObj.get("StorePathType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StorePathType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StorePathType").toString()));
      }
      if ((jsonObj.get("StorePathValue") != null && !jsonObj.get("StorePathValue").isJsonNull()) && !jsonObj.get("StorePathValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StorePathValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StorePathValue").toString()));
      }
      if ((jsonObj.get("InventoryEndpoint") != null && !jsonObj.get("InventoryEndpoint").isJsonNull()) && !jsonObj.get("InventoryEndpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InventoryEndpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InventoryEndpoint").toString()));
      }
      if ((jsonObj.get("InventoryJobTypeId") != null && !jsonObj.get("InventoryJobTypeId").isJsonNull()) && !jsonObj.get("InventoryJobTypeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InventoryJobTypeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InventoryJobTypeId").toString()));
      }
      if ((jsonObj.get("ManagementJobTypeId") != null && !jsonObj.get("ManagementJobTypeId").isJsonNull()) && !jsonObj.get("ManagementJobTypeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ManagementJobTypeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ManagementJobTypeId").toString()));
      }
      if ((jsonObj.get("DiscoveryJobTypeId") != null && !jsonObj.get("DiscoveryJobTypeId").isJsonNull()) && !jsonObj.get("DiscoveryJobTypeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DiscoveryJobTypeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DiscoveryJobTypeId").toString()));
      }
      if ((jsonObj.get("EnrollmentJobTypeId") != null && !jsonObj.get("EnrollmentJobTypeId").isJsonNull()) && !jsonObj.get("EnrollmentJobTypeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EnrollmentJobTypeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EnrollmentJobTypeId").toString()));
      }
      if (jsonObj.get("EntryParameters") != null && !jsonObj.get("EntryParameters").isJsonNull()) {
        JsonArray jsonArrayentryParameters = jsonObj.getAsJsonArray("EntryParameters");
        if (jsonArrayentryParameters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("EntryParameters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `EntryParameters` to be an array in the JSON string but got `%s`", jsonObj.get("EntryParameters").toString()));
          }

          // validate the optional field `EntryParameters` (array)
          for (int i = 0; i < jsonArrayentryParameters.size(); i++) {
            ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter.validateJsonObject(jsonArrayentryParameters.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest>() {
           @Override
           public void write(JsonWriter out, KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest
  * @throws IOException if the JSON string is invalid with respect to KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest
  */
  public static KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.class);
  }

 /**
  * Convert an instance of KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

