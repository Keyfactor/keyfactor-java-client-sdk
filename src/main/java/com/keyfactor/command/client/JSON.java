/*
 * Copyright 2022 Keyfactor
 * Licensed under the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.  You may obtain a
 * copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
 * required by applicable law or agreed to in writing, software distributed
 * under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
 * OR CONDITIONS OF ANY KIND, either express or implied. See the License for
 * thespecific language governing permissions and limitations under the
 * License.
 *
 * Keyfactor-v1
 * This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keyfactor.command.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.internal.bind.util.ISO8601Utils;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonElement;
import io.gsonfire.GsonFireBuilder;
import io.gsonfire.TypeSelector;

import okio.ByteString;

import java.io.IOException;
import java.io.StringReader;
import java.lang.reflect.Type;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;
import java.util.Map;
import java.util.HashMap;

/*
 * A JSON utility class
 *
 * NOTE: in the future, this class may be converted to static, which may break
 *       backward-compatibility
 */
public class JSON {
    private static Gson gson;
    private static boolean isLenientOnJson = false;
    private static DateTypeAdapter dateTypeAdapter = new DateTypeAdapter();
    private static SqlDateTypeAdapter sqlDateTypeAdapter = new SqlDateTypeAdapter();
    private static OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter = new OffsetDateTimeTypeAdapter();
    private static LocalDateTypeAdapter localDateTypeAdapter = new LocalDateTypeAdapter();
    private static ByteArrayAdapter byteArrayAdapter = new ByteArrayAdapter();

    @SuppressWarnings("unchecked")
    public static GsonBuilder createGson() {
        GsonFireBuilder fireBuilder = new GsonFireBuilder()
        ;
        GsonBuilder builder = fireBuilder.createGsonBuilder();
        return builder;
    }

    private static String getDiscriminatorValue(JsonElement readElement, String discriminatorField) {
        JsonElement element = readElement.getAsJsonObject().get(discriminatorField);
        if (null == element) {
            throw new IllegalArgumentException("missing discriminator field: <" + discriminatorField + ">");
        }
        return element.getAsString();
    }

    /**
     * Returns the Java class that implements the OpenAPI schema for the specified discriminator value.
     *
     * @param classByDiscriminatorValue The map of discriminator values to Java classes.
     * @param discriminatorValue The value of the OpenAPI discriminator in the input data.
     * @return The Java class that implements the OpenAPI schema
     */
    private static Class getClassByDiscriminator(Map classByDiscriminatorValue, String discriminatorValue) {
        Class clazz = (Class) classByDiscriminatorValue.get(discriminatorValue);
        if (null == clazz) {
            throw new IllegalArgumentException("cannot determine model class of name: <" + discriminatorValue + ">");
        }
        return clazz;
    }

    {
        GsonBuilder gsonBuilder = createGson();
        gsonBuilder.registerTypeAdapter(Date.class, dateTypeAdapter);
        gsonBuilder.registerTypeAdapter(java.sql.Date.class, sqlDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(OffsetDateTime.class, offsetDateTimeTypeAdapter);
        gsonBuilder.registerTypeAdapter(LocalDate.class, localDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(byte[].class, byteArrayAdapter);
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.CoreModelsEnrollmentEnrollmentCA.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.CoreModelsEnrollmentEnrollmentTemplate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.CoreModelsEnrollmentEnrollmentTemplateCAResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorAPIModelsEnrollmentEnrollmentManagementResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorAPIModelsSMTPSMTPRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorAPIModelsSMTPSMTPResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorAPIModelsSMTPSMTPTestRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorAPIModelsSMTPSMTPTestResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsAlertCertificateQueryAlertCertificateQueryResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsAlertScheduleAlertScheduleRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsAlertScheduleAlertScheduleResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsAlertTemplateAlertTemplateResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsDeniedDeniedAlertCreationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsDeniedDeniedAlertDefinitionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsDeniedDeniedAlertUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsExpirationExpirationAlertCreationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsExpirationExpirationAlertResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsExpirationExpirationAlertTestAllRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsExpirationExpirationAlertTestRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsExpirationExpirationAlertTestResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsIssuedIssuedAlertCreationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsIssuedIssuedAlertDefinitionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsIssuedIssuedAlertUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertDefinitionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertTestAllRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertTestRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertTestResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsPendingPendingAlertCreationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsPendingPendingAlertDefinitionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsPendingPendingAlertResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsPendingPendingAlertTestRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsPendingPendingAlertTestResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsAlertsPendingPendingAlertUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityTestResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsCertificateCollectionsCertificateCollectionCopyRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsCertificateCollectionsCertificateCollectionCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsCertificateCollectionsCertificateCollectionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsCertificateCollectionsCertificateCollectionUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsCertificateStoresAddCertificateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsCertificateStoresJobHistoryResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsCertificateStoresReenrollmentRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsCertificateStoresRemoveCertificateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsCertificatesAnalyzeCertificateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsCertificatesCertificateIdentityAuditResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsCertificatesCertificateIdentityAuditResponseCertificatePermission.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsCertificatesCertificateLocationsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsCertificatesCertificateQueryRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsConfigurationTenantConfigurationTenantRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsEnrollmentEnrollmentManagementRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsEnrollmentManagementStoreRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsEnrollmentManagementStoreTypeRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsEventHandlerEventHandlerParameterRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsEventHandlerEventHandlerParameterResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsEventHandlerRegisteredEventHandlerRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsEventHandlerRegisteredEventHandlerResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsLicenseLicenseResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsLicenseLicenseResponseLicense.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsLicenseLicenseResponseLicensedCustomer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsLicenseLicenseResponseLicensedFeature.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsLicenseLicenseResponseLicensedProduct.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsMetadataFieldMetadataFieldCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsMetadataFieldMetadataFieldResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsMetadataFieldMetadataFieldUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsMonitoringDashboardRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsMonitoringDashboardResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsMonitoringEmailRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsMonitoringEmailResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsMonitoringOCSPParametersRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsMonitoringOCSPParametersResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestAllRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsMonitoringRevocationMonitoringAlertTestResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsMonitoringRevocationMonitoringCreationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsMonitoringRevocationMonitoringUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsOrchestratorJobsAcknowledgeJobRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsOrchestratorJobsBulkJobResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsOrchestratorJobsCustomJobResultDataResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsOrchestratorJobsJobFieldResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsOrchestratorJobsJobResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsOrchestratorJobsJobTypeFieldResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsOrchestratorJobsJobTypeResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsOrchestratorJobsRescheduleJobRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsOrchestratorJobsUnscheduleJobRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsOrchestratorsAgentBlueprintJobsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsOrchestratorsAgentBlueprintResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsOrchestratorsAgentBlueprintStoresResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsOrchestratorsAgentResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsSecurityRolesAreaPermissionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsSecurityRolesContainerPermissionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsSecurityRolesContainerPermissionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsSecurityRolesIdentitiesSecurityRolesCollectionPermissionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsSecurityRolesIdentitiesSecurityRolesCollectionPermissionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsSecurityRolesIdentitiesSecurityRolesGlobalPermissionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsSecurityRolesIdentitiesSecurityRolesGlobalPermissionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsSecurityRolesRoleIdentitiesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsSecurityRolesRoleIdentitiesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsSecurityRolesSecurityRoleCopyRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsSslCreateNetworkRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsSslNetworkQueryResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsSslNetworkResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsSslQuietHourRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsSslQuietHourResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsSslUpdateNetworkRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsTemplatesGlobalTemplateDefaultRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsTemplatesGlobalTemplateDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsTemplatesGlobalTemplatePolicyRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsTemplatesGlobalTemplatePolicyResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsTemplatesGlobalTemplateRegexRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsTemplatesGlobalTemplateRegexResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsTemplatesGlobalTemplateSettingsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsTemplatesGlobalTemplateSettingsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsTemplatesTemplateEnrollmentDefaultResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsTemplatesTemplateEnrollmentPolicyResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsTemplatesTemplateEnrollmentRegexResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsTemplatesTemplateEnrollmentSettingsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsTemplatesValidSubjectPartResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsAvailableSignalResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsAvailableStepQueryResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsAvailableStepResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsConditionConfigurationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsConditionConfigurationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsDefinitionCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsDefinitionQueryResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsDefinitionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsDefinitionStepRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsDefinitionStepResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsDefinitionStepSignalResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsDefinitionUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsInstanceDefinitionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsInstanceQueryResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsInstanceResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsParameterDefinitionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsSignalConfigurationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsSignalDefinitionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsSignalRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiModelsWorkflowsWorkflowTypeQueryResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiPAMProviderTypeCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiPAMProviderTypeParameterCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiPAMProviderTypeParameterResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorApiPAMProviderTypeResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorAuditingQueryingAuditLogEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorCommonSchedulingKeyfactorSchedule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorCommonSchedulingModelsIntervalModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorCommonSchedulingModelsMonthlyModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorCommonSchedulingModelsTimeModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.KeyfactorCommonSchedulingModelsWeeklyModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsAgentsAgentPool.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsAgentsAgentPoolAgent.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCRLRequestModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCSRContents.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCSRGenerationResponseModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertStoreLocationsCertificateLocationsGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertStoreLocationsCertificateStoreLocationsDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertStoreNewPasswordRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertStoreTypePasswordOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertStoreTypeSupportedOperations.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertStoresSchedule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateAuthoritiesCertificateAuthorityAuthCertificate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateAuthoritiesCertificateAuthorityRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateAuthoritiesCertificateAuthorityResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateDownloadRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateDownloadResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateImportRequestModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateImportResponseModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateLocationSpecifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateRecoveryRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateRetrievalResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateRetrievalResponseCRLDistributionPointModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateRetrievalResponseDetailedKeyUsageModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateRetrievalResponseExtendedKeyUsageModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateRetrievalResponseLocationCountModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateRetrievalResponseSubjectAlternativeNameModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateStore.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateStoreContainerListResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateStoreCreateServerRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateStoreEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateStoreInventory.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateStoreInventoryCertificates.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateStoreServerResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateStoreTypeProperty.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateStoreTypesCertificateStoreTypeEntryParameter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateStoreUpdateServerRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateStoresCertificateStoreCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateStoresCertificateStoreUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCertificateValidationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCollectionRolePermissions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsContainerAssignment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCustomReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCustomReportCreationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsCustomReportUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsDiscoveryJobRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsEnrollmentAvailableRenewal.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsEnrollmentCSREnrollmentRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsEnrollmentCSREnrollmentResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsEnrollmentCSRGenerationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsEnrollmentExistingEnrollmentManagementRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsEnrollmentManagementStoreType.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsEnrollmentPFXEnrollmentRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsEnrollmentPFXEnrollmentResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsEnrollmentRenewalRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsEnrollmentRenewalResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsExtendedKeyUsage.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsInvalidKeystore.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsKeyfactorAPISecret.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsMetadataAllUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsMetadataFieldTypeModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsMetadataSingleUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsMetadataUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsMonitoringRevocationMonitoringAlertResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsOrchestratorJobsBulkOrchestratorJobPair.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsOrchestratorJobsJob.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsOrchestratorJobsJobTypeCreateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsOrchestratorJobsJobTypeFieldRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsOrchestratorJobsJobTypeUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsOrchestratorJobsScheduleBulkJobRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsOrchestratorJobsScheduleJobRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsPKICertificateOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsPagedQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsPendingCSRResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsPkcs10CertificateResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsPkcs12CertificateResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedAgentBlueprintJobsQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedAgentBlueprintQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedAgentBlueprintStoresQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedAgentJobHistoryQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedAgentJobQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedAgentPoolAgentsQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedAgentPoolQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedAgentQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedAuditLogQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedCertificateAuthorityQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedCertificateHistoryQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedCertificateRequestQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedCertificateStoreContainerQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedCertificateStoreInventoryQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedCertificateStoreQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedCertificateStoreServerQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedCustomReportQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedDeniedAlertQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedExpirationAlertQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedIssuedAlertQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedKeyRotationAlertQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedLegacyDeniedRequestQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedMetadataFieldQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedPendingAlertQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedPendingCSRQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedReportQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedReportScheduleQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedRevocationMonitoringQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedSSHLogonQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedSSHServerGroupQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedSSHServerQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedSSHServiceAccountQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedSSHUnmanagedKeyQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedSSHUserQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedScanJobPartsQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedSecurityIdentityQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedSecurityRoleQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedSslResultQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsPagedTemplateQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsWorkflowWorkflowDefinitionQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsWorkflowWorkflowInstanceQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsWorkflowWorkflowStepSchemaQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsQueryModelsWorkflowWorkflowTypeQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsRecoveryResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsReenrollmentStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsReport.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsReportParameters.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsReportParametersRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsReportRequestModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsReportSchedule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsRevocationRevocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsRevocationSuspendedRevocationResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsRevokeAllCertificatesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsRevokeCertificateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHAccessLogonUserAccessRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHAccessLogonUserAccessResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHAccessServerAccessRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHAccessServerAccessResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHAccessServerGroupAccessRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHAccessServerGroupAccessResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHKeysKeyGenerationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHKeysKeyResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHKeysKeyUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHKeysUnmanagedKeyResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHLogonsLogonAccessRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHLogonsLogonCreationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHLogonsLogonQueryResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHLogonsLogonResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHServerGroupsServerGroupCreationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHServerGroupsServerGroupResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHServerGroupsServerGroupUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHServersServerCreationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHServersServerResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHServersServerUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHServiceAccountsServiceAccountCreationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHServiceAccountsServiceAccountResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHServiceAccountsServiceAccountUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHServiceAccountsServiceAccountUserCreationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHUsersSshUserAccessResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHUsersSshUserCreationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHUsersSshUserResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSHUsersSshUserUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSLDisplayScanJobPart.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSLEndpoint.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSLEndpointHistoryResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSLEndpointHistoryResponseCertificateModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSLEndpointStatusRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSLImmediateSslScanRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSLNetworkDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSLNetworkRangesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSLScanJobPart.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSLScanJobPartDefinition.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSSLSslScanResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSecurityCertificatePermissions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSecurityIdentitiesPermissionRolesPairResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSecurityIdentitiesSecurityIdentityIdentifier.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSecurityIdentitiesSecurityIdentityLookupResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSecurityIdentitiesSecurityIdentityRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSecuritySecurityRolesSecurityRoleCreationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSecuritySecurityRolesSecurityRoleResponseBase.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSecuritySecurityRolesSecurityRoleUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsSubjectAlternativeName.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateCollectionRetrievalResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateCollectionRetrievalResponseExtendedKeyUsageModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateCollectionRetrievalResponseTemplateEnrollmentFieldModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateCollectionRetrievalResponseTemplateRegexModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateEnrollmentField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateMetadataField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateRegex.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateRetrievalResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateRetrievalResponseExtendedKeyUsageModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateRetrievalResponseTemplateDefaultModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateRetrievalResponseTemplateEnrollmentFieldModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateRetrievalResponseTemplateMetadataFieldModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateRetrievalResponseTemplatePolicyModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateRetrievalResponseTemplateRegexModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateUpdateRequestTemplateDefaultModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateUpdateRequestTemplateEnrollmentFieldModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateUpdateRequestTemplateMetadataFieldModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateUpdateRequestTemplatePolicyModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsTemplateUpdateRequestTemplateRegexModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsWorkflowApproveDenyResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsWorkflowCertificateRequestCertStoreModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsWorkflowCertificateRequestDetailsModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsWorkflowCertificateRequestModel.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsWorkflowDenialRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.keyfactor.command.client.model.ModelsWorkflowProcessedCertificateRequest.CustomTypeAdapterFactory());
        gson = gsonBuilder.create();
    }

    /**
     * Get Gson.
     *
     * @return Gson
     */
    public static Gson getGson() {
        return gson;
    }

    /**
     * Set Gson.
     *
     * @param gson Gson
     */
    public static void setGson(Gson gson) {
        JSON.gson = gson;
    }

    public static void setLenientOnJson(boolean lenientOnJson) {
        isLenientOnJson = lenientOnJson;
    }

    /**
     * Serialize the given Java object into JSON string.
     *
     * @param obj Object
     * @return String representation of the JSON
     */
    public static String serialize(Object obj) {
        return gson.toJson(obj);
    }

    /**
     * Deserialize the given JSON string to Java object.
     *
     * @param <T>        Type
     * @param body       The JSON string
     * @param returnType The type to deserialize into
     * @return The deserialized Java object
     */
    @SuppressWarnings("unchecked")
    public static <T> T deserialize(String body, Type returnType) {
        try {
            if (isLenientOnJson) {
                JsonReader jsonReader = new JsonReader(new StringReader(body));
                // see https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/stream/JsonReader.html#setLenient(boolean)
                jsonReader.setLenient(true);
                return gson.fromJson(jsonReader, returnType);
            } else {
                return gson.fromJson(body, returnType);
            }
        } catch (JsonParseException e) {
            // Fallback processing when failed to parse JSON form response body:
            // return the response body string directly for the String return type;
            if (returnType.equals(String.class)) {
                return (T) body;
            } else {
                throw (e);
            }
        }
    }

    /**
     * Gson TypeAdapter for Byte Array type
     */
    public static class ByteArrayAdapter extends TypeAdapter<byte[]> {

        @Override
        public void write(JsonWriter out, byte[] value) throws IOException {
            if (value == null) {
                out.nullValue();
            } else {
                out.value(ByteString.of(value).base64());
            }
        }

        @Override
        public byte[] read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String bytesAsBase64 = in.nextString();
                    ByteString byteString = ByteString.decodeBase64(bytesAsBase64);
                    return byteString.toByteArray();
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 OffsetDateTime type
     */
    public static class OffsetDateTimeTypeAdapter extends TypeAdapter<OffsetDateTime> {

        private DateTimeFormatter formatter;

        public OffsetDateTimeTypeAdapter() {
            this(DateTimeFormatter.ISO_OFFSET_DATE_TIME);
        }

        public OffsetDateTimeTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, OffsetDateTime date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public OffsetDateTime read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    if (date.endsWith("+0000")) {
                        date = date.substring(0, date.length()-5) + "Z";
                    }
                    return OffsetDateTime.parse(date, formatter);
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 LocalDate type
     */
    public static class LocalDateTypeAdapter extends TypeAdapter<LocalDate> {

        private DateTimeFormatter formatter;

        public LocalDateTypeAdapter() {
            this(DateTimeFormatter.ISO_LOCAL_DATE);
        }

        public LocalDateTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, LocalDate date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public LocalDate read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    return LocalDate.parse(date, formatter);
            }
        }
    }

    public static void setOffsetDateTimeFormat(DateTimeFormatter dateFormat) {
        offsetDateTimeTypeAdapter.setFormat(dateFormat);
    }

    public static void setLocalDateFormat(DateTimeFormatter dateFormat) {
        localDateTypeAdapter.setFormat(dateFormat);
    }

    /**
     * Gson TypeAdapter for java.sql.Date type
     * If the dateFormat is null, a simple "yyyy-MM-dd" format will be used
     * (more efficient than SimpleDateFormat).
     */
    public static class SqlDateTypeAdapter extends TypeAdapter<java.sql.Date> {

        private DateFormat dateFormat;

        public SqlDateTypeAdapter() {}

        public SqlDateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, java.sql.Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toString();
                }
                out.value(value);
            }
        }

        @Override
        public java.sql.Date read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    try {
                        if (dateFormat != null) {
                            return new java.sql.Date(dateFormat.parse(date).getTime());
                        }
                        return new java.sql.Date(ISO8601Utils.parse(date, new ParsePosition(0)).getTime());
                    } catch (ParseException e) {
                        throw new JsonParseException(e);
                    }
            }
        }
    }

    /**
     * Gson TypeAdapter for java.util.Date type
     * If the dateFormat is null, ISO8601Utils will be used.
     */
    public static class DateTypeAdapter extends TypeAdapter<Date> {

        private DateFormat dateFormat;

        public DateTypeAdapter() {}

        public DateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = ISO8601Utils.format(date, true);
                }
                out.value(value);
            }
        }

        @Override
        public Date read(JsonReader in) throws IOException {
            try {
                switch (in.peek()) {
                    case NULL:
                        in.nextNull();
                        return null;
                    default:
                        String date = in.nextString();
                        try {
                            if (dateFormat != null) {
                                return dateFormat.parse(date);
                            }
                            return ISO8601Utils.parse(date, new ParsePosition(0));
                        } catch (ParseException e) {
                            throw new JsonParseException(e);
                        }
                }
            } catch (IllegalArgumentException e) {
                throw new JsonParseException(e);
            }
        }
    }

    public static void setDateFormat(DateFormat dateFormat) {
        dateTypeAdapter.setFormat(dateFormat);
    }

    public static void setSqlDateFormat(DateFormat dateFormat) {
        sqlDateTypeAdapter.setFormat(dateFormat);
    }
}
