openapi: 3.0.1
info:
  description: "This reference serves to document REST-based methods to manage and\
    \ integrate with Keyfactor. In addition, an embedded interface allows for the\
    \ execution of calls against the current Keyfactor API instance."
  title: Keyfactor-v1
  version: v1
servers:
- url: https://192.168.78.139/KeyfactorAPI
security:
- basicAuth: []
paths:
  /Agents/{id}:
    get:
      operationId: Agent_GetAgentDetail
      parameters:
      - description: Agent Id to Search
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentResponse'
          description: OK
      summary: "Returns details for a single agent, specified by ID"
      tags:
      - Agent
      x-accepts: application/json
  /Agents:
    get:
      operationId: Agent_GetAgents
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentResponse'
                type: array
          description: OK
      summary: Returns all agents according to the provided filter and output parameters
      tags:
      - Agent
      x-accepts: application/json
  /Agents/Reset:
    post:
      operationId: Agent_Reset0
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: List of Agent Ids to Reset
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Reset a list of agents
      tags:
      - Agent
      x-codegen-request-body-name: agentIds
      x-content-type: application/json
      x-accepts: application/json
  /Agents/Approve:
    post:
      operationId: Agent_Approve
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: List of Agent Ids to Approve
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Approve a list of agents
      tags:
      - Agent
      x-codegen-request-body-name: agentIds
      x-content-type: application/json
      x-accepts: application/json
  /Agents/Disapprove:
    post:
      operationId: Agent_Disapprove
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: List of Agent Ids to Disapprove
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Disapprove a list of agents
      tags:
      - Agent
      x-codegen-request-body-name: agentIds
      x-content-type: application/json
      x-accepts: application/json
  /Agents/{id}/Reset:
    post:
      operationId: Agent_Reset1
      parameters:
      - description: Guid Id of Agent to reset
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Reset an agent to a new state
      tags:
      - Agent
      x-accepts: application/json
  /Agents/{id}/FetchLogs:
    post:
      operationId: Agent_FetchLogs
      parameters:
      - description: Guid Id of the agent to schedule the job for.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Schedules a job on the agent to retrieve log files
      tags:
      - Agent
      x-accepts: application/json
  /Agents/SetAuthCertificateReenrollment:
    post:
      operationId: Agent_SetAuthCertificateReenrollment
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.UpdateOrchestratorAuthCertificateReenrollmentRequest'
        description: Object containing orchestrator ids and the new status those orchestrators
          should have
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.UpdateOrchestratorAuthCertificateReenrollmentResponse'
          description: OK
      summary: "Update the AuthCertificateReenrollment value for an agent to request\
        \ or require (or unset the request) the agent \r\nto enroll for a new client\
        \ authentication certificate on its next registration."
      tags:
      - Agent
      x-codegen-request-body-name: authCertReenrollmentRequest
      x-content-type: application/json
      x-accepts: application/json
  /AgentBluePrint/{id}:
    delete:
      operationId: AgentBlueprint_DeleteBlueprint
      parameters:
      - description: Keyfactor agent blueprint identifier (GUID)
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes an agent blueprint by its Keyfactor identifier
      tags:
      - AgentBlueprint
      x-accepts: application/json
    get:
      operationId: AgentBlueprint_GetAgentBlueprint
      parameters:
      - description: Returns a single agent blueprint associated with the provided
          id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentBlueprintResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentBlueprintResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentBlueprintResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentBlueprintResponse'
          description: OK
      summary: Returns an agent blueprint according to the provided filter and output
        parameters
      tags:
      - AgentBlueprint
      x-accepts: application/json
  /AgentBluePrint:
    get:
      operationId: AgentBlueprint_GetAgentBlueprints
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Field by which the results should be sorted (OperationStart,\
          \ OperationEnd, UserName)"
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentBlueprintResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentBlueprintResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentBlueprintResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentBlueprintResponse'
                type: array
          description: OK
      summary: Returns all agent blueprints according to the provided filter and output
        parameters
      tags:
      - AgentBlueprint
      x-accepts: application/json
  /AgentBluePrint/{id}/Jobs:
    get:
      operationId: AgentBlueprint_GetBlueprintJobs
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Field by which the results should be sorted (OperationStart,\
          \ OperationEnd, UserName)"
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentBlueprintJobsResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentBlueprintJobsResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentBlueprintJobsResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentBlueprintJobsResponse'
                type: array
          description: OK
      summary: Gets the agent blueprint scheduled jobs
      tags:
      - AgentBlueprint
      x-accepts: application/json
  /AgentBluePrint/{id}/Stores:
    get:
      operationId: AgentBlueprint_GetBlueprintStores
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Field by which the results should be sorted (OperationStart,\
          \ OperationEnd, UserName)"
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentBlueprintStoresResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentBlueprintStoresResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentBlueprintStoresResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentBlueprintStoresResponse'
                type: array
          description: OK
      summary: Gets the agent blueprint certificate stores
      tags:
      - AgentBlueprint
      x-accepts: application/json
  /AgentBluePrint/ApplyBlueprint:
    post:
      operationId: AgentBlueprint_ApplyBlueprint
      parameters:
      - description: Agent blueprint to apply to the agents
        explode: true
        in: query
        name: templateId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                type: string
              type: array
        description: Agents to apply the blueprints to
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Applies the selected agent blueprint to the provided agents
      tags:
      - AgentBlueprint
      x-codegen-request-body-name: agentIds
      x-content-type: application/json
      x-accepts: application/json
  /AgentBluePrint/GenerateBluePrint:
    post:
      operationId: AgentBlueprint_GenerateBlueprint
      parameters:
      - description: Agent to generate a blueprint from
        explode: true
        in: query
        name: agentId
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: Name of the new agent blueprint
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentBlueprintResponse'
          description: OK
      summary: Generates an agent blueprint from the provided agents
      tags:
      - AgentBlueprint
      x-accepts: application/json
  /AgentPools/{id}:
    delete:
      operationId: AgentPool_DeleteAgentPool
      parameters:
      - description: Keyfactor identifier (GUID) of the agent pool
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes the agent pool associated with the provided id
      tags:
      - AgentPool
      x-accepts: application/json
    get:
      operationId: AgentPool_GetAgentPoolById
      parameters:
      - description: Keyfactor (GUID) identifier of the agent pool
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.Agents.AgentPool'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.Agents.AgentPool'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.Agents.AgentPool'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.Agents.AgentPool'
          description: OK
      summary: Returns a single agent pool associated with the provided id
      tags:
      - AgentPool
      x-accepts: application/json
  /AgentPools:
    get:
      operationId: AgentPool_GetAgentPools
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Agents.AgentPool'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Agents.AgentPool'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Agents.AgentPool'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Agents.AgentPool'
                type: array
          description: OK
      summary: Returns all agent pools according to the provided filter and output
        parameters
      tags:
      - AgentPool
      x-accepts: application/json
    post:
      description: "- DiscoverAgentsCount = An integer specifying the number of agents\
        \ that can perform discovery jobs\r\n- MonitorAgentsCount = An integer specifying\
        \ the number of agents that can perform monitoring jobs"
      operationId: AgentPool_CreateAgentPool
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.Agents.AgentPool'
        description: Agent pool properties to be applied to the new pool
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.Agents.AgentPool'
          description: OK
      summary: Creates an agent pool with the provided properties
      tags:
      - AgentPool
      x-codegen-request-body-name: agentPool
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: "- DiscoverAgentsCount = An integer specifying the number of agents\
        \ that can perform discovery jobs\r\n- MonitorAgentsCount = An integer specifying\
        \ the number of agents that can perform monitoring jobs"
      operationId: AgentPool_UpdateAgentPool
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.Agents.AgentPool'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.Agents.AgentPool'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.Agents.AgentPool'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.Agents.AgentPool'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.Agents.AgentPool'
        description: Agent pool properties to be applied to the existing pool
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.Agents.AgentPool'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.Agents.AgentPool'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.Agents.AgentPool'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.Agents.AgentPool'
          description: OK
      summary: Updates an existing agent pool with the provided properties
      tags:
      - AgentPool
      x-codegen-request-body-name: agentPool
      x-content-type: application/json
      x-accepts: application/json
  /AgentPools/Agents:
    get:
      operationId: AgentPool_GetDefaultAgentPoolAgents
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Agents.AgentPoolAgent'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Agents.AgentPoolAgent'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Agents.AgentPoolAgent'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Agents.AgentPoolAgent'
                type: array
          description: OK
      summary: Returns all agents for the default agent pool
      tags:
      - AgentPool
      x-accepts: application/json
  /Audit/{id}:
    get:
      operationId: AuditLog_GetAuditLog
      parameters:
      - description: Keyfactor identifer of the audit entry to be returned
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
            text/xml:
              schema:
                type: object
          description: OK
      summary: Returns the audit log entry associated with the provided identifier
      tags:
      - AuditLog
      x-accepts: application/json
  /Audit/{id}/Validate:
    get:
      description: The validation performs a signing operation and checks the signature
        against the stored signature.
      operationId: AuditLog_ValidateAuditLog
      parameters:
      - description: Keyfactor identifier of the audit log entry
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
          description: OK
      summary: Validates the audit log entry associated with the provided keyfactor
        id
      tags:
      - AuditLog
      x-accepts: application/json
  /Audit:
    get:
      operationId: AuditLog_GetAuditLogs
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Keyfactor.Auditing.Querying.AuditLogEntry'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Keyfactor.Auditing.Querying.AuditLogEntry'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Keyfactor.Auditing.Querying.AuditLogEntry'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Keyfactor.Auditing.Querying.AuditLogEntry'
                type: array
          description: OK
      summary: Returns all audit log entries according to the provided filter and
        output parameters
      tags:
      - AuditLog
      x-accepts: application/json
  /Audit/Download:
    get:
      operationId: AuditLog_DownloadCSV
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
            text/xml:
              schema:
                type: string
          description: OK
      summary: Returns a Comma Separated file containing the audit log entries according
        to the provided filter
      tags:
      - AuditLog
      x-accepts: application/json
  /Audit/RelatedEntities:
    get:
      operationId: AuditLog_GetRelatedEntities
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Keyfactor.Auditing.Querying.AuditLogEntry'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Keyfactor.Auditing.Querying.AuditLogEntry'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Keyfactor.Auditing.Querying.AuditLogEntry'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Keyfactor.Auditing.Querying.AuditLogEntry'
                type: array
          description: OK
      summary: Returns the audit log entry associated with the provided keyfactor
        id
      tags:
      - AuditLog
      x-accepts: application/json
  /Certificates/{id}/Security:
    get:
      operationId: Certificate_GetCertificateSecurity
      parameters:
      - description: The Id of the certificate permissions are being checked on
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The Id of the collection the certificate belongs in. Defaults
          to no collection
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.Security.CertificatePermissions'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.Security.CertificatePermissions'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.Security.CertificatePermissions'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.Security.CertificatePermissions'
          description: OK
      summary: Gets the list of Security Identities and which permissions they have
        on the given certificate.
      tags:
      - Certificate
      x-accepts: application/json
  /Certificates/{id}/Validate:
    get:
      operationId: Certificate_ValidateCertificate
      parameters:
      - description: The Id of the certificate being checked
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: An optional parameter for the collectin Id the certificate is
          in.  Defaults to no collection
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.CertificateValidationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.CertificateValidationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.CertificateValidationResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.CertificateValidationResponse'
          description: OK
      summary: Validates the certificate chain can be built.
      tags:
      - Certificate
      x-accepts: application/json
  /Certificates/Locations/{id}:
    get:
      operationId: Certificate_GetCertificateLocations
      parameters:
      - description: Keyfactor certificate identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Optional certificate collection identifier used to ensure user
          access to the certificate
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Certificates.CertificateLocationsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Certificates.CertificateLocationsResponse'
          description: OK
      summary: Returns a list of locations the certificate is in
      tags:
      - Certificate
      x-accepts: application/json
  /Certificates/IdentityAudit/{id}:
    get:
      operationId: Certificate_IdentityAudit
      parameters:
      - description: The Id of the certificate being checked
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: An optional parameter for the collectin Id the certificate is
          in.  Defaults to no collection
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Certificates.CertificateIdentityAuditResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Certificates.CertificateIdentityAuditResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Certificates.CertificateIdentityAuditResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Certificates.CertificateIdentityAuditResponse'
                type: array
          description: OK
      summary: Audit identity permissions for certificate
      tags:
      - Certificate
      x-accepts: application/json
  /Certificates/{id}:
    delete:
      operationId: Certificate_DeleteCertificate
      parameters:
      - description: Keyfactor identifier of the certificate record
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Optional certificate collection identifier used to ensure user
          access to the certificate
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes a persisted certificate by its unique id as well as the stored
        private key (if present) associated with it
      tags:
      - Certificate
      x-accepts: application/json
    get:
      operationId: Certificate_GetCertificate
      parameters:
      - description: Keyfactor certificate identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Include locations data for the certificate to be returned
        explode: true
        in: query
        name: includeLocations
        required: false
        schema:
          type: boolean
        style: form
      - description: Include metadata for the certificate to be returned
        explode: true
        in: query
        name: includeMetadata
        required: false
        schema:
          type: boolean
        style: form
      - description: Optional certificate collection identifier used to ensure user
          access to the certificate
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: verbose
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.CertificateRetrievalResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.CertificateRetrievalResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.CertificateRetrievalResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.CertificateRetrievalResponse'
          description: OK
      summary: Returns a single certificate that matches the id
      tags:
      - Certificate
      x-accepts: application/json
  /Certificates/Metadata/Compare:
    get:
      operationId: Certificate_CompareMetadata
      parameters:
      - description: Certificate identifier
        explode: true
        in: query
        name: certificateId
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: Metadata field being compared
        explode: true
        in: query
        name: metadataFieldName
        required: true
        schema:
          type: string
        style: form
      - description: Value to compare against
        explode: true
        in: query
        name: value
        required: true
        schema:
          type: string
        style: form
      - description: Optional certificate collection identifier used to ensure user
          access to the certificate
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
          description: OK
      summary: Compares the metadata value provided with the metadata value associated
        with the specified certificate
      tags:
      - Certificate
      x-accepts: application/json
  /Certificates/{id}/History:
    get:
      operationId: Certificate_CertificateHistory
      parameters:
      - description: The Id of the certificate
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The collection the certificate could be in.  Defaults to no collection.
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: query.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: query.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Field by which the results should be sorted (OperationStart,\
          \ OperationEnd, UserName)"
        explode: true
        in: query
        name: query.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: query.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.PKI.CertificateOperation'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.PKI.CertificateOperation'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.PKI.CertificateOperation'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.PKI.CertificateOperation'
                type: array
          description: OK
      summary: Gets the history of operations on a certificate
      tags:
      - Certificate
      x-accepts: application/json
  /Certificates:
    delete:
      description: "This will ignore individual delete failures, and continue processing\
        \ the array"
      operationId: Certificate_DeleteCertificates
      parameters:
      - description: Optional certificate collection identifier used to ensure user
          access to the certificate
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                format: int32
                type: integer
              type: array
        description: The array of ids for certificate that are to be deleted
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes multiple persisted certificates by their unique ids
      tags:
      - Certificate
      x-codegen-request-body-name: ids
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: Certificate_QueryCertificates
      parameters:
      - description: Optional certificate collection identifier used to ensure user
          access to the certificate
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Include locations data for the certificates to be returned
        explode: true
        in: query
        name: includeLocations
        required: false
        schema:
          type: boolean
        style: form
      - description: Include metadata for the certificates to be returned
        explode: true
        in: query
        name: includeMetadata
        required: false
        schema:
          type: boolean
        style: form
      - description: Include whether the certificates to be returned have private
          keys stored in the Keyfactor database
        explode: true
        in: query
        name: includeHasPrivateKey
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: verbose
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: Select 'true' to include revoked certificates in the results
        explode: true
        in: query
        name: pq.includeRevoked
        required: false
        schema:
          type: boolean
        style: form
      - description: Select 'true' to include expired certificates in the results
        explode: true
        in: query
        name: pq.includeExpired
        required: false
        schema:
          type: boolean
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateRetrievalResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateRetrievalResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateRetrievalResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateRetrievalResponse'
                type: array
          description: OK
      summary: Returns all certificates according to the provided filter and output
        parameters
      tags:
      - Certificate
      x-accepts: application/json
  /Certificates/Metadata:
    put:
      operationId: Certificate_UpdateMetadata
      parameters:
      - description: Optional certificate collection identifier used to ensure user
          access to the certificate
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.MetadataUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.MetadataUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.MetadataUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.MetadataUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.MetadataUpdateRequest'
        description: Contains the Keyfactor certificate identifier and the metadata
          to be updated
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Updates the metadata for the certificate associated with the identifier
        provided
      tags:
      - Certificate
      x-codegen-request-body-name: metadataUpdate
      x-content-type: application/json
      x-accepts: application/json
  /Certificates/Metadata/All:
    put:
      operationId: Certificate_UpdateAllMetadata
      parameters:
      - description: Optional certificate collection identifier used to ensure user
          access to the certificate
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.MetadataAllUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.MetadataAllUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.MetadataAllUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.MetadataAllUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.MetadataAllUpdateRequest'
        description: Contains the Keyfactor certificate identifier and the metadata
          to be updated
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Updates the metadata for certificates associated with the certificate
        identifiers or query provided
      tags:
      - Certificate
      x-codegen-request-body-name: metadataUpdate
      x-content-type: application/json
      x-accepts: application/json
  /Certificates/Import:
    post:
      operationId: Certificate_PostImportCertificate
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.CertificateImportRequestModel'
        description: "Request containing the base 64 encoded string and related certificate\
          \ information, such as certificate stores, metadata, and password"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                ImportStatus: CreatedNewWithKey
                JobStatus: Success
                InvalidKeystores:
                - KeystoreId: 00000000-0000-0000-0000-000000000000
                  ClientMachine: <store host>
                  StorePath: <path to store>
                  Alias: <store alias>
                  Reason: NotFound
                  Explanation: <details>
              schema:
                $ref: '#/components/schemas/Models.CertificateImportResponseModel'
          description: OK
      summary: "Imports the provided certificate into the Keyfactor instance, including\
        \ any provided associated data"
      tags:
      - Certificate
      x-codegen-request-body-name: req
      x-content-type: application/json
      x-accepts: application/json
  /Certificates/Revoke:
    post:
      description: "### Revocation Reason Codes for Microsoft CA ###\r\n| Value  \
        \           | Description               |\r\n|-------------------|---------------------------|\r\
        \n| -1                | Remove from hold          |\r\n| 0               \
        \  | Unspecified               |\r\n| 1                 | Key compromised\
        \           |\r\n| 2                 | CA compromised            |\r\n| 3\
        \                 | Affiliation changed       |\r\n| 4                 | Superceded\
        \                |\r\n| 5                 | Cessation of operation    |\r\n\
        | 6                 | Certificate hold          |\r\n| 7                 |\
        \ Remove from CRL           |\r\n| 999               | Unknown           \
        \        |"
      operationId: Certificate_Revoke
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.RevokeCertificateRequest'
        description: Contains the Keyfactor certificate identifiers and revocation
          data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.Revocation.RevocationResponse'
          description: OK
      summary: Revokes the certificates associated with the provided identifiers and
        associates the provided data with the revocation
      tags:
      - Certificate
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
  /Certificates/Analyze:
    post:
      operationId: Certificate_AnalyzeCert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Certificates.AnalyzeCertificateRequest'
        description: The certificate to analyze
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateDetails'
                type: array
          description: OK
      summary: Returns the public information of the certificate
      tags:
      - Certificate
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
  /Certificates/Recover:
    post:
      description: "*NOTE: At least one of the following criteria must be provided:\r\
        \n1. Certificate ID\r\n2. Thumbprint\r\n3. Serial number AND Issuer DN (because\
        \ Serial Number is CA-specific and so is not unique enough on its own)"
      operationId: Certificate_RecoverCertificateAsync
      parameters:
      - description: Optional certificate collection identifier used to ensure user
          access to the certificate
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.CertificateRecoveryRequest'
        description: Query to filter the certificate to be recovered
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.RecoveryResponse'
          description: OK
      summary: Recovers the persisted certificate associated with the provided query
      tags:
      - Certificate
      x-codegen-request-body-name: rq
      x-content-type: application/json
      x-accepts: application/json
  /Certificates/Download:
    post:
      description: "*NOTE: At least one of the following criteria must be provided:\r\
        \n1. Certificate ID\r\n2. Thumbprint\r\n3. Serial number AND Issuer DN (because\
        \ Serial Number is CA-specific and so is not unique enough on its own)"
      operationId: Certificate_DownloadCertificateAsync
      parameters:
      - description: Optional certificate collection identifier used to ensure user
          access to the certificate
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.CertificateDownloadRequest'
        description: Query to filter the certificate to be recovered
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.CertificateDownloadResponse'
          description: OK
      summary: Downloads the persisted certificate associated with the provided query
      tags:
      - Certificate
      x-codegen-request-body-name: rq
      x-content-type: application/json
      x-accepts: application/json
  /Certificates/RevokeAll:
    post:
      description: "### Revocation Reason Codes for Microsoft CA ###\r\n| Value  \
        \           | Description              |\r\n|-------------------|--------------------------|\r\
        \n| -1                | Remove from hold         |\r\n| 0                \
        \ | Unspecified              |\r\n| 1                 | Key compromised  \
        \        |\r\n| 2                 | CA compromised           |\r\n| 3    \
        \             | Affiliation changed      |\r\n| 4                 | Superceded\
        \               |\r\n| 5                 | Cessation of operation   |\r\n\
        | 6                 | Certificate hold         |\r\n| 7                 |\
        \ Remove from CRL          |\r\n| 999               | Unknown            \
        \      |"
      operationId: Certificate_RevokeAll
      parameters:
      - description: A collection Id to be used for permissions and part of the query
          to revoke certificates
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.RevokeAllCertificatesRequest'
        description: Contains the Keyfactor Query and revocation data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.Revocation.RevocationResponse'
          description: OK
      summary: Revokes the certificates associated with the provided query and Collection
        Id and associates the provided data with the revocation
      tags:
      - Certificate
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
  /Certificates/Query:
    delete:
      description: "This will ignore individual delete failures, and continue processing\
        \ the array."
      operationId: Certificate_DeleteByQuery
      parameters:
      - description: Optional certificate collection identifier used to ensure user
          access to the certificate
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/xml:
            schema:
              type: string
          text/xml:
            schema:
              type: string
          application/x-www-form-urlencoded:
            schema:
              type: string
        description: Query by which certificates should be filtered for deletion
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes multiple persisted certificate entities selected by a given
        query
      tags:
      - Certificate
      x-codegen-request-body-name: sq
      x-content-type: application/json
      x-accepts: application/json
  /Certificates/PrivateKey:
    delete:
      operationId: Certificate_DeletePrivateKeys0
      parameters:
      - description: Optional certificate collection identifier used to ensure user
          access to the certificate
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                format: int32
                type: integer
              type: array
        description: Keyfactor identifiers of the cetficiates for which the associated
          private keys should be deleted
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes the persisted private keys of multiple certificates by the
        unique ids of the Certificates
      tags:
      - Certificate
      x-codegen-request-body-name: ids
      x-content-type: application/json
      x-accepts: application/json
  /Certificates/PrivateKey/{id}:
    delete:
      operationId: Certificate_DeletePrivateKeys1
      parameters:
      - description: Keyfactor identifier of the certificate for which the associated
          private key should be deleted
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Optional certificate collection identifier used to ensure user
          access to the certificate
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes the persisted private key of the certificate associated with
        the provided identifier
      tags:
      - Certificate
      x-accepts: application/json
  /CertificateAuthority/{id}:
    delete:
      operationId: CertificateAuthority_DeleteCA
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: "Deletes a CertificateAuthority from the system, specified by ID"
      tags:
      - CertificateAuthority
      x-accepts: application/json
    get:
      operationId: CertificateAuthority_GetCa
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.CertificateAuthorities.CertificateAuthorityResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.CertificateAuthorities.CertificateAuthorityResponse'
          description: OK
      summary: "Returns details for a single CA, specified by ID"
      tags:
      - CertificateAuthority
      x-accepts: application/json
  /CertificateAuthority:
    get:
      operationId: CertificateAuthority_GetCas
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateAuthorities.CertificateAuthorityResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateAuthorities.CertificateAuthorityResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateAuthorities.CertificateAuthorityResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateAuthorities.CertificateAuthorityResponse'
                type: array
          description: OK
      summary: Returns all certificate authorities
      tags:
      - CertificateAuthority
      x-accepts: application/json
    post:
      operationId: CertificateAuthority_CreateCA
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.CertificateAuthorities.CertificateAuthorityRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.CertificateAuthorities.CertificateAuthorityResponse'
          description: OK
      summary: Creates a new CertificateAuthority object
      tags:
      - CertificateAuthority
      x-codegen-request-body-name: ca
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: CertificateAuthority_UpdateCA
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.CertificateAuthorities.CertificateAuthorityRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.CertificateAuthorities.CertificateAuthorityRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.CertificateAuthorities.CertificateAuthorityRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.CertificateAuthorities.CertificateAuthorityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.CertificateAuthorities.CertificateAuthorityRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.CertificateAuthorities.CertificateAuthorityResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.CertificateAuthorities.CertificateAuthorityResponse'
          description: OK
      summary: Updates a CertificateAuthority object
      tags:
      - CertificateAuthority
      x-codegen-request-body-name: ca
      x-content-type: application/json
      x-accepts: application/json
  /CertificateAuthority/Test:
    post:
      operationId: CertificateAuthority_TestCertificateAuthority
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.CertificateAuthorities.CertificateAuthorityRequest'
        description: The CA being tested.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.CertificateAuthorities.CertificateAuthorityTestResponse'
          description: OK
      summary: Validates the connection info for the CA provided by the model.
      tags:
      - CertificateAuthority
      x-codegen-request-body-name: ca
      x-content-type: application/json
      x-accepts: application/json
  /CertificateAuthority/PublishCRL:
    post:
      operationId: CertificateAuthority_PublishCRL
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.CRLRequestModel'
        description: Host and logical name of the CA for which the CRL should be published
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Publishes a CRL according to the provided request
      tags:
      - CertificateAuthority
      x-codegen-request-body-name: crlrequest
      x-content-type: application/json
      x-accepts: application/json
  /CertificateCollections/{id}:
    get:
      operationId: CertificateCollection_GetCollection0
      parameters:
      - description: Identifier of the certificate collection
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.CertificateQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.CertificateQuery'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.CertificateQuery'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.CertificateQuery'
          description: OK
      summary: Returns the certificate collection definition associated with the provided
        Keyfactor identifier
      tags:
      - CertificateCollection
      x-accepts: application/json
  /CertificateCollections/{name}:
    get:
      operationId: CertificateCollection_GetCollection1
      parameters:
      - description: Name of the Collection
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.CertificateQuery'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.CertificateQuery'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.CertificateQuery'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.CertificateQuery'
          description: OK
      summary: Returns the certificate collection associated with the provided collection
        name
      tags:
      - CertificateCollection
      x-accepts: application/json
  /CertificateCollections:
    get:
      operationId: CertificateCollection_GetCollections
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateQuery'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateQuery'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateQuery'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateQuery'
                type: array
          description: OK
      summary: Returns all certificate collections
      tags:
      - CertificateCollection
      x-accepts: application/json
    post:
      description: "### Duplication Field Values ###\r\nThe field used to determine\
        \ if a certificate is a duplicate of another.\r\n| Value              | Description\
        \               |\r\n|--------------------|---------------------------|\r\n\
        | 1                  | Common name               |\r\n| 2                \
        \  | Distinguished name        |\r\n| 3                  | Principal name\
        \            |"
      operationId: CertificateCollection_CreateCollection
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.CertificateCollections.CertificateCollectionCreateRequest'
        description: Information related to the certificate collection query
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.CertificateCollections.CertificateCollectionResponse'
          description: OK
      summary: Creates a new certificate collection with the provided properties
      tags:
      - CertificateCollection
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: "### Duplication Field Values ###\r\nThe field used to determine\
        \ if a certificate is a duplicate of another.\r\n| Value              | Description\
        \               |\r\n|--------------------|---------------------------|\r\n\
        | 1                  | Common name               |\r\n| 2                \
        \  | Distinguished name        |\r\n| 3                  | Principal name\
        \            |"
      operationId: CertificateCollection_UpdateCollection
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.CertificateCollections.CertificateCollectionUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.CertificateCollections.CertificateCollectionUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.CertificateCollections.CertificateCollectionUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.CertificateCollections.CertificateCollectionUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.CertificateCollections.CertificateCollectionUpdateRequest'
        description: Information related to the certificate collection query
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.CertificateCollections.CertificateCollectionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.CertificateCollections.CertificateCollectionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.CertificateCollections.CertificateCollectionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.CertificateCollections.CertificateCollectionResponse'
          description: OK
      summary: Updates an existing certificate collection with the provided properties
      tags:
      - CertificateCollection
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
  /CertificateCollections/Copy:
    post:
      description: "### Duplication Field Values ###\r\nThe field used to determine\
        \ if a certificate is a duplicate of another.\r\n| Value              | Description\
        \               |\r\n|--------------------|---------------------------|\r\n\
        | 1                  | Common name               |\r\n| 2                \
        \  | Distinguished name        |\r\n| 3                  | Principal name\
        \            |"
      operationId: CertificateCollection_CopyFromExistingCollection
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.CertificateCollections.CertificateCollectionCopyRequest'
        description: Information related to the certificate collection query
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.CertificateCollections.CertificateCollectionResponse'
          description: OK
      summary: "Creates a new certificate collection from an existing collection.\
        \ The permissions, query and description of the \r\nexisting collection are\
        \ copied when creating the new record, with the option to overwrite the query\
        \ or description."
      tags:
      - CertificateCollection
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
  /CertificateCollections/{id}/Permissions:
    post:
      deprecated: true
      description: This endpoint should not be used as its use will potentially cause
        users to lose access to collections they previously had access to. This endpoint
        will be removed in version 11.
      operationId: CertificateCollection_SetCollectionPermissions
      parameters:
      - description: The collection to set permissions on
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Models.CollectionRolePermissions'
              type: array
        description: "The collection Permissions object ['Read', 'EditMetadata', 'Recover',\
          \ 'Revoke', 'Delete']"
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Set the permissions for a collection
      tags:
      - CertificateCollection
      x-codegen-request-body-name: collectionPermissions
      x-content-type: application/json
      x-accepts: application/json
  /CertificateStores:
    delete:
      description: "This will ignore individual delete failures, and continue processing\
        \ the array."
      operationId: CertificateStore_DeleteCertificateStores
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                type: string
              type: array
          text/json:
            schema:
              items:
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                type: string
              type: array
          application/xml:
            schema:
              items:
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                type: string
              type: array
          text/xml:
            schema:
              items:
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                type: string
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                example: 00000000-0000-0000-0000-000000000000
                format: uuid
                type: string
              type: array
        description: Array of Keyfactor identifiers (GUID) for the certificate stores
          to be deleted
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes multiple persisted certificate store entities by their identifiers
      tags:
      - CertificateStore
      x-codegen-request-body-name: ids
      x-content-type: application/json
      x-accepts: application/json
  /CertificateStores/{id}:
    delete:
      operationId: CertificateStore_DeleteCertificateStore
      parameters:
      - description: Keyfactor certificate store identifier (GUID)
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes a persisted certificate store by its Keyfactor identifier
      tags:
      - CertificateStore
      x-accepts: application/json
  /CertificateStores/{id}/Inventory:
    get:
      operationId: CertificateStore_GetCertificateStoreInventory
      parameters:
      - description: Keyfactor identifier (GUID) of the certificate store
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: query.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: query.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Field by which the results should be sorted (OperationStart,\
          \ OperationEnd, UserName)"
        explode: true
        in: query
        name: query.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: query.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateStoreInventory'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateStoreInventory'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateStoreInventory'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateStoreInventory'
                type: array
          description: OK
      summary: Returns a single certificate store's inventory associated with the
        provided id
      tags:
      - CertificateStore
      x-accepts: application/json
  /CertificateStores/Server:
    post:
      deprecated: true
      operationId: CertificateStore_CreateCertificateStoreServer
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.CertificateStoreCreateServerRequest'
        description: Certificate store server to be created with the provided properties
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.CertificateStoreServerResponse'
          description: OK
      summary: Creates a new certificate store server with the provided properties
      tags:
      - CertificateStore
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
    put:
      deprecated: true
      operationId: CertificateStore_UpdateCertificateStoreServer
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.CertificateStoreUpdateServerRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.CertificateStoreUpdateServerRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.CertificateStoreUpdateServerRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.CertificateStoreUpdateServerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.CertificateStoreUpdateServerRequest'
        description: Server to be updated with the provided properties
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.CertificateStoreServerResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.CertificateStoreServerResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.CertificateStoreServerResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.CertificateStoreServerResponse'
          description: OK
      summary: Updates a given certificate store server with the properties of the
        provided instance
      tags:
      - CertificateStore
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
  /CertificateStores/Password:
    put:
      operationId: CertificateStore_SetPassword
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.CertStoreNewPasswordRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.CertStoreNewPasswordRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.CertStoreNewPasswordRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.CertStoreNewPasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.CertStoreNewPasswordRequest'
        description: Identifier of the certificate store and the password to be applied
          to it
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Sets a password for the requested certificate store
      tags:
      - CertificateStore
      x-codegen-request-body-name: passwordRequest
      x-content-type: application/json
      x-accepts: application/json
  /CertificateStores/DiscoveryJob:
    put:
      operationId: CertificateStore_ConfigureDiscoveryJob
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.DiscoveryJobRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.DiscoveryJobRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.DiscoveryJobRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.DiscoveryJobRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.DiscoveryJobRequest'
        description: Configuration properties of the discovery job
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Configures a discovery job to locate currently unmanaged certificate
        stores
      tags:
      - CertificateStore
      x-codegen-request-body-name: discoveryJobRequest
      x-content-type: application/json
      x-accepts: application/json
  /CertificateStores/AssignContainer: {}
  /CertificateStores/Approve:
    post:
      operationId: CertificateStore_ApprovePending
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStores.CertificateStoreApproveRequest'
              type: array
        description: Certificate stores to be approved
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Approves the provided certificate stores to make them available for
        management
      tags:
      - CertificateStore
      x-codegen-request-body-name: keystores
      x-content-type: application/json
      x-accepts: application/json
  /CertificateStores/Schedule:
    post:
      operationId: CertificateStore_Schedule
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.CertStoresSchedule'
        description: Certificate store identifiers and the desired schedule
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Creates an inventory schedule for the provided certificate stores
      tags:
      - CertificateStore
      x-codegen-request-body-name: futureSchedule
      x-content-type: application/json
      x-accepts: application/json
  /CertificateStores/Reenrollment:
    post:
      operationId: CertificateStore_ScheduleForReenrollment
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStores.ReenrollmentRequest'
        description: "An object that contains a Keystore Id, a Agent Guid, a string\
          \ SubjectName and string Alias"
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Schedules a certificate store for reenrollment
      tags:
      - CertificateStore
      x-codegen-request-body-name: reenroll
      x-content-type: application/json
      x-accepts: application/json
  /CertificateStores/Certificates/Add:
    post:
      operationId: CertificateStore_AddCertificate
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStores.AddCertificateRequest'
        description: Configuration details of the management job
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                type: array
          description: OK
      summary: Configures a management job to add a certificate to one or more stores
        with the provided schedule
      tags:
      - CertificateStore
      x-codegen-request-body-name: addRequest
      x-content-type: application/json
      x-accepts: application/json
  /CertificateStores/Certificates/Remove:
    post:
      operationId: CertificateStore_RemoveCertificate
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStores.RemoveCertificateRequest'
        description: Configuration details of the management job
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  example: 00000000-0000-0000-0000-000000000000
                  format: uuid
                  type: string
                type: array
          description: OK
      summary: Configures a management job to remove a certificate from one or more
        stores with the provided schedule
      tags:
      - CertificateStore
      x-codegen-request-body-name: removalRequest
      x-content-type: application/json
      x-accepts: application/json
  /CertificateStoreContainers:
    get:
      operationId: CertificateStoreContainer_GetAllCertificateStoreContainers
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateStoreContainerListResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateStoreContainerListResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateStoreContainerListResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CertificateStoreContainerListResponse'
                type: array
          description: OK
      summary: Returns all certificate store container according to the provided filter
        and output parameters
      tags:
      - CertificateStoreContainer
      x-accepts: application/json
  /CertificateStoreContainers/{id}:
    delete:
      operationId: CertificateStoreContainer_DeleteCertificateStoreContainers
      parameters:
      - description: Id for the certificate store container
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete a certificate store container
      tags:
      - CertificateStoreContainer
      x-accepts: application/json
  /CertificateStoreTypes/{id}:
    delete:
      description: "This will ignore individual delete failures, and continue processing\
        \ certificate stores."
      operationId: CertificateStoreType_DeleteCertificateStoreType
      parameters:
      - description: Keyfactor identifier of the certificate store type to be deleted
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes a certificate store type according to the provided identifier
      tags:
      - CertificateStoreType
      x-accepts: application/json
    get:
      operationId: CertificateStoreType_GetCertificateStoreType0
      parameters:
      - description: Keyfactor identifier of the certificate store type
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeResponse'
          description: OK
      summary: Returns a single certificate store type that matches id
      tags:
      - CertificateStoreType
      x-accepts: application/json
  /CertificateStoreTypes/Name/{name}:
    get:
      operationId: CertificateStoreType_GetCertificateStoreType1
      parameters:
      - description: Short name of the certificate store type to return
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeResponse'
                type: array
          description: OK
      summary: Returns a single certificate store type that matches the provided short
        name
      tags:
      - CertificateStoreType
      x-accepts: application/json
  /CertificateStoreTypes:
    delete:
      description: "This will ignore individual delete failures, and continue processing\
        \ the array."
      operationId: CertificateStoreType_DeleteCertificateStoreTypes
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                format: int32
                type: integer
              type: array
        description: Array of Keyfactor identifiers of the certificate store types
          to be deleted
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes certificate store types according to the provided identifiers
      tags:
      - CertificateStoreType
      x-codegen-request-body-name: ids
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: CertificateStoreType_GetTypes
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: cstquery.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: cstquery.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: cstquery.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: cstquery.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: cstquery.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeResponse'
                type: array
          description: OK
      summary: Returns all certificate store types according to the provided filter
        and output parameters
      tags:
      - CertificateStoreType
      x-accepts: application/json
    post:
      operationId: CertificateStoreType_CreateCertificateStoreType
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeCreationRequest'
        description: Certificate store type properties for the new type
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeResponse'
          description: OK
      summary: Creates a new certificate store type with the provided properties
      tags:
      - CertificateStoreType
      x-codegen-request-body-name: certStoreType
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: CertificateStoreType_UpdateCertificateStoreType
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeUpdateRequest'
        description: Certificate store type properties to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeResponse'
          description: OK
      summary: Updates an existing certificate store type with the provided properties
      tags:
      - CertificateStoreType
      x-codegen-request-body-name: certStoreType
      x-content-type: application/json
      x-accepts: application/json
  /CSRGeneration/Pending/{id}:
    delete:
      operationId: CSRGeneration_DeleteCSR
      parameters:
      - description: Keyfactor identifer of the CSR to be deleted
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes a CSR associated with the provided identifier
      tags:
      - CSRGeneration
      x-accepts: application/json
    get:
      operationId: CSRGeneration_Download
      parameters:
      - description: Keyfactor identifier of the CSR
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.CSRGenerationResponseModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.CSRGenerationResponseModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.CSRGenerationResponseModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.CSRGenerationResponseModel'
          description: OK
      summary: Returns a previously generated CSR associated with the provided identifier
      tags:
      - CSRGeneration
      x-accepts: application/json
  /CSRGeneration/Pending:
    delete:
      operationId: CSRGeneration_DeleteCSRs
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                format: int32
                type: integer
              type: array
        description: Array of Keyfactor identifiers for the CSRs to be deleted
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes the CSRs associated with the provided identifiers
      tags:
      - CSRGeneration
      x-codegen-request-body-name: ids
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: CSRGeneration_GetPendingCSRs
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: sq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: sq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: sq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: sq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: sq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.PendingCSRResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.PendingCSRResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.PendingCSRResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.PendingCSRResponse'
                type: array
          description: OK
      summary: Returns a list of the currently pending CSRs according to the provided
        query
      tags:
      - CSRGeneration
      x-accepts: application/json
  /CSRGeneration/Generate:
    post:
      operationId: CSRGeneration_PostGenerate
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.Enrollment.CSRGenerationRequest'
        description: "CSR properties used to define the request - Key type [RSA, ECC],\
          \ Key sizes (ex: RSA 1024, 2048, 4096/ECC 256, 384, 521), template short\
          \ name or OID"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.CSRContents'
          description: OK
      summary: Generates a CSR according the properties provided
      tags:
      - CSRGeneration
      x-codegen-request-body-name: context
      x-content-type: application/json
      x-accepts: application/json
  /JobTypes/Custom/{id}:
    delete:
      operationId: CustomJobType_DeleteJobType
      parameters:
      - description: Keyfactor identifier (GUID) of the job type
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes the custom job type associated with the provided id
      tags:
      - CustomJobType
      x-accepts: application/json
    get:
      operationId: CustomJobType_GetJobTypeById
      parameters:
      - description: Keyfactor (GUID) identifier of the job type
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.JobTypeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.JobTypeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.JobTypeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.JobTypeResponse'
          description: OK
      summary: Returns a single custom job type associated with the provided id
      tags:
      - CustomJobType
      x-accepts: application/json
  /JobTypes/Custom:
    get:
      operationId: CustomJobType_GetJobTypes
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.JobTypeResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.JobTypeResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.JobTypeResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.JobTypeResponse'
                type: array
          description: OK
      summary: Returns all custom job types according to the provided filter and output
        parameters
      tags:
      - CustomJobType
      x-accepts: application/json
    post:
      operationId: CustomJobType_CreateJobType
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.OrchestratorJobs.JobTypeCreateRequest'
        description: job type properties to be applied to the new job type
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.JobTypeResponse'
          description: OK
      summary: Creates a custom job type with the provided properties
      tags:
      - CustomJobType
      x-codegen-request-body-name: jobType
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: CustomJobType_UpdateJobType
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.OrchestratorJobs.JobTypeUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.OrchestratorJobs.JobTypeUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.OrchestratorJobs.JobTypeUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.OrchestratorJobs.JobTypeUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.OrchestratorJobs.JobTypeUpdateRequest'
        description: job type properties to be applied to the existing job type
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.JobTypeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.JobTypeResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.JobTypeResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.JobTypeResponse'
          description: OK
      summary: Updates an existing custom job type with the provided properties
      tags:
      - CustomJobType
      x-codegen-request-body-name: jobType
      x-content-type: application/json
      x-accepts: application/json
  /Alerts/Denied/{id}:
    delete:
      operationId: DeniedAlert_DeleteDeniedAlert
      parameters:
      - description: Id for the denied alert
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete a denied alert
      tags:
      - DeniedAlert
      x-accepts: application/json
    get:
      operationId: DeniedAlert_GetDeniedAlert
      parameters:
      - description: Id for the denied alert to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertDefinitionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertDefinitionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertDefinitionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertDefinitionResponse'
          description: OK
      summary: Get a denied alert
      tags:
      - DeniedAlert
      x-accepts: application/json
  /Alerts/Denied:
    get:
      operationId: DeniedAlert_GetDeniedAlerts
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pagedQuery.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pagedQuery.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pagedQuery.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pagedQuery.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pagedQuery.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertDefinitionResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertDefinitionResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertDefinitionResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertDefinitionResponse'
                type: array
          description: OK
      summary: Gets all denied alerts according to the provided filter and output
        parameters
      tags:
      - DeniedAlert
      x-accepts: application/json
    post:
      operationId: DeniedAlert_AddDeniedAlert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertCreationRequest'
        description: Information for the new alert
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertDefinitionResponse'
          description: OK
      summary: Add a denied alert
      tags:
      - DeniedAlert
      x-codegen-request-body-name: req
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: DeniedAlert_EditDeniedAlert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertUpdateRequest'
        description: Information for the denied alert
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertDefinitionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertDefinitionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertDefinitionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Denied.DeniedAlertDefinitionResponse'
          description: OK
      summary: Edit a denied alert
      tags:
      - DeniedAlert
      x-codegen-request-body-name: req
      x-content-type: application/json
      x-accepts: application/json
  /Enrollment/Settings/{id}:
    get:
      operationId: Enrollment_GetTemplateEnrollmentSettings
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Templates.TemplateEnrollmentSettingsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Templates.TemplateEnrollmentSettingsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Templates.TemplateEnrollmentSettingsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Templates.TemplateEnrollmentSettingsResponse'
          description: OK
      summary: "Gets the template settings to use during enrollment. The response\
        \ will be the resolved values for the settings.\r\nIf there is a template\
        \ specific setting, the template specific setting will be used in the response.\r\
        \nIf there is not a template specific setting, the global setting will be\
        \ used in the response."
      tags:
      - Enrollment
      x-accepts: application/json
  /Enrollment/CSR/Context/My:
    get:
      operationId: Enrollment_GetMyCSRContext
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Core.Models.Enrollment.EnrollmentTemplateCAResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Core.Models.Enrollment.EnrollmentTemplateCAResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Core.Models.Enrollment.EnrollmentTemplateCAResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Core.Models.Enrollment.EnrollmentTemplateCAResponse'
          description: OK
      summary: Returns the list of available CSR enrollment templates and their associated
        CA mappings that the calling user has permissions on
      tags:
      - Enrollment
      x-accepts: application/json
  /Enrollment/PFX/Context/My:
    get:
      operationId: Enrollment_GetMyPFXContext
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Core.Models.Enrollment.EnrollmentTemplateCAResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Core.Models.Enrollment.EnrollmentTemplateCAResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Core.Models.Enrollment.EnrollmentTemplateCAResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Core.Models.Enrollment.EnrollmentTemplateCAResponse'
          description: OK
      summary: Returns the list of available PFX enrollment templates and their associated
        CA mappings that the calling user has permissions on
      tags:
      - Enrollment
      x-accepts: application/json
  /Enrollment/AvailableRenewal/Id/{id}:
    get:
      description: "### Available Renewal Types ###\r\n| Value              | Description\
        \               |\r\n|--------------------|---------------------------|\r\n\
        | 0              | None                 |\r\n| 1             | Seeded PFX\
        \                |\r\n| 2                | One-click                   |"
      operationId: Enrollment_AvailableRenewalId
      parameters:
      - description: The Keyfactor certificate Id
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The collection id for the given certificate
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.Enrollment.AvailableRenewal'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.Enrollment.AvailableRenewal'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.Enrollment.AvailableRenewal'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.Enrollment.AvailableRenewal'
          description: OK
      summary: Returns the type of renewal available for a given certificate.
      tags:
      - Enrollment
      x-accepts: application/json
  /Enrollment/AvailableRenewal/Thumbprint/{thumbprint}:
    get:
      operationId: Enrollment_AvailableRenewalThumbprint
      parameters:
      - description: The certificate thumbprint
        explode: false
        in: path
        name: thumbprint
        required: true
        schema:
          type: string
        style: simple
      - description: The collection id for the given certificate
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.Enrollment.AvailableRenewal'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.Enrollment.AvailableRenewal'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.Enrollment.AvailableRenewal'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.Enrollment.AvailableRenewal'
          description: OK
      summary: Returns the type of renewal available for a given certificate.
      tags:
      - Enrollment
      x-accepts: application/json
  /Enrollment/CSR:
    post:
      description: "### Subject Alternative Name Flags ###\r\n| Value            \
        \  | Description               |\r\n|--------------------|---------------------------|\r\
        \n| other              | OtherName                 |\r\n| rfc822         \
        \    | RFC822Name                |\r\n| dns                | DNSName     \
        \              |\r\n| x400               | X400Address               |\r\n\
        | directory          | DirectoryName             |\r\n| ediparty         \
        \  | EdipartyName              |\r\n| uri                | UniformResourceIdentifier\
        \ |\r\n| ip                 | IPAddress                 |\r\n| ip4       \
        \         | IPv4Address               |\r\n| ip6                | IPv6Address\
        \               |\r\n| registeredid       | RegisteredId              |\r\n\
        | ms_ntprincipalname | MS_NTPrincipalName        |\r\n| ms_ntdsreplication\
        \ | MS_NTDSReplication        |"
      operationId: Enrollment_PostCSREnroll
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      - description: "Desired format [PEM, DER]"
        explode: false
        in: header
        name: x-certificateformat
        required: true
        schema:
          default: PEM
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.Enrollment.CSREnrollmentRequest'
        description: Information needed to perform the CSR Enrollment
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                CertificateInformation:
                  SerialNumber: <serial number>
                  IssuerDN: <issuer DN>
                  Thumbprint: <hex thumbprint>
                  KeyfactorID: 0
                  Certificates:
                  - <base64-encoded end-entity certificate>
                  - <base64-encoded intermediate CA certificate>
                  - <base64-encoded root CA certificate>
                  KeyfactorRequestId: 0
                  RequestDisposition: <enrollment disposition>
                  DispositionMessage: <message>
                Metadata:
                  Email-Contact: user@domain.com
              schema:
                $ref: '#/components/schemas/Models.Enrollment.CSREnrollmentResponse'
          description: OK
      summary: Performs a CSR Enrollment based upon the provided request
      tags:
      - Enrollment
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
  /Enrollment/PFX:
    post:
      description: "### IMPORTANT: \r\n- The <b>'RenewalCertificateId'</b> field in\
        \ the request should be set to <b>null</b> if the certificate is not being\
        \ renewed as part of the enrollment. A value of <b>0</b> will produce an error.\r\
        \n\r\n### Subject Alternative Name Flags ###\r\n| Value              | Description\
        \               |\r\n|--------------------|---------------------------|\r\n\
        | other              | OtherName                 |\r\n| rfc822           \
        \  | RFC822Name                |\r\n| dns                | DNSName       \
        \            |\r\n| x400               | X400Address               |\r\n|\
        \ directory          | DirectoryName             |\r\n| ediparty         \
        \  | EdipartyName              |\r\n| uri                | UniformResourceIdentifier\
        \ |\r\n| ip                 | IPAddress                 |\r\n| ip4       \
        \         | IPv4Address               |\r\n| ip6                | IPv6Address\
        \               |\r\n| registeredid       | RegisteredId              |\r\n\
        | ms_ntprincipalname | MS_NTPrincipalName        |\r\n| ms_ntdsreplication\
        \ | MS_NTDSReplication        |"
      operationId: Enrollment_PostPFXEnroll
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      - description: "Desired format [PFX, Zip, STORE]"
        explode: false
        in: header
        name: x-certificateformat
        required: true
        schema:
          default: PFX
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.Enrollment.PFXEnrollmentRequest'
        description: The information needed to perform the PFX Enrollment
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                CertificateInformation:
                  SerialNumber: <serial number>
                  IssuerDN: <issuer DN>
                  Thumbprint: <hex thumbprint>
                  KeyfactorId: 0
                  Pkcs12Blob: <binary certificate data>
                  KeyfactorRequestId: 0
                  RequestDisposition: <enrollment disposition>
                  DispositionMessage: <message>
                Metadata:
                  Email-Contact: user@domain.com
              schema:
                $ref: '#/components/schemas/Models.Enrollment.PFXEnrollmentResponse'
          description: OK
      summary: Performs a PFX Enrollment based upon the provided request
      tags:
      - Enrollment
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
  /Enrollment/CSR/Parse:
    post:
      description: This functionality is equivalent to the result of pasting a CSR
        into the field within the Management Portal CSR Enrollment page.
      operationId: Enrollment_PostParsedCSR
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.CSRContents'
        description: CSR to be parsed
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
              - Key Length=2048
              - Key Type=RSA
              - Template=WebServer
              - TemplateId=<template oid>
              - CN=SRVR.CORP.com
              - DNS Name=SRVR.CORP.com
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Parses the provided CSR and returns the properties
      tags:
      - Enrollment
      x-codegen-request-body-name: csr
      x-content-type: application/json
      x-accepts: application/json
  /Enrollment/PFX/Deploy:
    post:
      operationId: Enrollment_InstallPFXToCertStore
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Enrollment.EnrollmentManagementRequest'
        description: "The request to create the management jobs, which includes the\
          \ request Id of the new pfx and the Ids and management job properties of\
          \ the cert stores to add the pfx to"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                SuccessfulStores:
                - 00000000-0000-0000-0000-000000000000
                - 00000000-0000-0000-0000-000000000000
                FailedStores:
                - 00000000-0000-0000-0000-000000000000
              schema:
                $ref: '#/components/schemas/KeyfactorAPI.Models.Enrollment.EnrollmentManagementResponse'
          description: OK
      summary: Creates management jobs to install a newly enrolled pfx in to one or
        more certificate stores
      tags:
      - Enrollment
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
  /Enrollment/PFX/Replace:
    post:
      operationId: Enrollment_AddToExistingCertStores
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.Enrollment.ExistingEnrollmentManagementRequest'
        description: "The request to create the management jobs, which includes the\
          \ request Id of the new pfx and the Id of the existing certificate"
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                SuccessfulStores:
                - 00000000-0000-0000-0000-000000000000
                - 00000000-0000-0000-0000-000000000000
                FailedStores:
                - 00000000-0000-0000-0000-000000000000
              schema:
                $ref: '#/components/schemas/KeyfactorAPI.Models.Enrollment.EnrollmentManagementResponse'
          description: OK
      summary: Creates management jobs to install a newly enrolled pfx into the same
        certificate stores as the previous certificate
      tags:
      - Enrollment
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
  /Enrollment/Renew:
    post:
      operationId: Enrollment_Renew
      parameters:
      - description: The collection id for the given certificate
        explode: true
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.Enrollment.RenewalRequest'
        description: The information needed to perform the renewal
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                KeyfactorId: 0
                KeyfactorRequestId: 0
                Thumbprint: <hex thumbprint>
                SerialNumber: <serial number>
                IssuerDN: <issuer DN>
                RequestDisposition: <enrollment disposition>
                DispositionMessage: <message>
                Password: <pfx password>
              schema:
                $ref: '#/components/schemas/Models.Enrollment.RenewalResponse'
          description: OK
      summary: Performs a renewal based upon the passed in request
      tags:
      - Enrollment
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
  /Alerts/Expiration/{id}:
    delete:
      operationId: ExpirationAlert_DeleteExpirationAlert
      parameters:
      - description: Id for the expiration alert
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete an expiration alert
      tags:
      - ExpirationAlert
      x-accepts: application/json
    get:
      operationId: ExpirationAlert_GetExpirationAlert
      parameters:
      - description: Id for the expiration alert to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertDefinitionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertDefinitionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertDefinitionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertDefinitionResponse'
          description: OK
      summary: Get an expiration alert
      tags:
      - ExpirationAlert
      x-accepts: application/json
  /Alerts/Expiration/Schedule:
    get:
      operationId: ExpirationAlert_GetSchedule
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
          description: OK
      summary: Get the schedule for expiration alerts
      tags:
      - ExpirationAlert
      x-accepts: application/json
    put:
      operationId: ExpirationAlert_EditSchedule
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
          description: OK
      summary: Edit schedule
      tags:
      - ExpirationAlert
      x-codegen-request-body-name: newSchedule
      x-content-type: application/json
      x-accepts: application/json
  /Alerts/Expiration:
    get:
      operationId: ExpirationAlert_GetExpirationAlerts
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pagedQuery.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pagedQuery.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pagedQuery.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pagedQuery.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pagedQuery.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertDefinitionResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertDefinitionResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertDefinitionResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertDefinitionResponse'
                type: array
          description: OK
      summary: Gets all expiration alerts according to the provided filter and output
        parameters
      tags:
      - ExpirationAlert
      x-accepts: application/json
    post:
      operationId: ExpirationAlert_AddExpirationAlert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertCreationRequest'
        description: Information for the new alert
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertDefinitionResponse'
          description: OK
      summary: Add an expiration alert
      tags:
      - ExpirationAlert
      x-codegen-request-body-name: req
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: ExpirationAlert_EditExpirationAlert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertUpdateRequest'
        description: Information for the expiration alert
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertDefinitionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertDefinitionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertDefinitionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertDefinitionResponse'
          description: OK
      summary: Edit an expiration alert
      tags:
      - ExpirationAlert
      x-codegen-request-body-name: req
      x-content-type: application/json
      x-accepts: application/json
  /Alerts/Expiration/Test:
    post:
      operationId: ExpirationAlert_TestExpirationAlert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertTestRequest'
        description: Information about the expiration alert test
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertTestResponse'
          description: OK
      summary: Test an Expiration Alert
      tags:
      - ExpirationAlert
      x-codegen-request-body-name: expirationAlertTestRequest
      x-content-type: application/json
      x-accepts: application/json
  /Alerts/Expiration/TestAll:
    post:
      operationId: ExpirationAlert_TestAllExpirationAlert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertTestAllRequest'
        description: Information about the expiration alert test
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertTestResponse'
          description: OK
      summary: Test All Expiration Alerts
      tags:
      - ExpirationAlert
      x-codegen-request-body-name: expirationAlertTestRequest
      x-content-type: application/json
      x-accepts: application/json
  /Alerts/Issued/{id}:
    delete:
      operationId: IssuedAlert_DeleteIssuedAlert
      parameters:
      - description: Id for the issued alert
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete a issued alert
      tags:
      - IssuedAlert
      x-accepts: application/json
    get:
      operationId: IssuedAlert_GetIssuedAlert
      parameters:
      - description: Id for the issued alert to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertDefinitionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertDefinitionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertDefinitionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertDefinitionResponse'
          description: OK
      summary: Get a issued alert
      tags:
      - IssuedAlert
      x-accepts: application/json
  /Alerts/Issued/Schedule:
    get:
      operationId: IssuedAlert_GetSchedule
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
          description: OK
      summary: Get the schedule for issued alerts
      tags:
      - IssuedAlert
      x-accepts: application/json
    put:
      operationId: IssuedAlert_EditSchedule
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
          description: OK
      summary: Edit schedule
      tags:
      - IssuedAlert
      x-codegen-request-body-name: newSchedule
      x-content-type: application/json
      x-accepts: application/json
  /Alerts/Issued:
    get:
      operationId: IssuedAlert_GetIssuedAlerts
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pagedQuery.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pagedQuery.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pagedQuery.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pagedQuery.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pagedQuery.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertDefinitionResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertDefinitionResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertDefinitionResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertDefinitionResponse'
                type: array
          description: OK
      summary: Gets all issued alerts according to the provided filter and output
        parameters
      tags:
      - IssuedAlert
      x-accepts: application/json
    post:
      operationId: IssuedAlert_AddIssuedAlert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertCreationRequest'
        description: Information for the new alert
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertDefinitionResponse'
          description: OK
      summary: Add a issued alert
      tags:
      - IssuedAlert
      x-codegen-request-body-name: req
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: IssuedAlert_EditIssuedAlert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertUpdateRequest'
        description: Information for the issued alert
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertDefinitionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertDefinitionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertDefinitionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Issued.IssuedAlertDefinitionResponse'
          description: OK
      summary: Edit a issued alert
      tags:
      - IssuedAlert
      x-codegen-request-body-name: req
      x-content-type: application/json
      x-accepts: application/json
  /SSH/Keys/Unmanaged/{id}:
    delete:
      operationId: Key_DeleteUnmanagedKey
      parameters:
      - description: Keyfactor identifer of the Key to be deleted
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes Unmanaged Key associated with the provided identifier
      tags:
      - Key
      x-accepts: application/json
    get:
      operationId: Key_GetUnmanagedKey
      parameters:
      - description: The id of the key to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Keys.UnmanagedKeyResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Keys.UnmanagedKeyResponse'
          description: OK
      summary: Returns an unmanaged SSH key with provided id.
      tags:
      - Key
      x-accepts: application/json
  /SSH/Keys/MyKey:
    get:
      operationId: Key_GetMyKey
      parameters:
      - description: "Whether or not to include the private key. If true, you must\
          \ supply the X-Keyfactor-Key-Passphrase header"
        explode: true
        in: query
        name: includePrivateKey
        required: false
        schema:
          type: boolean
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      - description: Key password
        explode: false
        in: header
        name: x-keyfactor-key-passphrase
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Keys.KeyResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Keys.KeyResponse'
          description: OK
      summary: Returns the current key of the requesting user
      tags:
      - Key
      x-accepts: application/json
    post:
      description: "### SSH Key Algorithms ###\r\n| Value              | Description\
        \               |\r\n|--------------------|---------------------------|\r\n\
        | 0              | Unknown                 |\r\n| 1             | ECDSA  \
        \              |\r\n| 2                | Ed25519                   |\r\n|\
        \ 3                | RSA                   |\r\n\r\n### Private Key Formats\
        \ ###\r\n| Value              | Description               |\r\n|--------------------|---------------------------|\r\
        \n| 0              | Unknown                 |\r\n| 1             | OpenSSH\
        \                |\r\n| 2                | PKCS8                   |"
      operationId: Key_GenerateKey
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Keys.KeyGenerationRequest'
        description: Object containing information about the key to be generated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Keys.KeyResponse'
          description: OK
      summary: Generates an SSH Key Pair for the requesting user.
      tags:
      - Key
      x-codegen-request-body-name: generationRequest
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Key_Update
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Keys.KeyUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Keys.KeyUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.SSH.Keys.KeyUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.SSH.Keys.KeyUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.SSH.Keys.KeyUpdateRequest'
        description: Updated state of the SSH key
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Keys.KeyResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Keys.KeyResponse'
          description: OK
      summary: Updates the requesting user's SSH key
      tags:
      - Key
      x-codegen-request-body-name: keyUpdateRequest
      x-content-type: application/json
      x-accepts: application/json
  /SSH/Keys/Unmanaged:
    delete:
      operationId: Key_DeleteUnmanagedKeys
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                format: int32
                type: integer
              type: array
        description: Keyfactor identifers of the Keys to be deleted
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes Unmanaged Keys associated with the provided identifiers
      tags:
      - Key
      x-codegen-request-body-name: ids
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: Key_GetUnmanagedKeys
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.Keys.UnmanagedKeyResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.Keys.UnmanagedKeyResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.Keys.UnmanagedKeyResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.Keys.UnmanagedKeyResponse'
                type: array
          description: OK
      summary: Returns Unmanaged SSH keys
      tags:
      - Key
      x-accepts: application/json
  /Alerts/KeyRotation/{id}:
    delete:
      operationId: KeyRotationAlert_DeleteKeyRotationAlert
      parameters:
      - description: Id for the key rotation alert
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete a key rotation alert
      tags:
      - KeyRotationAlert
      x-accepts: application/json
    get:
      operationId: KeyRotationAlert_GetKeyRotationAlert
      parameters:
      - description: Id for the key rotation alert to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertDefinitionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertDefinitionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertDefinitionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertDefinitionResponse'
          description: OK
      summary: Get a key rotation alert
      tags:
      - KeyRotationAlert
      x-accepts: application/json
  /Alerts/KeyRotation/Schedule:
    get:
      operationId: KeyRotationAlert_GetSchedule
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
          description: OK
      summary: Get the schedule for key rotation alerts
      tags:
      - KeyRotationAlert
      x-accepts: application/json
    put:
      operationId: KeyRotationAlert_EditSchedule
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
          description: OK
      summary: Edit schedule
      tags:
      - KeyRotationAlert
      x-codegen-request-body-name: newSchedule
      x-content-type: application/json
      x-accepts: application/json
  /Alerts/KeyRotation:
    get:
      operationId: KeyRotationAlert_GetKeyRotationAlerts
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pagedQuery.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pagedQuery.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pagedQuery.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pagedQuery.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pagedQuery.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertDefinitionResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertDefinitionResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertDefinitionResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertDefinitionResponse'
                type: array
          description: OK
      summary: Gets all key rotation alerts according to the provided filter and output
        parameters
      tags:
      - KeyRotationAlert
      x-accepts: application/json
    post:
      operationId: KeyRotationAlert_AddKeyRotationAlert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertCreationRequest'
        description: Information for the new alert
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertDefinitionResponse'
          description: OK
      summary: Add a key rotation alert
      tags:
      - KeyRotationAlert
      x-codegen-request-body-name: req
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: KeyRotationAlert_EditKeyRotationAlert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertUpdateRequest'
        description: Information for the key rotation alert
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertDefinitionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertDefinitionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertDefinitionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertDefinitionResponse'
          description: OK
      summary: Edit a key rotation alert
      tags:
      - KeyRotationAlert
      x-codegen-request-body-name: req
      x-content-type: application/json
      x-accepts: application/json
  /Alerts/KeyRotation/Test:
    post:
      operationId: KeyRotationAlert_TestKeyRotationAlert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertTestRequest'
        description: Parameters used to test the alert
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertTestResponse'
          description: OK
      summary: Test An Alert
      tags:
      - KeyRotationAlert
      x-codegen-request-body-name: keyRotationAlertTestRequest
      x-content-type: application/json
      x-accepts: application/json
  /Alerts/KeyRotation/TestAll:
    post:
      operationId: KeyRotationAlert_TestAllKeyRotationAlert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertTestAllRequest'
        description: Information about the key rotation alert test
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertTestResponse'
          description: OK
      summary: Test All Alerts
      tags:
      - KeyRotationAlert
      x-codegen-request-body-name: keyRotationAlertTestRequest
      x-content-type: application/json
      x-accepts: application/json
  /License:
    get:
      operationId: License_GetCurrentLicense
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.License.LicenseResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.License.LicenseResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.License.LicenseResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.License.LicenseResponse'
          description: OK
      summary: Gets the current license
      tags:
      - License
      x-accepts: application/json
  /SSH/Logons/{id}:
    delete:
      operationId: Logon_Delete
      parameters:
      - description: Keyfactor identifer of the Logon to be deleted
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes a Logon associated with the provided identifier
      tags:
      - Logon
      x-accepts: application/json
    get:
      operationId: Logon_GetLogon
      parameters:
      - description: Keyfactor identifer of the Logon to be Fetched
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Logons.LogonResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Logons.LogonResponse'
          description: OK
      summary: Fetches a Logon associated with the provided identifier
      tags:
      - Logon
      x-accepts: application/json
  /SSH/Logons:
    get:
      operationId: Logon_QueryLogons
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.Logons.LogonQueryResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.Logons.LogonQueryResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.Logons.LogonQueryResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.Logons.LogonQueryResponse'
                type: array
          description: OK
      summary: Returns all Logons according to the provided filter parameters
      tags:
      - Logon
      x-accepts: application/json
    post:
      operationId: Logon_CreateLogon
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Logons.LogonCreationRequest'
        description: Logon properties to be applied to the new logon
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Logons.LogonResponse'
          description: OK
      summary: Creates a logon with the provided properties
      tags:
      - Logon
      x-codegen-request-body-name: logon
      x-content-type: application/json
      x-accepts: application/json
  /SSH/Logons/Access:
    post:
      operationId: Logon_LogonAccess
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Logons.LogonAccessRequest'
        description: Users to add the existing logon
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Access.LogonUserAccessResponse'
          description: OK
      summary: Updates the users with access to an existing logon
      tags:
      - Logon
      x-codegen-request-body-name: logon
      x-content-type: application/json
      x-accepts: application/json
  /MacEnrollment:
    get:
      operationId: MacEnrollment_MacEnrollment
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.MacEnrollment.MacEnrollmentAPIModel'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.MacEnrollment.MacEnrollmentAPIModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.MacEnrollment.MacEnrollmentAPIModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.MacEnrollment.MacEnrollmentAPIModel'
          description: OK
      summary: Gets mac enrollment settings data
      tags:
      - MacEnrollment
      x-accepts: application/json
    put:
      operationId: MacEnrollment_EditMacEnrollment
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.MacEnrollment.MacEnrollmentAPIModel'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.MacEnrollment.MacEnrollmentAPIModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.MacEnrollment.MacEnrollmentAPIModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.MacEnrollment.MacEnrollmentAPIModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.MacEnrollment.MacEnrollmentAPIModel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.MacEnrollment.MacEnrollmentAPIModel'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.MacEnrollment.MacEnrollmentAPIModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.MacEnrollment.MacEnrollmentAPIModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.MacEnrollment.MacEnrollmentAPIModel'
          description: OK
      summary: Updates mac enrollment settings data
      tags:
      - MacEnrollment
      x-codegen-request-body-name: macEnrollmentSettings
      x-content-type: application/json
      x-accepts: application/json
  /MetadataFields/{id}:
    delete:
      operationId: MetadataField_DeleteMetadataField
      parameters:
      - description: Keyfactor identifier of the metadata field type
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Forces deletion of the metadata field type even if in-use
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes a persisted metadata field type by its unique id
      tags:
      - MetadataField
      x-accepts: application/json
    get:
      operationId: MetadataField_GetMetadataField0
      parameters:
      - description: The unique id of the metadata field type
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.MetadataFieldTypeModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.MetadataFieldTypeModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.MetadataFieldTypeModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.MetadataFieldTypeModel'
          description: OK
      summary: Gets a persisted metadata field type by its unique id
      tags:
      - MetadataField
      x-accepts: application/json
  /MetadataFields/{name}:
    get:
      operationId: MetadataField_GetMetadataField1
      parameters:
      - description: The unique name of the metadata field.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.MetadataFieldTypeModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.MetadataFieldTypeModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.MetadataFieldTypeModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.MetadataFieldTypeModel'
          description: OK
      summary: Gets a persisted metadata field type by its unique name
      tags:
      - MetadataField
      x-accepts: application/json
  /MetadataFields/{id}/InUse:
    get:
      operationId: MetadataField_GetMetadataFieldInUse
      parameters:
      - description: Keyfactor identitifer of the metadata field
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
            text/xml:
              schema:
                type: boolean
          description: OK
      summary: Determines if a metadata field type associated with the provided identifier
        is currently in use
      tags:
      - MetadataField
      x-accepts: application/json
  /MetadataFields:
    delete:
      description: "This will ignore individual delete failures, and continue processing\
        \ the array."
      operationId: MetadataField_DeleteMetadataFields
      parameters:
      - description: Forces deletion of the metadata field type even if in-use
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                format: int32
                type: integer
              type: array
        description: Array of Keyfactor identifiers for metadata field types to be
          deleted
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes multiple persisted metadata field types by their unique ids
      tags:
      - MetadataField
      x-codegen-request-body-name: ids
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: MetadataField_GetAllMetadataFields
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.MetadataFieldTypeModel'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.MetadataFieldTypeModel'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.MetadataFieldTypeModel'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.MetadataFieldTypeModel'
                type: array
          description: OK
      summary: Returns all metadata field types according to the provided filter and
        output parameters
      tags:
      - MetadataField
      x-accepts: application/json
    post:
      description: "*NOTE: Metadata Field in this context refers to MetadataFieldType,\
        \ as opposed to the value of a metadata field associated with a certificate."
      operationId: MetadataField_CreateMetadataField
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.MetadataField.MetadataFieldCreateRequest'
        description: Properties of the metadata field type to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.MetadataField.MetadataFieldResponse'
          description: OK
      summary: Creates a new metadata field type with the given metadata field type
        properties
      tags:
      - MetadataField
      x-codegen-request-body-name: metadataFieldType
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: "*NOTE: Metadata Field in this context refers to MetadataFieldType,\
        \ as opposed to the value of a metadata field associated with a certificate."
      operationId: MetadataField_UpdateMetadataField
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.MetadataField.MetadataFieldUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.MetadataField.MetadataFieldUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.MetadataField.MetadataFieldUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.MetadataField.MetadataFieldUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.MetadataField.MetadataFieldUpdateRequest'
        description: Properties of the metadata field type to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.MetadataField.MetadataFieldResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.MetadataField.MetadataFieldResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.MetadataField.MetadataFieldResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.MetadataField.MetadataFieldResponse'
          description: OK
      summary: Updates a persisted metadata field with the given metadata field type
      tags:
      - MetadataField
      x-codegen-request-body-name: metadataFieldType
      x-content-type: application/json
      x-accepts: application/json
  /Monitoring/Revocation/{id}:
    delete:
      operationId: Monitoring_DeleteRevocationMonitoring
      parameters:
      - description: Id for the revocation monitoring endpoint
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete a revocation monitoring endpoint
      tags:
      - Monitoring
      x-accepts: application/json
    get:
      operationId: Monitoring_GetRevocationMonitoring
      parameters:
      - description: Id for the endpoint to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringDefinitionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringDefinitionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringDefinitionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringDefinitionResponse'
          description: OK
      summary: Get a revocation monitoring endpoint
      tags:
      - Monitoring
      x-accepts: application/json
  /Monitoring/Revocation:
    get:
      operationId: Monitoring_GetRevocationMonitoringEndpoints
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pagedQuery.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pagedQuery.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pagedQuery.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pagedQuery.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pagedQuery.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringDefinitionResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringDefinitionResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringDefinitionResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringDefinitionResponse'
                type: array
          description: OK
      summary: Gets all revocation monitoring endpoints according to the provided
        filter and output parameters
      tags:
      - Monitoring
      x-accepts: application/json
    post:
      operationId: Monitoring_AddRevocationMonitoring
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringCreationRequest'
        description: Information for the new endpoint
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringDefinitionResponse'
          description: OK
      summary: Add a revocation monitoring endpoint
      tags:
      - Monitoring
      x-codegen-request-body-name: endpoint
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Monitoring_EditRevocationMonitoring
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringUpdateRequest'
        description: Information for the endpoint
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringDefinitionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringDefinitionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringDefinitionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringDefinitionResponse'
          description: OK
      summary: Edit a revocation monitoring endpoint
      tags:
      - Monitoring
      x-codegen-request-body-name: endpoint
      x-content-type: application/json
      x-accepts: application/json
  /Monitoring/ResolveOCSP:
    post:
      operationId: Monitoring_ResolveOCSP
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.OCSPParametersRequest'
        description: Information for the new endpoint
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                CertificateAuthorityId: 1
                AuthorityName: <CA Name>
                AuthorityNameId: <CA name id>
                AuthorityKeyId: <CA key id>
                SampleSerialNumber: <serial number>
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.OCSPParametersResponse'
          description: OK
      summary: Resolve the Certificate authority given
      tags:
      - Monitoring
      x-codegen-request-body-name: endpoint
      x-content-type: application/json
      x-accepts: application/json
  /Monitoring/Revocation/Test:
    post:
      operationId: Monitoring_TestRevocationMonitoringAlert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringAlertTestRequest'
        description: Information about the revocation monitoring alert test
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringAlertTestResponse'
          description: OK
      summary: Test Alert
      tags:
      - Monitoring
      x-codegen-request-body-name: revocationMonitoringAlertTestRequest
      x-content-type: application/json
      x-accepts: application/json
  /Monitoring/Revocation/TestAll:
    post:
      operationId: Monitoring_TestAllRevocationMonitoringAlert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringAlertTestAllRequest'
        description: Information about the revocation monitoring alert test
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.RevocationMonitoringAlertTestResponse'
          description: OK
      summary: Test All Alerts
      tags:
      - Monitoring
      x-codegen-request-body-name: revocationMonitoringAlertTestRequest
      x-content-type: application/json
      x-accepts: application/json
  /OrchestratorJobs/JobStatus/Data:
    get:
      operationId: OrchestratorJob_GetCustomJobResultData
      parameters:
      - description: Identifier of the job history record to retrieve
        explode: true
        in: query
        name: jobHistoryId
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.CustomJobResultDataResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.CustomJobResultDataResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.CustomJobResultDataResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.CustomJobResultDataResponse'
          description: OK
      summary: Retrieves the results of a custom job using the provided information
      tags:
      - OrchestratorJob
      x-accepts: application/json
  /OrchestratorJobs/JobHistory:
    get:
      operationId: OrchestratorJob_GetJobHistory
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStores.JobHistoryResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStores.JobHistoryResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStores.JobHistoryResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.CertificateStores.JobHistoryResponse'
                type: array
          description: OK
      summary: Returns all histories of an orchestrator job according to the provided
        filter and output parameters
      tags:
      - OrchestratorJob
      x-accepts: application/json
  /OrchestratorJobs/ScheduledJobs:
    get:
      operationId: OrchestratorJob_GetScheduledJobs
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.OrchestratorJobs.Job'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.OrchestratorJobs.Job'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.OrchestratorJobs.Job'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.OrchestratorJobs.Job'
                type: array
          description: OK
      summary: Returns all scheduled orchestrator jobs according to the provided filter
        and output parameters
      tags:
      - OrchestratorJob
      x-accepts: application/json
  /OrchestratorJobs/Custom:
    post:
      operationId: OrchestratorJob_ScheduleJob
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.OrchestratorJobs.ScheduleJobRequest'
        description: "Information to use to schedule the job, including the type of\
          \ custom job, agent to use, and job-specific parameters."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.JobResponse'
          description: OK
      summary: Schedules a job for a custom JobType on the agent using the provided
        information
      tags:
      - OrchestratorJob
      x-codegen-request-body-name: req
      x-content-type: application/json
      x-accepts: application/json
  /OrchestratorJobs/Reschedule:
    post:
      operationId: OrchestratorJob_RescheduleJobs
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.RescheduleJobRequest'
        description: "Information to identify the jobs to reschedule, either a query\
          \ or a list of job identifiers"
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Reschedules orchestrator jobs based on the provided information
      tags:
      - OrchestratorJob
      x-codegen-request-body-name: req
      x-content-type: application/json
      x-accepts: application/json
  /OrchestratorJobs/Unschedule:
    post:
      operationId: OrchestratorJob_UnscheduleJobs
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.UnscheduleJobRequest'
        description: "Information to identify the orchestrator jobs to unschedule,\
          \ either a query or a list of job identifiers"
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Unschedules orchestrator jobs based on the provided information
      tags:
      - OrchestratorJob
      x-codegen-request-body-name: req
      x-content-type: application/json
      x-accepts: application/json
  /OrchestratorJobs/Acknowledge:
    post:
      operationId: OrchestratorJob_AcknowledgeJobs
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.AcknowledgeJobRequest'
        description: "Information to identify the jobs to acknowledge, either a query\
          \ or a list of job identifiers"
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Acknowledges orchestrator jobs based on the provided information
      tags:
      - OrchestratorJob
      x-codegen-request-body-name: req
      x-content-type: application/json
      x-accepts: application/json
  /OrchestratorJobs/Custom/Bulk:
    post:
      operationId: OrchestratorJob_ScheduleBulkJob
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.OrchestratorJobs.ScheduleBulkJobRequest'
        description: "Information to use to schedule the jobs, including the type\
          \ of custom job, agents to use, and job-specific parameters."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.BulkJobResponse'
          description: OK
      summary: Schedules the same job for a custom JobType on the specified agents
        using the provided information
      tags:
      - OrchestratorJob
      x-codegen-request-body-name: req
      x-content-type: application/json
      x-accepts: application/json
  /PamProviders/{id}:
    delete:
      operationId: PAMProvider_DeletePamProvider
      parameters:
      - description: Keyfactor identifier of the PAM provider to be deleted
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes a PAM Provider
      tags:
      - PAMProvider
      x-accepts: application/json
  /PamProviders/Types:
    post:
      description: "### PAM Provider Data Types ###\r\n| Value              | Description\
        \               |\r\n|--------------------|---------------------------|\r\n\
        | 1                  | string                    |\r\n| 2                \
        \  | secret                    |"
      operationId: PAMProvider_CreatePamProviderType
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.PAM.ProviderTypeCreateRequest'
        description: PAM provider type properties to be used
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.PAM.ProviderTypeResponse'
          description: OK
      summary: Creates a new PAM provider type with the associated properties
      tags:
      - PAMProvider
      x-codegen-request-body-name: type
      x-content-type: application/json
      x-accepts: application/json
  /PamProviders: {}
  /Alerts/Pending/{id}:
    delete:
      operationId: PendingAlert_DeletePendingAlert
      parameters:
      - description: Id for the pending alert
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete a pending alert
      tags:
      - PendingAlert
      x-accepts: application/json
    get:
      operationId: PendingAlert_GetPendingAlert
      parameters:
      - description: Id for the pending alert to get
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertDefinitionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertDefinitionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertDefinitionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertDefinitionResponse'
          description: OK
      summary: Get a pending alert
      tags:
      - PendingAlert
      x-accepts: application/json
  /Alerts/Pending/Schedule:
    get:
      operationId: PendingAlert_GetSchedule
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
          description: OK
      summary: Get the schedule for pending alerts
      tags:
      - PendingAlert
      x-accepts: application/json
    put:
      operationId: PendingAlert_EditSchedule
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse'
          description: OK
      summary: Edit schedule
      tags:
      - PendingAlert
      x-codegen-request-body-name: newSchedule
      x-content-type: application/json
      x-accepts: application/json
  /Alerts/Pending:
    get:
      operationId: PendingAlert_GetPendingAlerts
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pagedQuery.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pagedQuery.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pagedQuery.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pagedQuery.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pagedQuery.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertDefinitionResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertDefinitionResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertDefinitionResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertDefinitionResponse'
                type: array
          description: OK
      summary: Gets all pending alerts according to the provided filter and output
        parameters
      tags:
      - PendingAlert
      x-accepts: application/json
    post:
      operationId: PendingAlert_AddPendingAlert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertCreationRequest'
        description: Information for the new alert
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertDefinitionResponse'
          description: OK
      summary: Add a pending alert
      tags:
      - PendingAlert
      x-codegen-request-body-name: req
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: PendingAlert_EditPendingAlert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertUpdateRequest'
        description: Information for the pending alert
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertDefinitionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertDefinitionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertDefinitionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertDefinitionResponse'
          description: OK
      summary: Edit a pending alert
      tags:
      - PendingAlert
      x-codegen-request-body-name: req
      x-content-type: application/json
      x-accepts: application/json
  /Alerts/Pending/Test:
    post:
      operationId: PendingAlert_TestPendingAlert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertTestRequest'
        description: Information for the pending alert
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertTestResponse'
          description: OK
      summary: Test pending alert. Will send alert emails if SendAlerts is true
      tags:
      - PendingAlert
      x-codegen-request-body-name: req
      x-content-type: application/json
      x-accepts: application/json
  /Alerts/Pending/TestAll:
    post:
      operationId: PendingAlert_TestAllPendingAlert
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertTestAllRequest'
        description: Information for the pending alert
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertTestResponse'
          description: OK
      summary: Test all pending alerts. Will send alert emails if SendAlerts is true
      tags:
      - PendingAlert
      x-codegen-request-body-name: req
      x-content-type: application/json
      x-accepts: application/json
  /Reports/{id}:
    get:
      operationId: Reports_GetReport
      parameters:
      - description: Report identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.Report'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.Report'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.Report'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.Report'
          description: OK
      summary: Returns a single built-in report that matches the id
      tags:
      - Reports
      x-accepts: application/json
  /Reports/Custom/{id}:
    delete:
      operationId: Reports_DeleteReport
      parameters:
      - description: Report identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete custom report that matches the id
      tags:
      - Reports
      x-accepts: application/json
    get:
      operationId: Reports_GetCustomReport
      parameters:
      - description: Report identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.CustomReport'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.CustomReport'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.CustomReport'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.CustomReport'
          description: OK
      summary: Returns a single custom report that matches the id
      tags:
      - Reports
      x-accepts: application/json
  /Reports/Schedules/{id}:
    delete:
      operationId: Reports_DeleteReportSchedule
      parameters:
      - description: Report Schedule identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Delete a built-in report's schedule that matches the id of the schedule.
      tags:
      - Reports
      x-accepts: application/json
    get:
      operationId: Reports_GetReportSchedule
      parameters:
      - description: Report Schedule identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.ReportSchedule'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.ReportSchedule'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.ReportSchedule'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.ReportSchedule'
          description: OK
      summary: Get a built-in report's schedule that matches the id of the schedule.
      tags:
      - Reports
      x-accepts: application/json
  /Reports/{id}/Parameters:
    get:
      operationId: Reports_GetReportParameters
      parameters:
      - description: Report identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.ReportParameters'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.ReportParameters'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.ReportParameters'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.ReportParameters'
                type: array
          description: OK
      summary: Get a built-in report's parameters that matches the id of the report.
      tags:
      - Reports
      x-accepts: application/json
    put:
      operationId: Reports_UpdateReportParameters
      parameters:
      - description: Report identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Models.ReportParametersRequest'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Models.ReportParametersRequest'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/Models.ReportParametersRequest'
              type: array
          text/xml:
            schema:
              items:
                $ref: '#/components/schemas/Models.ReportParametersRequest'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/Models.ReportParametersRequest'
              type: array
        description: A List of the parameters to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.ReportParameters'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.ReportParameters'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.ReportParameters'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.ReportParameters'
                type: array
          description: OK
      summary: Update a built-in report's parameters that matches the id of the report.
      tags:
      - Reports
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
  /Reports:
    get:
      operationId: Reports_QueryReports
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: query.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: query.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: query.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: query.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: query.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Report'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Report'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Report'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Report'
                type: array
          description: OK
      summary: Returns all built-in reports according to the provided filter and output
        parameters
      tags:
      - Reports
      x-accepts: application/json
    put:
      operationId: Reports_UpdateReport
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.ReportRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.ReportRequestModel'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.ReportRequestModel'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.ReportRequestModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.ReportRequestModel'
        description: "This object is used to update the Favorite, In Navigator and\
          \ the Remove Duplicates if the 'Uses Collections' is true."
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.Report'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.Report'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.Report'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.Report'
          description: OK
      summary: Updates a single built-in report that matches the id. Only some fields
        can be updated.
      tags:
      - Reports
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
  /Reports/Custom:
    get:
      operationId: Reports_QueryCustomReports
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: query.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: query.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: query.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: query.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: query.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CustomReport'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CustomReport'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CustomReport'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.CustomReport'
                type: array
          description: OK
      summary: Returns all custom reports according to the provided filter and output
        parameters
      tags:
      - Reports
      x-accepts: application/json
    post:
      operationId: Reports_CreateCustomReport
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.CustomReportCreationRequest'
        description: Report Information
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.CustomReport'
          description: OK
      summary: Creates a custom report
      tags:
      - Reports
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Reports_UpdateCustomReport
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.CustomReportUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.CustomReportUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.CustomReportUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.CustomReportUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.CustomReportUpdateRequest'
        description: Report Information
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.CustomReport'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.CustomReport'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.CustomReport'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.CustomReport'
          description: OK
      summary: Updates a custom report that matches the id
      tags:
      - Reports
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
  /Reports/{id}/Schedules:
    get:
      operationId: Reports_GetReportSchedules
      parameters:
      - description: Report identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.ReportSchedule'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.ReportSchedule'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.ReportSchedule'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.ReportSchedule'
                type: array
          description: OK
      summary: Get a built-in report's schedules that matches the id of the report.
      tags:
      - Reports
      x-accepts: application/json
    post:
      operationId: Reports_CreateReportSchedule
      parameters:
      - description: Report identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.ReportSchedule'
        description: Report Schedule
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.ReportSchedule'
          description: OK
      summary: Create a built-in report's schedule that matches the id of the report.
      tags:
      - Reports
      x-codegen-request-body-name: schedule
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Reports_UpdateReportSchedule
      parameters:
      - description: Report identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.ReportSchedule'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.ReportSchedule'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.ReportSchedule'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.ReportSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.ReportSchedule'
        description: Report Schedule
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.ReportSchedule'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.ReportSchedule'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.ReportSchedule'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.ReportSchedule'
          description: OK
      summary: Update a built-in report's schedule that matches the id of the report.
      tags:
      - Reports
      x-codegen-request-body-name: schedule
      x-content-type: application/json
      x-accepts: application/json
  /Security/Identities/{id}:
    delete:
      operationId: Security_DeleteSecurityIdentity
      parameters:
      - description: The ID of the security identity to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes the security identity whose ID is provided.
      tags:
      - Security
      x-accepts: application/json
    get:
      operationId: Security_IdentityPermissions
      parameters:
      - description: The identifier of the security identity
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.Security.Identities.SecurityIdentityPermissionsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.Security.Identities.SecurityIdentityPermissionsResponse'
          description: OK
      summary: Gets an object representing the permissions of the identity associated
        with the provided identifier.
      tags:
      - Security
      x-accepts: application/json
  /Security/Identities/Lookup:
    get:
      operationId: Security_LookupIdentity
      parameters:
      - description: The name of an identity we wish to check.
        explode: true
        in: query
        name: accountName
        required: true
        schema:
          type: string
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.Security.Identities.SecurityIdentityLookupResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.Security.Identities.SecurityIdentityLookupResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.Security.Identities.SecurityIdentityLookupResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.Security.Identities.SecurityIdentityLookupResponse'
          description: OK
      summary: Validates that the identity with the name given exists.
      tags:
      - Security
      x-accepts: application/json
  /Security/Identities: {}
  /Security/Roles/{id}/Permissions:
    get:
      operationId: SecurityRolePermissions_GetPermissionsForRole
      parameters:
      - description: Security role identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Type: Global
                Area: AgentManagement
                Permission: Modify
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.AreaPermissionResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.AreaPermissionResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.AreaPermissionResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.AreaPermissionResponse'
                type: array
          description: OK
      summary: Returns all permissions associated with the security role that matches
        the id.
      tags:
      - SecurityRolePermissions
      x-accepts: application/json
  /Security/Roles/{id}/Permissions/Global:
    get:
      operationId: SecurityRolePermissions_GetGlobalPermissionsForRole
      parameters:
      - description: Security role identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                Area: AgentManagement
                Permission: Modify
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.GlobalPermissionResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.GlobalPermissionResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.GlobalPermissionResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.GlobalPermissionResponse'
                type: array
          description: OK
      summary: Returns all global permissions associated with the security role that
        matches the id.
      tags:
      - SecurityRolePermissions
      x-accepts: application/json
    post:
      description: "### Valid Global Permissions ###\r\n| Area                   \
        \       | Permission        |\r\n|-------------------------------|-------------------|\r\
        \n| AdminPortal                   | Read              |\r\n| AgentAutoRegistration\
        \         | Read              |\r\n| AgentAutoRegistration         | Modify\
        \            |\r\n| AgentManagement               | Read              |\r\n\
        | AgentManagement               | Modify            |\r\n| API           \
        \                | Read              |\r\n| ApplicationSettings          \
        \ | Read              |\r\n| ApplicationSettings           | Modify      \
        \      |\r\n| Auditing                      | Read              |\r\n| CertificateCollections\
        \        | Modify            |\r\n| CertificateEnrollment         | EnrollPFX\
        \         |\r\n| CertificateEnrollment         | EnrollCSR         |\r\n|\
        \ CertificateEnrollment         | CsrGeneration     |\r\n| CertificateEnrollment\
        \         | PendingCsr        |\r\n| CertificateMetadataTypes      | Read\
        \              |\r\n| CertificateMetadataTypes      | Modify            |\r\
        \n| Certificates                  | Read              |\r\n| Certificates\
        \                  | EditMetadata      |\r\n| Certificates               \
        \   | Import            |\r\n| Certificates                  | Recover   \
        \        |\r\n| Certificates                  | Revoke            |\r\n| Certificates\
        \                  | Delete            |\r\n| Certificates               \
        \   | ImportPrivateKey  |\r\n| CertificateStoreManagement    | Read      \
        \        |\r\n| CertificateStoreManagement    | Schedule          |\r\n| CertificateStoreManagement\
        \    | Modify            |\r\n| Dashboard                     | Read     \
        \         |\r\n| Dashboard                     | RiskHeader        |\r\n|\
        \ EventHandlerRegistration      | Read              |\r\n| EventHandlerRegistration\
        \      | Modify            |\r\n| MacAutoEnrollManagement       | Read   \
        \           |\r\n| MacAutoEnrollManagement       | Modify            |\r\n\
        | Monitoring                    | Read              |\r\n| Monitoring    \
        \                | Modify            |\r\n| Monitoring                   \
        \ | Test              |\r\n| PkiManagement                 | Read        \
        \      |\r\n| PkiManagement                 | Modify            |\r\n| PrivilegedAccessManagement\
        \    | Read              |\r\n| PrivilegedAccessManagement    | Modify   \
        \         |\r\n| Reports                       | Read              |\r\n|\
        \ Reports                       | Modify            |\r\n| SecuritySettings\
        \              | Read              |\r\n| SecuritySettings              |\
        \ Modify            |\r\n| SSH                           | User          \
        \    |\r\n| SSH                           | ServerAdmin       |\r\n| SSH \
        \                          | EnterpriseAdmin   |\r\n| SslManagement      \
        \           | Read              |\r\n| SslManagement                 | Modify\
        \            |\r\n| SystemSettings                | Read              |\r\n\
        | SystemSettings                | Modify            |\r\n| WorkflowDefinitions\
        \           | Read              |\r\n| WorkflowDefinitions           | Modify\
        \            |\r\n| WorkflowInstances             | ReadAll           |\r\n\
        | WorkflowInstances             | ReadAssignedToMe  |\r\n| WorkflowInstances\
        \             | ReadMy            |\r\n| WorkflowInstances             | Manage\
        \            |\r\n| WorkflowManagement            | Read              |\r\n\
        | WorkflowManagement            | Modify            |\r\n| WorkflowManagement\
        \            | Test              |\r\n| WorkflowManagement            | Participate\
        \       |\r\n| WorkflowManagement            | Manage            |"
      operationId: SecurityRolePermissions_AddGlobalPermissions
      parameters:
      - description: Security role identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.GlobalPermissionRequest'
              type: array
        description: Global permissions
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                Area: AgentManagement
                Permission: Modify
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.GlobalPermissionResponse'
                type: array
          description: OK
      summary: Adds global permissions to the security role that matches the id.
      tags:
      - SecurityRolePermissions
      x-codegen-request-body-name: globalPermissions
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: "### Valid Global Permissions ###\r\n| Area                   \
        \       | Permission        |\r\n|-------------------------------|-------------------|\r\
        \n| AdminPortal                   | Read              |\r\n| AgentAutoRegistration\
        \         | Read              |\r\n| AgentAutoRegistration         | Modify\
        \            |\r\n| AgentManagement               | Read              |\r\n\
        | AgentManagement               | Modify            |\r\n| API           \
        \                | Read              |\r\n| ApplicationSettings          \
        \ | Read              |\r\n| ApplicationSettings           | Modify      \
        \      |\r\n| Auditing                      | Read              |\r\n| CertificateCollections\
        \        | Modify            |\r\n| CertificateEnrollment         | EnrollPFX\
        \         |\r\n| CertificateEnrollment         | EnrollCSR         |\r\n|\
        \ CertificateEnrollment         | CsrGeneration     |\r\n| CertificateEnrollment\
        \         | PendingCsr        |\r\n| CertificateMetadataTypes      | Read\
        \              |\r\n| CertificateMetadataTypes      | Modify            |\r\
        \n| Certificates                  | Read              |\r\n| Certificates\
        \                  | EditMetadata      |\r\n| Certificates               \
        \   | Import            |\r\n| Certificates                  | Recover   \
        \        |\r\n| Certificates                  | Revoke            |\r\n| Certificates\
        \                  | Delete            |\r\n| Certificates               \
        \   | ImportPrivateKey  |\r\n| CertificateStoreManagement    | Read      \
        \        |\r\n| CertificateStoreManagement    | Schedule          |\r\n| CertificateStoreManagement\
        \    | Modify            |\r\n| Dashboard                     | Read     \
        \         |\r\n| Dashboard                     | RiskHeader        |\r\n|\
        \ EventHandlerRegistration      | Read              |\r\n| EventHandlerRegistration\
        \      | Modify            |\r\n| MacAutoEnrollManagement       | Read   \
        \           |\r\n| MacAutoEnrollManagement       | Modify            |\r\n\
        | Monitoring                    | Read              |\r\n| Monitoring    \
        \                | Modify            |\r\n| Monitoring                   \
        \ | Test              |\r\n| PkiManagement                 | Read        \
        \      |\r\n| PkiManagement                 | Modify            |\r\n| PrivilegedAccessManagement\
        \    | Read              |\r\n| PrivilegedAccessManagement    | Modify   \
        \         |\r\n| Reports                       | Read              |\r\n|\
        \ Reports                       | Modify            |\r\n| SecuritySettings\
        \              | Read              |\r\n| SecuritySettings              |\
        \ Modify            |\r\n| SSH                           | User          \
        \    |\r\n| SSH                           | ServerAdmin       |\r\n| SSH \
        \                          | EnterpriseAdmin   |\r\n| SslManagement      \
        \           | Read              |\r\n| SslManagement                 | Modify\
        \            |\r\n| SystemSettings                | Read              |\r\n\
        | SystemSettings                | Modify            |\r\n| WorkflowDefinitions\
        \           | Read              |\r\n| WorkflowDefinitions           | Modify\
        \            |\r\n| WorkflowInstances             | ReadAll           |\r\n\
        | WorkflowInstances             | ReadAssignedToMe  |\r\n| WorkflowInstances\
        \             | ReadMy            |\r\n| WorkflowInstances             | Manage\
        \            |\r\n| WorkflowManagement            | Read              |\r\n\
        | WorkflowManagement            | Modify            |\r\n| WorkflowManagement\
        \            | Test              |\r\n| WorkflowManagement            | Participate\
        \       |\r\n| WorkflowManagement            | Manage            |"
      operationId: SecurityRolePermissions_SetGlobalPermissions
      parameters:
      - description: Security role identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.GlobalPermissionRequest'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.GlobalPermissionRequest'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.GlobalPermissionRequest'
              type: array
          text/xml:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.GlobalPermissionRequest'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.GlobalPermissionRequest'
              type: array
        description: Global permissions
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                Area: AgentManagement
                Permission: Modify
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.GlobalPermissionResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.GlobalPermissionResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.GlobalPermissionResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.GlobalPermissionResponse'
                type: array
          description: OK
      summary: Adds global permissions to the security role that matches the id.
      tags:
      - SecurityRolePermissions
      x-codegen-request-body-name: globalPermissions
      x-content-type: application/json
      x-accepts: application/json
  /Security/Roles/{id}/Permissions/Containers:
    get:
      operationId: SecurityRolePermissions_GetContainerPermissionsForRole
      parameters:
      - description: Security role identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                ContainerId: 1
                Permission: Read
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.ContainerPermissionResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.ContainerPermissionResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.ContainerPermissionResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.ContainerPermissionResponse'
                type: array
          description: OK
      summary: Returns all container permissions associated with the security role
        that matches the id.
      tags:
      - SecurityRolePermissions
      x-accepts: application/json
    post:
      description: "### Valid Permissions ###\r\n| Permission    | Requisite Permissions\
        \ |\r\n|---------------|-----------------------|\r\n| Read          |    \
        \                   |\r\n| Schedule      | Read                  |\r\n| Modify\
        \        | Read, Schedule        |"
      operationId: SecurityRolePermissions_AddContainerPermissions
      parameters:
      - description: Security role identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.ContainerPermissionRequest'
              type: array
        description: Container permissions
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                ContainerId: 1
                Permission: Read
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.ContainerPermissionResponse'
                type: array
          description: OK
      summary: Adds container permissions to the security role that matches the id.
      tags:
      - SecurityRolePermissions
      x-codegen-request-body-name: containerPermissions
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: "### Valid Permissions ###\r\n| Permission    | Requisite Permissions\
        \ |\r\n|---------------|-----------------------|\r\n| Read          |    \
        \                   |\r\n| Schedule      | Read                  |\r\n| Modify\
        \        | Read, Schedule        |"
      operationId: SecurityRolePermissions_SetContainerPermissions
      parameters:
      - description: Security role identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.ContainerPermissionRequest'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.ContainerPermissionRequest'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.ContainerPermissionRequest'
              type: array
          text/xml:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.ContainerPermissionRequest'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.ContainerPermissionRequest'
              type: array
        description: Container permissions
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                ContainerId: 1
                Permission: Read
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.ContainerPermissionResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.ContainerPermissionResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.ContainerPermissionResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.ContainerPermissionResponse'
                type: array
          description: OK
      summary: Sets container permissions to the security role that matches the id.
      tags:
      - SecurityRolePermissions
      x-codegen-request-body-name: containerPermissions
      x-content-type: application/json
      x-accepts: application/json
  /Security/Roles/{id}/Permissions/Collections:
    get:
      operationId: SecurityRolePermissions_GetCollectionPermissionsForRole
      parameters:
      - description: Security role identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                CollectionId: 1
                Permission: Recover
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.CollectionPermissionResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.CollectionPermissionResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.CollectionPermissionResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.CollectionPermissionResponse'
                type: array
          description: OK
      summary: Returns all collection permissions associated with the security role
        that matches the id.
      tags:
      - SecurityRolePermissions
      x-accepts: application/json
    post:
      description: "### Valid Permissions ###\r\n| Permission    | Permission Display\
        \ Name   |\r\n|---------------|---------------------------|\r\n| Read    \
        \      | Read                      |\r\n| EditMetadata  | Edit Metadata  \
        \           |\r\n| Recover       | Download with Private Key |\r\n| Revoke\
        \        | Revoke                    |\r\n| Delete        | Delete       \
        \             |"
      operationId: SecurityRolePermissions_AddCollectionPermissions
      parameters:
      - description: Security role identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.CollectionPermissionRequest'
              type: array
        description: Collections permissions
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                CollectionId: 1
                Permission: Recover
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.CollectionPermissionResponse'
                type: array
          description: OK
      summary: Adds collection permissions to the security role that matches the id.
      tags:
      - SecurityRolePermissions
      x-codegen-request-body-name: collectionPermissions
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: "### Valid Permissions ###\r\n| Permission    | Permission Display\
        \ Name   |\r\n|---------------|---------------------------|\r\n| Read    \
        \      | Read                      |\r\n| EditMetadata  | Edit Metadata  \
        \           |\r\n| Recover       | Download with Private Key |\r\n| Revoke\
        \        | Revoke                    |\r\n| Delete        | Delete       \
        \             |"
      operationId: SecurityRolePermissions_SetCollectionPermissions
      parameters:
      - description: Security role identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.CollectionPermissionRequest'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.CollectionPermissionRequest'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.CollectionPermissionRequest'
              type: array
          text/xml:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.CollectionPermissionRequest'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.CollectionPermissionRequest'
              type: array
        description: Collections permissions
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                CollectionId: 1
                Permission: Recover
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.CollectionPermissionResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.CollectionPermissionResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.CollectionPermissionResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.CollectionPermissionResponse'
                type: array
          description: OK
      summary: Sets collection permissions to the security role that matches the id.
      tags:
      - SecurityRolePermissions
      x-codegen-request-body-name: collectionPermissions
      x-content-type: application/json
      x-accepts: application/json
  /Security/Roles/{id}:
    delete:
      operationId: SecurityRoles_DeleteSecurityRole
      parameters:
      - description: Security role identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes the security role whose ID is provided.
      tags:
      - SecurityRoles
      x-accepts: application/json
  /Security/Roles/{id}/Identities:
    get:
      operationId: SecurityRoles_GetIdentitiesWithRole
      parameters:
      - description: Security role identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.RoleIdentitiesResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.RoleIdentitiesResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.RoleIdentitiesResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.RoleIdentitiesResponse'
                type: array
          description: OK
      summary: Returns all identities which have the security role that matches the
        id.
      tags:
      - SecurityRoles
      x-accepts: application/json
    put:
      operationId: SecurityRoles_UpdateIdentitiesWithRole
      parameters:
      - description: Security role identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.RoleIdentitiesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.RoleIdentitiesRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.RoleIdentitiesRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.RoleIdentitiesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.RoleIdentitiesRequest'
        description: Lists of Identity IDs to remove or add to the role
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.RoleIdentitiesResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.RoleIdentitiesResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.RoleIdentitiesResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.SecurityRoles.RoleIdentitiesResponse'
                type: array
          description: OK
      summary: Updates the identities which have the security role that matches the
        id.
      tags:
      - SecurityRoles
      x-codegen-request-body-name: identities
      x-content-type: application/json
      x-accepts: application/json
  /Security/Roles: {}
  /Security/Roles/{id}/Copy: {}
  /SSH/Servers/{id}:
    delete:
      operationId: Server_Delete
      parameters:
      - description: Keyfactor identifer of the Server to be deleted
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes a Server associated with the provided identifier
      tags:
      - Server
      x-accepts: application/json
    get:
      operationId: Server_Get
      parameters:
      - description: Keyfactor identifier of the Server
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Servers.ServerResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Servers.ServerResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.Servers.ServerResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.Servers.ServerResponse'
          description: OK
      summary: Returns a Server associated with the provided identifier
      tags:
      - Server
      x-accepts: application/json
  /SSH/Servers/Access/{id}:
    get:
      operationId: Server_GetAccess
      parameters:
      - description: Id of the existing server
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Access.ServerAccessResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Access.ServerAccessResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.Access.ServerAccessResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.Access.ServerAccessResponse'
          description: OK
      summary: Retrieves logons and users with access to those logons for an existing
        server
      tags:
      - Server
      x-accepts: application/json
  /SSH/Servers:
    get:
      operationId: Server_QueryServers
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.Servers.ServerResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.Servers.ServerResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.Servers.ServerResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.Servers.ServerResponse'
                type: array
          description: OK
      summary: Returns all servers according to the provided filter parameters
      tags:
      - Server
      x-accepts: application/json
    post:
      operationId: Server_CreateServer
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Servers.ServerCreationRequest'
        description: Server properties to be applied to the newserver
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Servers.ServerResponse'
          description: OK
      summary: Creates a server with the provided properties
      tags:
      - Server
      x-codegen-request-body-name: creationRequest
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Server_UpdateServer
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Servers.ServerUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Servers.ServerUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.SSH.Servers.ServerUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.SSH.Servers.ServerUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.SSH.Servers.ServerUpdateRequest'
        description: Server properties to be applied to the existing server
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Servers.ServerResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Servers.ServerResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.Servers.ServerResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.Servers.ServerResponse'
          description: OK
      summary: Updates an existing server with the provided properties
      tags:
      - Server
      x-codegen-request-body-name: updateRequest
      x-content-type: application/json
      x-accepts: application/json
  /SSH/Servers/Access:
    delete:
      operationId: Server_RemoveAccess
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Access.ServerAccessRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Access.ServerAccessRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.SSH.Access.ServerAccessRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.SSH.Access.ServerAccessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.SSH.Access.ServerAccessRequest'
        description: Logons and users to be removed from the existing server
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Access.ServerAccessResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Access.ServerAccessResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.Access.ServerAccessResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.Access.ServerAccessResponse'
          description: OK
      summary: Updates logons and users with access to those logons for an existing
        server
      tags:
      - Server
      x-codegen-request-body-name: serverAccess
      x-content-type: application/json
      x-accepts: application/json
    post:
      operationId: Server_AddAccess
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Access.ServerAccessRequest'
        description: Logons and users to be applied to the existing server
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Access.ServerAccessResponse'
          description: OK
      summary: Updates logons and users with access to those logons for an existing
        server
      tags:
      - Server
      x-codegen-request-body-name: serverAccess
      x-content-type: application/json
      x-accepts: application/json
  /SSH/ServerGroups/{id}:
    delete:
      operationId: ServerGroup_Delete
      parameters:
      - description: Keyfactor identifer of the ServerGroup to be deleted
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes a ServerGroup associated with the provided identifier
      tags:
      - ServerGroup
      x-accepts: application/json
    get:
      operationId: ServerGroup_GetGroup
      parameters:
      - description: Keyfactor identifier of the ServerGroup
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupResponse'
          description: OK
      summary: Returns a ServerGroup associated with the provided identifier
      tags:
      - ServerGroup
      x-accepts: application/json
  /SSH/ServerGroups/{name}:
    get:
      operationId: ServerGroup_GetGroupByName
      parameters:
      - description: name of the ServerGroup
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupResponse'
          description: OK
      summary: Returns a ServerGroup associated with the provided identifier
      tags:
      - ServerGroup
      x-accepts: application/json
  /SSH/ServerGroups/Access/{id}:
    get:
      operationId: ServerGroup_GetAccess
      parameters:
      - description: Id of the existing server group
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Access.ServerGroupAccessResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Access.ServerGroupAccessResponse'
          description: OK
      summary: Retrieves logons and users with access to those logons for an existing
        server group
      tags:
      - ServerGroup
      x-accepts: application/json
  /SSH/ServerGroups:
    get:
      operationId: ServerGroup_QueryServerGroups
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupResponse'
                type: array
          description: OK
      summary: Returns all server groups according to the provided filter parameters
      tags:
      - ServerGroup
      x-accepts: application/json
    post:
      operationId: ServerGroup_CreateServerGroup
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupCreationRequest'
        description: Server group properties to be applied to the new group
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupResponse'
          description: OK
      summary: Creates a server group with the provided properties
      tags:
      - ServerGroup
      x-codegen-request-body-name: serverGroupCreationRequest
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: ServerGroup_UpdateServerGroup
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupUpdateRequest'
        description: Server group properties to be applied to the existing group
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupResponse'
          description: OK
      summary: Updates an existing server group with the provided properties
      tags:
      - ServerGroup
      x-codegen-request-body-name: updateRequest
      x-content-type: application/json
      x-accepts: application/json
  /SSH/ServerGroups/Access:
    delete:
      operationId: ServerGroup_RemoveAccess
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Access.ServerGroupAccessRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Access.ServerGroupAccessRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.SSH.Access.ServerGroupAccessRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.SSH.Access.ServerGroupAccessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.SSH.Access.ServerGroupAccessRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Access.ServerGroupAccessResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Access.ServerGroupAccessResponse'
          description: OK
      summary: Removes access mappings for the specified server group
      tags:
      - ServerGroup
      x-codegen-request-body-name: accessRequest
      x-content-type: application/json
      x-accepts: application/json
    post:
      operationId: ServerGroup_AddAccess
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Access.ServerGroupAccessRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Access.ServerGroupAccessResponse'
          description: OK
      summary: Add access rules to the server group
      tags:
      - ServerGroup
      x-codegen-request-body-name: accessRequest
      x-content-type: application/json
      x-accepts: application/json
  /SSH/ServiceAccounts/{id}:
    delete:
      operationId: ServiceAccount_DeleteServiceAccount
      parameters:
      - description: Keyfactor identifer of the ServiceAccount to be deleted
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes a ServiceAccount associated with the provided identifier
      tags:
      - ServiceAccount
      x-accepts: application/json
    get:
      operationId: ServiceAccount_Get
      parameters:
      - description: Keyfactor identifier of the ServiceAccount
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountResponse'
          description: OK
      summary: Returns a ServiceAccount associated with the provided identifier
      tags:
      - ServiceAccount
      x-accepts: application/json
  /SSH/ServiceAccounts/Key/{id}:
    get:
      operationId: ServiceAccount_GetServiceAccountKey
      parameters:
      - description: The id of the service account to obtain information on
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Whether or not to include the private key in the response
        explode: true
        in: query
        name: includePrivateKey
        required: false
        schema:
          type: boolean
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Keys.KeyResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Keys.KeyResponse'
          description: OK
      summary: Returns an SSH key with or without private key based on the provided
        parameters.
      tags:
      - ServiceAccount
      x-accepts: application/json
  /SSH/ServiceAccounts:
    delete:
      operationId: ServiceAccount_DeleteServiceAccounts
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                format: int32
                type: integer
              type: array
        description: Keyfactor identifers of the ServiceAccounts to be deleted
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes Service Accounts associated with the provided identifiers
      tags:
      - ServiceAccount
      x-codegen-request-body-name: ids
      x-content-type: application/json
      x-accepts: application/json
    get:
      operationId: ServiceAccount_QueryServiceAccounts
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountResponse'
                type: array
          description: OK
      summary: Returns all ServiceAccounts according to the provided filter parameters
      tags:
      - ServiceAccount
      x-accepts: application/json
    post:
      operationId: ServiceAccount_CreateServiceAccount
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountCreationRequest'
        description: ServiceAccount properties to be applied to the new ServiceAccount
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountResponse'
          description: OK
      summary: Creates a ServiceAccount with the provided properties
      tags:
      - ServiceAccount
      x-codegen-request-body-name: serviceAccount
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: ServiceAccount_UpdateServiceAccount
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountUpdateRequest'
        description: The id of the service account and the updated state of the SSH
          key.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountResponse'
          description: OK
      summary: Updates an SSH key for a specified service account.
      tags:
      - ServiceAccount
      x-codegen-request-body-name: updateRequest
      x-content-type: application/json
      x-accepts: application/json
  /SSH/ServiceAccounts/Rotate/{id}:
    post:
      operationId: ServiceAccount_RotateServiceAccountKey
      parameters:
      - description: The id of the service account and the updated state of the SSH
          key.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Keys.KeyGenerationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Keys.KeyResponse'
          description: OK
      summary: Rotate an SSH key for a specified service account.
      tags:
      - ServiceAccount
      x-codegen-request-body-name: rotationRequest
      x-content-type: application/json
      x-accepts: application/json
  /SMTP:
    get:
      operationId: SMTP_SMTP
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorAPI.Models.SMTP.SMTPResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorAPI.Models.SMTP.SMTPResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorAPI.Models.SMTP.SMTPResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorAPI.Models.SMTP.SMTPResponse'
          description: OK
      summary: Gets SMTP profile data
      tags:
      - SMTP
      x-accepts: application/json
    put:
      operationId: SMTP_UpdateSMTP
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorAPI.Models.SMTP.SMTPRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorAPI.Models.SMTP.SMTPRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorAPI.Models.SMTP.SMTPRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorAPI.Models.SMTP.SMTPRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorAPI.Models.SMTP.SMTPRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorAPI.Models.SMTP.SMTPResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorAPI.Models.SMTP.SMTPResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorAPI.Models.SMTP.SMTPResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorAPI.Models.SMTP.SMTPResponse'
          description: OK
      summary: Updates SMTP profile data
      tags:
      - SMTP
      x-codegen-request-body-name: smtpProfile
      x-content-type: application/json
      x-accepts: application/json
  /SMTP/Test:
    post:
      operationId: SMTP_TestSMTP
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorAPI.Models.SMTP.SMTPTestRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorAPI.Models.SMTP.SMTPTestResponse'
          description: OK
      summary: Tests SMTP profile data
      tags:
      - SMTP
      x-codegen-request-body-name: smtpProfile
      x-content-type: application/json
      x-accepts: application/json
  /SSL/Parts/{id}:
    get:
      operationId: Ssl_ScanPart
      parameters:
      - description: Keyfactor identifier of the scan job part
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSL.ScanJobPart'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSL.ScanJobPart'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.SSL.ScanJobPart'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.SSL.ScanJobPart'
          description: OK
      summary: Returns the execution details of the associated network scan job part
      tags:
      - Ssl
      x-accepts: application/json
  /SSL/Endpoints/{id}:
    get:
      operationId: Ssl_Endpoint
      parameters:
      - description: Keyfactor identifier of the endpoint
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSL.Endpoint'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSL.Endpoint'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.SSL.Endpoint'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.SSL.Endpoint'
          description: OK
      summary: Returns the details of the associated scanning endpoint
      tags:
      - Ssl
      x-accepts: application/json
  /SSL/NetworkRanges/{id}:
    delete:
      operationId: Ssl_RemoveAllNetworkRanges
      parameters:
      - description: Keyfactor network definition identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Removes all network range definitions from the associated network definition
      tags:
      - Ssl
      x-accepts: application/json
    get:
      operationId: Ssl_GetNetworkRangesForNetwork
      parameters:
      - description: Keyfactor network identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSL.NetworkDefinition'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSL.NetworkDefinition'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSL.NetworkDefinition'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSL.NetworkDefinition'
                type: array
          description: OK
      summary: Returns the network range definitions for the provided network definition
      tags:
      - Ssl
      x-accepts: application/json
  /SSL/Networks/{identifier}:
    get:
      operationId: Ssl_GetNetwork
      parameters:
      - description: Identifier (Guid or Name) of the defined network
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.NetworkResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.NetworkResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.NetworkResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.NetworkResponse'
          description: OK
      summary: Returns a defined SSL network according to the provided name
      tags:
      - Ssl
      x-accepts: application/json
  /SSL:
    get:
      operationId: Ssl_Results
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSL.SslScanResult'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSL.SslScanResult'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSL.SslScanResult'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSL.SslScanResult'
                type: array
          description: OK
      summary: Returns a list of the endpoint scan results according to the provided
        filter and output parameters
      tags:
      - Ssl
      x-accepts: application/json
  /SSL/Networks:
    get:
      operationId: Ssl_GetNetworks
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: sq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: sq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: sq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: sq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: sq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.NetworkQueryResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.NetworkQueryResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.NetworkQueryResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.NetworkQueryResponse'
                type: array
          description: OK
      summary: Returns all defined SSL networks according to the provided filter and
        output parameters
      tags:
      - Ssl
      x-accepts: application/json
    post:
      operationId: Ssl_CreateNetwork
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.CreateNetworkRequest'
        description: Properties of the network definition to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.NetworkResponse'
          description: OK
      summary: Creates a network definition according to the provided properties
      tags:
      - Ssl
      x-codegen-request-body-name: network
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Ssl_UpdateNetwork
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.UpdateNetworkRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.UpdateNetworkRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.UpdateNetworkRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.UpdateNetworkRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.UpdateNetworkRequest'
        description: Properties of the network definition to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.NetworkResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.NetworkResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.NetworkResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.NetworkResponse'
          description: OK
      summary: Updates an existing network definition according to the provided properties
      tags:
      - Ssl
      x-codegen-request-body-name: network
      x-content-type: application/json
      x-accepts: application/json
  /SSL/Endpoints/{id}/History:
    get:
      operationId: Ssl_EndpointHistory
      parameters:
      - description: Keyfactor identifier of the endpoint
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSL.EndpointHistoryResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSL.EndpointHistoryResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSL.EndpointHistoryResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSL.EndpointHistoryResponse'
                type: array
          description: OK
      summary: Returns a list of the scan results for the provided endpoint according
        to the provided filter and output parameters
      tags:
      - Ssl
      x-accepts: application/json
  /SSL/Networks/{id}/Parts:
    get:
      operationId: Ssl_NetworkScanParts
      parameters:
      - description: Keyfactor network definition identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - explode: true
        in: query
        name: pagedQuery.jobType
        required: false
        schema:
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          type: integer
        style: form
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pagedQuery.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pagedQuery.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pagedQuery.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pagedQuery.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pagedQuery.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSL.DisplayScanJobPart'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSL.DisplayScanJobPart'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSL.DisplayScanJobPart'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSL.DisplayScanJobPart'
                type: array
          description: OK
      summary: Returns the scan job components comprising the entire scan job to be
        executed
      tags:
      - Ssl
      x-accepts: application/json
  /SSL/NetworkRanges:
    post:
      operationId: Ssl_AddNetworkRanges
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSL.NetworkRangesRequest'
        description: Network definition identifier and the ranges to be added
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Adds the provided network range definitions to the associated network
        definition
      tags:
      - Ssl
      x-codegen-request-body-name: networkRanges
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: Ssl_SetNetworkRanges
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSL.NetworkRangesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.SSL.NetworkRangesRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.SSL.NetworkRangesRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.SSL.NetworkRangesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.SSL.NetworkRangesRequest'
        description: Network range defitions and the network to which they should
          be set
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Configures network range definitions for the provided network
      tags:
      - Ssl
      x-codegen-request-body-name: networkRanges
      x-content-type: application/json
      x-accepts: application/json
  /SSL/Endpoints/ReviewStatus:
    put:
      operationId: Ssl_ReviewedStatus
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Models.SSL.EndpointStatusRequest'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Models.SSL.EndpointStatusRequest'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/Models.SSL.EndpointStatusRequest'
              type: array
          text/xml:
            schema:
              items:
                $ref: '#/components/schemas/Models.SSL.EndpointStatusRequest'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/Models.SSL.EndpointStatusRequest'
              type: array
        description: Endpoints and statuses for each
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Sets the reviewed status according to the provided endpoint and boolean
        status
      tags:
      - Ssl
      x-codegen-request-body-name: endpointReviewedStatus
      x-content-type: application/json
      x-accepts: application/json
  /SSL/Endpoints/MonitorStatus:
    put:
      operationId: Ssl_MonitoringStatus
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Models.SSL.EndpointStatusRequest'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Models.SSL.EndpointStatusRequest'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/Models.SSL.EndpointStatusRequest'
              type: array
          text/xml:
            schema:
              items:
                $ref: '#/components/schemas/Models.SSL.EndpointStatusRequest'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/Models.SSL.EndpointStatusRequest'
              type: array
        description: Endpoints and statuses to be set for each
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Sets the monitored status according to the provided endpoint and boolean
        status
      tags:
      - Ssl
      x-codegen-request-body-name: requests
      x-content-type: application/json
      x-accepts: application/json
  /SSL/Endpoints/ReviewAll:
    put:
      operationId: Ssl_ReviewAll
      parameters:
      - description: Query to filter the endpoints for which the status should be
          set
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Sets all endpoints matching the provided query as 'reviewed'
      tags:
      - Ssl
      x-accepts: application/json
  /SSL/Endpoints/MonitorAll:
    put:
      operationId: Ssl_MonitorAll
      parameters:
      - description: Query to filter the endpoints for which the status should be
          set
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Sets all endpoints matching the provided query as 'monitored'
      tags:
      - Ssl
      x-accepts: application/json
  /SSL/Networks/{id}/Scan:
    post:
      operationId: Ssl_ImmediateSslScan
      parameters:
      - description: Keyfactor network identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSL.ImmediateSslScanRequest'
        description: Request for an immediate SSL Scan
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Starts an SSL Scan for the network according to the associated network
        definition
      tags:
      - Ssl
      x-codegen-request-body-name: sslScanRequest
      x-content-type: application/json
      x-accepts: application/json
  /SSL/NetworkRanges/Validate:
    post:
      operationId: Ssl_ValidateNetworkRanges
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: List of the network range definitions to verify
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Validates the format (using regular expressions) of the provided network
        range definitions
      tags:
      - Ssl
      x-codegen-request-body-name: networkRangesToVerify
      x-content-type: application/json
      x-accepts: application/json
  /SSL/Networks/{id}:
    delete:
      operationId: Ssl_RemoveNetwork
      parameters:
      - description: Keyfactor network identifier
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Removes a network definition according to the provided identifier
      tags:
      - Ssl
      x-accepts: application/json
  /Status/Endpoints:
    get:
      operationId: Status_GetEndpoints
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
            application/xml:
              schema:
                items:
                  type: string
                type: array
            text/xml:
              schema:
                items:
                  type: string
                type: array
          description: OK
      summary: Returns all endpoints to which the requesting identity has access
      tags:
      - Status
      x-accepts: application/json
  /Templates/{id}:
    get:
      operationId: Template_GetTemplate
      parameters:
      - description: Keyfactor identifier of the certificate template
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.TemplateRetrievalResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.TemplateRetrievalResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.TemplateRetrievalResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.TemplateRetrievalResponse'
          description: OK
      summary: Returns the certificate template associated with the provided id
      tags:
      - Template
      x-accepts: application/json
  /Templates/Settings:
    get:
      operationId: Template_GetGlobalSettings
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplateSettingsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplateSettingsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplateSettingsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplateSettingsResponse'
          description: OK
      summary: Gets the global template settings.
      tags:
      - Template
      x-accepts: application/json
    put:
      operationId: Template_UpdateGlobalSettings
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplateSettingsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplateSettingsRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplateSettingsRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplateSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplateSettingsRequest'
        description: The new global template settings.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplateSettingsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplateSettingsResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplateSettingsResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplateSettingsResponse'
          description: OK
      summary: Replaces the existing global template settings.
      tags:
      - Template
      x-codegen-request-body-name: settings
      x-content-type: application/json
      x-accepts: application/json
  /Templates/SubjectParts:
    get:
      operationId: Template_GetValidSubjectParts
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Templates.ValidSubjectPartResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Templates.ValidSubjectPartResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Templates.ValidSubjectPartResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Templates.ValidSubjectPartResponse'
                type: array
          description: OK
      tags:
      - Template
      x-accepts: application/json
  /Templates:
    get:
      operationId: Template_GetTemplates
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: sq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: sq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: sq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: sq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: sq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.TemplateCollectionRetrievalResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.TemplateCollectionRetrievalResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.TemplateCollectionRetrievalResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.TemplateCollectionRetrievalResponse'
                type: array
          description: OK
      summary: Returns all certificate templates according to the provided filter
        and output parameters
      tags:
      - Template
      x-accepts: application/json
    put:
      operationId: Template_UpdateTemplate
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.TemplateUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.TemplateUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.TemplateUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.TemplateUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.TemplateUpdateRequest'
        description: Properties of the certificate template to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.TemplateRetrievalResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.TemplateRetrievalResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.TemplateRetrievalResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.TemplateRetrievalResponse'
          description: OK
      summary: Updates a certificate template according to the provided properties
      tags:
      - Template
      x-codegen-request-body-name: template
      x-content-type: application/json
      x-accepts: application/json
  /Templates/Import:
    post:
      operationId: Template_Import
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.ConfigurationTenant.ConfigurationTenantRequest'
        description: Configuration tenant to import from
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Imports templates from the provided configuration tenant
      tags:
      - Template
      x-codegen-request-body-name: configurationTenantRequest
      x-content-type: application/json
      x-accepts: application/json
  /SSH/Users/{id}:
    delete:
      operationId: User_DeleteUser
      parameters:
      - description: The Id of the user to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes an SSH user.
      tags:
      - User
      x-accepts: application/json
    get:
      operationId: User_GetUser
      parameters:
      - description: The Id of the SSH user to retrieve.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Users.SshUserResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Users.SshUserResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.Users.SshUserResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.Users.SshUserResponse'
          description: OK
      summary: Looks up information about an existing SSH user.
      tags:
      - User
      x-accepts: application/json
  /SSH/Users:
    get:
      operationId: User_QueryUsers
      parameters:
      - description: Whether or not to return only logons that have access to servers
          the requesting user owns
        explode: true
        in: query
        name: showOwnedAccess
        required: false
        schema:
          type: boolean
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.Users.SshUserResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.Users.SshUserResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.Users.SshUserResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.SSH.Users.SshUserResponse'
                type: array
          description: OK
      summary: Returns users matching the criteria from the provided query parameters
      tags:
      - User
      x-accepts: application/json
    post:
      operationId: User_CreateUser
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Users.SshUserCreationRequest'
        description: SSH user to be created.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Users.SshUserResponse'
          description: OK
      summary: Creates a new SSH User.
      tags:
      - User
      x-codegen-request-body-name: sshUserCreationRequest
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: User_UpdateUser
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Users.SshUserUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Users.SshUserUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/Models.SSH.Users.SshUserUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/Models.SSH.Users.SshUserUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Models.SSH.Users.SshUserUpdateRequest'
        description: The new state of the SSH user to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Users.SshUserResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Users.SshUserResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.Users.SshUserResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.SSH.Users.SshUserResponse'
          description: OK
      summary: Updates information about a given user.
      tags:
      - User
      x-codegen-request-body-name: sshUserUpdateRequest
      x-content-type: application/json
      x-accepts: application/json
  /SSH/Users/Access:
    post:
      operationId: User_UserAccess
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.SSH.Users.SshUserUpdateRequest'
        description: Logons to add the existing user
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SSH.Users.SshUserAccessResponse'
          description: OK
      summary: Updates logon access for a user
      tags:
      - User
      x-codegen-request-body-name: userRequest
      x-content-type: application/json
      x-accepts: application/json
  /Workflow/Certificates/{id}:
    get:
      operationId: Workflow_GetCertificateRequestDetails
      parameters:
      - description: The ID of the certificate request.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.Workflow.CertificateRequestDetailsModel'
            text/json:
              schema:
                $ref: '#/components/schemas/Models.Workflow.CertificateRequestDetailsModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/Models.Workflow.CertificateRequestDetailsModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/Models.Workflow.CertificateRequestDetailsModel'
          description: OK
      summary: Returns certificate request details based on the provided ID.
      tags:
      - Workflow
      x-accepts: application/json
  /Workflow/Certificates/Denied:
    get:
      operationId: Workflow_GetDenied
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pagedQuery.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pagedQuery.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pagedQuery.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pagedQuery.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pagedQuery.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Workflow.CertificateRequestModel'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Workflow.CertificateRequestModel'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Workflow.CertificateRequestModel'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Workflow.CertificateRequestModel'
                type: array
          description: OK
      summary: Gets a collection of denied certificate requests based on the provided
        query.
      tags:
      - Workflow
      x-accepts: application/json
  /Workflow/Certificates/Pending:
    get:
      operationId: Workflow_Get
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pagedQuery.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pagedQuery.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pagedQuery.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pagedQuery.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pagedQuery.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Workflow.CertificateRequestModel'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Workflow.CertificateRequestModel'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Workflow.CertificateRequestModel'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Models.Workflow.CertificateRequestModel'
                type: array
          description: OK
      summary: Gets a collection of certificate requests based on the provided query.
      tags:
      - Workflow
      x-accepts: application/json
  /Workflow/Certificates/Deny:
    post:
      operationId: Workflow_DenyPendingRequests
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.Workflow.DenialRequest'
        description: Keyfactor identifiers of the certificate requests to be denied
          and any denial comments
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.Workflow.ApproveDenyResult'
          description: OK
      summary: Denies pending certificate requests associated with the provided ids
      tags:
      - Workflow
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
  /Workflow/Certificates/Approve:
    post:
      operationId: Workflow_ApprovePendingRequests
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
        description: Array of Keyfactor identifiers of the certificate requests
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.Workflow.ApproveDenyResult'
          description: OK
      summary: Approves pending certificate requests associated with the provided
        ids
      tags:
      - Workflow
      x-codegen-request-body-name: requestIds
      x-content-type: application/json
      x-accepts: application/json
  /Workflow/Definitions/Steps/{extensionName}:
    get:
      operationId: WorkflowDefinition_GetStepSchema
      parameters:
      - description: The extension name of a specific step in the step schema.
        explode: false
        in: path
        name: extensionName
        required: true
        schema:
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.AvailableStepResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.AvailableStepResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.AvailableStepResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.AvailableStepResponse'
          description: OK
      summary: Gets the schema of a given step with the specified extension name.
      tags:
      - WorkflowDefinition
      x-accepts: application/json
  /Workflow/Definitions/{definitionId}:
    delete:
      operationId: WorkflowDefinition_Delete
      parameters:
      - description: The Workflow Definition Id.
        explode: false
        in: path
        name: definitionId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes the definition matching the given Id.
      tags:
      - WorkflowDefinition
      x-accepts: application/json
    get:
      operationId: WorkflowDefinition_Get
      parameters:
      - description: The Id of the definition to retrieve.
        explode: false
        in: path
        name: definitionId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version to retrieve. If this value is not specified, the\
          \ latest version will be returned."
        explode: true
        in: query
        name: definitionVersion
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Indicates if the response should be cleansed of role ids for
          export.
        explode: true
        in: query
        name: exportable
        required: false
        schema:
          type: boolean
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionResponse'
          description: OK
      summary: Gets a workflow definition.
      tags:
      - WorkflowDefinition
      x-accepts: application/json
    put:
      operationId: WorkflowDefinition_UpdateExistingDefinition
      parameters:
      - description: The Id of the definition to update.
        explode: false
        in: path
        name: definitionId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionUpdateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionUpdateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionUpdateRequest'
        description: "The {KeyfactorApi.Models.Workflows.DefinitionUpdateRequest}\
          \ holding the updated DispalyName and Description."
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                Id: 00000000-0000-0000-0000-000000000000
                DisplayName: <Workflow name>
                Description: <Workflow description>
                Key: <Numeric Template Id>
                IsPublished: false
                WorkflowType: <Type of workflow>
                Steps: []
                DraftVersion: 1
                PublishedVersion: 1
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionResponse'
          description: OK
      summary: Updates the existing definition's DisplayName and Description.
      tags:
      - WorkflowDefinition
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
  /Workflow/Definitions:
    get:
      operationId: WorkflowDefinition_Query
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: query.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: query.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: query.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: query.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: query.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionQueryResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionQueryResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionQueryResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionQueryResponse'
                type: array
          description: OK
      summary: Gets the Definitions matching the query specifications.
      tags:
      - WorkflowDefinition
      x-accepts: application/json
    post:
      operationId: WorkflowDefinition_CreateNewDefinition
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionCreateRequest'
        description: "A {KeyfactorApi.Models.Workflows.DefinitionCreateRequest} with\
          \ the display name, description, key and type of the definition."
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                Id: 00000000-0000-0000-0000-000000000000
                DisplayName: <Workflow name>
                Description: <Workflow description>
                Key: <Numeric Template Id>
                IsPublished: false
                WorkflowType: <Type of workflow>
                Steps: []
                DraftVersion: 1
                PublishedVersion: 1
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionResponse'
          description: OK
      summary: Creates a new base definition without any steps.
      tags:
      - WorkflowDefinition
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
  /Workflow/Definitions/Steps:
    get:
      operationId: WorkflowDefinition_QueryAvailableSteps
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: query.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: query.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: query.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: query.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: query.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.AvailableStepQueryResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.AvailableStepQueryResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.AvailableStepQueryResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.AvailableStepQueryResponse'
                type: array
          description: OK
      summary: Gets the result set of available steps for a given query.
      tags:
      - WorkflowDefinition
      x-accepts: application/json
  /Workflow/Definitions/Types:
    get:
      operationId: WorkflowDefinition_QueryWorkflowTypes
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: query.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: query.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: query.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: query.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: query.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.WorkflowTypeQueryResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.WorkflowTypeQueryResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.WorkflowTypeQueryResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.WorkflowTypeQueryResponse'
                type: array
          description: OK
      summary: Performs a query against the workflow types in the system.
      tags:
      - WorkflowDefinition
      x-accepts: application/json
  /Workflow/Definitions/{definitionId}/Steps:
    put:
      description: "If the latest version is also the published version, a new version\
        \ will be created and the steps will be set on that new version."
      operationId: WorkflowDefinition_ConfigureDefinitionSteps
      parameters:
      - description: The Id of the definition.
        explode: false
        in: path
        name: definitionId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionStepRequest'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionStepRequest'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionStepRequest'
              type: array
          text/xml:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionStepRequest'
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionStepRequest'
              type: array
        description: "A collection of {KeyfactorApi.Models.Workflows.DefinitionStepRequest}\
          \ defining the steps to set on the definition."
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                Id: 00000000-0000-0000-0000-000000000000
                DisplayName: <Workflow name>
                Description: <Workflow description>
                Key: <Numeric Template Id>
                IsPublished: false
                WorkflowType: <Type of workflow>
                Steps: []
                DraftVersion: 1
                PublishedVersion: 1
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionResponse'
          description: OK
      summary: Sets the provided steps on the latest version of the definition.
      tags:
      - WorkflowDefinition
      x-codegen-request-body-name: request
      x-content-type: application/json
      x-accepts: application/json
  /Workflow/Definitions/{definitionId}/Publish:
    post:
      operationId: WorkflowDefinition_PublishDefinition
      parameters:
      - description: The Workflow Definition Id.
        explode: false
        in: path
        name: definitionId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionResponse'
          description: OK
      summary: Makes the most recent version of a Workflow Definition the published
        version.
      tags:
      - WorkflowDefinition
      x-accepts: application/json
  /Workflow/Instances/{instanceId}:
    delete:
      operationId: WorkflowInstance_DeleteInstance
      parameters:
      - description: The Id of the instance to be deleted.
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Deletes the specified instance.
      tags:
      - WorkflowInstance
      x-accepts: application/json
    get:
      operationId: WorkflowInstance_Get
      parameters:
      - description: "The {System.Guid} identifying the instance."
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.InstanceResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.InstanceResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.InstanceResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.InstanceResponse'
          description: OK
      summary: Get information relevant for knowing where an instance is in its workflow.
      tags:
      - WorkflowInstance
      x-accepts: application/json
  /Workflow/Instances:
    get:
      operationId: WorkflowInstance_Query
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.InstanceQueryResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.InstanceQueryResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.InstanceQueryResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.InstanceQueryResponse'
                type: array
          description: OK
      summary: Gets the workflow instances matching the query specifications.
      tags:
      - WorkflowInstance
      x-accepts: application/json
  /Workflow/Instances/My:
    get:
      operationId: WorkflowInstance_QueryInstancesStartedByMe
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: instanceQuery.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: instanceQuery.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: instanceQuery.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: instanceQuery.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: instanceQuery.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.InstanceQueryResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.InstanceQueryResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.InstanceQueryResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.InstanceQueryResponse'
                type: array
          description: OK
      summary: Gets the workflow instances started by the user.
      tags:
      - WorkflowInstance
      x-accepts: application/json
  /Workflow/Instances/AssignedToMe:
    get:
      operationId: WorkflowInstance_QueryInstancesAssignedToMe
      parameters:
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
          \ value2)"
        explode: true
        in: query
        name: pq.queryString
        required: false
        schema:
          type: string
        style: form
      - description: The current page within the result set to be returned
        explode: true
        in: query
        name: pq.pageReturned
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum number of records to be returned in a single call
        explode: true
        in: query
        name: pq.returnLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Field by which the results should be sorted (view results via
          Management Portal for sortable columns)
        explode: true
        in: query
        name: pq.sortField
        required: false
        schema:
          type: string
        style: form
      - description: "Field sort direction [0=ascending, 1=descending]"
        explode: true
        in: query
        name: pq.sortAscending
        required: false
        schema:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        style: form
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.InstanceQueryResponse'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.InstanceQueryResponse'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.InstanceQueryResponse'
                type: array
            text/xml:
              schema:
                items:
                  $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.InstanceQueryResponse'
                type: array
          description: OK
      summary: Gets the workflow instances waiting on the user.
      tags:
      - WorkflowInstance
      x-accepts: application/json
  /Workflow/Instances/{instanceId}/Stop:
    post:
      operationId: WorkflowInstance_Stop
      parameters:
      - description: The Id of the instance to reject.
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: "Rejects an instance, preventing it from continuing."
      tags:
      - WorkflowInstance
      x-accepts: application/json
  /Workflow/Instances/{instanceId}/Signals:
    post:
      operationId: WorkflowInstance_Signal
      parameters:
      - description: The instance that is receiving the signal.
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.SignalRequest'
        description: The signal to receive.
        required: true
      responses:
        "204":
          content: {}
          description: No Content
      summary: Receives the given signal for the given instance.
      tags:
      - WorkflowInstance
      x-codegen-request-body-name: signal
      x-content-type: application/json
      x-accepts: application/json
  /Workflow/Instances/{instanceId}/Restart:
    post:
      operationId: WorkflowInstance_Restart
      parameters:
      - description: The instance Id to restart.
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: The version of the definition to restart the instance against.
          Defaults to the published version.
        explode: true
        in: query
        name: version
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Desired version of the api, if not provided defaults to v1"
        explode: false
        in: header
        name: x-keyfactor-api-version
        required: false
        schema:
          default: "1"
          type: string
        style: simple
      - description: "Type of the request [XMLHttpRequest, APIClient]"
        explode: false
        in: header
        name: x-keyfactor-requested-with
        required: true
        schema:
          default: APIClient
          type: string
        style: simple
      responses:
        "204":
          content: {}
          description: No Content
      summary: Restarts a failed instance against the specified definition version
        or the published version if no version is specified.
      tags:
      - WorkflowInstance
      x-accepts: application/json
components:
  schemas:
    KeyfactorApi.Models.Orchestrators.AgentResponse:
      example:
        Status: 6
        ClientMachine: ClientMachine
        LastErrorMessage: LastErrorMessage
        Blueprint: Blueprint
        Thumbprint: Thumbprint
        LastSeen: 2000-01-23T04:56:07.000+00:00
        AuthCertificateReenrollment: AuthCertificateReenrollment
        Username: Username
        Version: Version
        Capabilities:
        - Capabilities
        - Capabilities
        LastThumbprintUsed: LastThumbprintUsed
        LastErrorCode: 1
        AgentPlatform: 0
        AgentId: 00000000-0000-0000-0000-000000000000
        LegacyThumbprint: LegacyThumbprint
      properties:
        AgentId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        ClientMachine:
          type: string
        Username:
          type: string
        AgentPlatform:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          format: int32
          type: integer
        Version:
          type: string
        Status:
          enum:
          - 1
          - 2
          - 3
          - 4
          format: int32
          type: integer
        LastSeen:
          format: date-time
          type: string
        Capabilities:
          items:
            type: string
          type: array
        Blueprint:
          type: string
        Thumbprint:
          type: string
        LegacyThumbprint:
          type: string
        AuthCertificateReenrollment:
          type: string
        LastThumbprintUsed:
          type: string
        LastErrorCode:
          format: int64
          type: integer
        LastErrorMessage:
          type: string
      type: object
    Models.QueryModels.PagedAgentQuery:
      description: A query result set with parameters to define the format of Agent
        records
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Orchestrators.UpdateOrchestratorAuthCertificateReenrollmentRequest:
      properties:
        OrchestratorIds:
          items:
            type: string
          type: array
        Status:
          type: string
      required:
      - Status
      type: object
    KeyfactorApi.Models.Orchestrators.UpdateOrchestratorAuthCertificateReenrollmentResponse:
      example:
        Status: 0
        FailedOrchestratorIds:
        - FailedOrchestratorIds
        - FailedOrchestratorIds
      properties:
        FailedOrchestratorIds:
          items:
            type: string
          type: array
        Status:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Orchestrators.AgentBlueprintResponse:
      example:
        LastModified: 2000-01-23T04:56:07.000+00:00
        AgentBlueprintId: 00000000-0000-0000-0000-000000000000
        RequiredCapabilities:
        - RequiredCapabilities
        - RequiredCapabilities
        Name: Name
      properties:
        AgentBlueprintId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Name:
          type: string
        RequiredCapabilities:
          items:
            type: string
          type: array
        LastModified:
          format: date-time
          type: string
      type: object
    Models.QueryModels.PagedAgentBlueprintQuery:
      properties:
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        SkipCount:
          description: Number of records to be skipped before inclusion in the result
            set
          format: int32
          readOnly: true
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: "Field by which the results should be sorted (OperationStart,\
            \ OperationEnd, UserName)"
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.QueryModels.PagedAgentBlueprintJobsQuery:
      properties:
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        SkipCount:
          description: Number of records to be skipped before inclusion in the result
            set
          format: int32
          readOnly: true
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: "Field by which the results should be sorted (OperationStart,\
            \ OperationEnd, UserName)"
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Orchestrators.AgentBlueprintJobsResponse:
      example:
        RequestTimestamp: 2000-01-23T04:56:07.000+00:00
        Overwrite: true
        AgentBlueprintId: 00000000-0000-0000-0000-000000000000
        AgentBlueprintStores:
          CreateIfMissing: true
          AgentBlueprintId: 00000000-0000-0000-0000-000000000000
          ContainerId: 5
          CertStoreTypeName: CertStoreTypeName
          AgentBlueprintStoreId: 00000000-0000-0000-0000-000000000000
          Approved: true
          CertStoreType: 2
          Properties: Properties
          StorePath: StorePath
        AgentBlueprintJobId: 00000000-0000-0000-0000-000000000000
        HasPfxPassword: true
        FileNamePatterns: FileNamePatterns
        Thumbprint: Thumbprint
        SymLinks: true
        KeyfactorSchedule:
          Daily:
            Time: 2000-01-23T04:56:07.000+00:00
          Monthly:
            Time: 2000-01-23T04:56:07.000+00:00
            Day: 5
          Weekly:
            Days:
            - 1
            - 1
            Time: 2000-01-23T04:56:07.000+00:00
          Immediate: true
          ExactlyOnce:
            Time: 2000-01-23T04:56:07.000+00:00
          Interval:
            Minutes: 6
        Subject: Subject
        IgnoredDirectories: IgnoredDirectories
        JobTypeName: JobTypeName
        HasEntryPassword: true
        Directories: Directories
        JobType: 00000000-0000-0000-0000-000000000000
        Contents: Contents
        Alias: Alias
        FileExtensions: FileExtensions
        AgentBlueprintStoreId: 00000000-0000-0000-0000-000000000000
        OperationType: 0
        Compatibility: true
        PrivateKeyEntry: true
      properties:
        AgentBlueprintJobId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        AgentBlueprintStoreId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        AgentBlueprintId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        JobType:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        JobTypeName:
          type: string
        OperationType:
          format: int32
          type: integer
        Thumbprint:
          type: string
        Contents:
          type: string
        Alias:
          type: string
        PrivateKeyEntry:
          type: boolean
        Overwrite:
          type: boolean
        HasEntryPassword:
          type: boolean
        HasPfxPassword:
          type: boolean
        RequestTimestamp:
          format: date-time
          type: string
        KeyfactorSchedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        Subject:
          type: string
        Directories:
          type: string
        IgnoredDirectories:
          type: string
        SymLinks:
          type: boolean
        Compatibility:
          type: boolean
        FileExtensions:
          type: string
        FileNamePatterns:
          type: string
        AgentBlueprintStores:
          $ref: '#/components/schemas/KeyfactorApi.Models.Orchestrators.AgentBlueprintStoresResponse'
      type: object
    Keyfactor.Common.Scheduling.KeyfactorSchedule:
      example:
        Daily:
          Time: 2000-01-23T04:56:07.000+00:00
        Monthly:
          Time: 2000-01-23T04:56:07.000+00:00
          Day: 5
        Weekly:
          Days:
          - 1
          - 1
          Time: 2000-01-23T04:56:07.000+00:00
        Immediate: true
        ExactlyOnce:
          Time: 2000-01-23T04:56:07.000+00:00
        Interval:
          Minutes: 6
      properties:
        Immediate:
          type: boolean
        Interval:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.Models.IntervalModel'
        Daily:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.Models.TimeModel'
        Weekly:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.Models.WeeklyModel'
        Monthly:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.Models.MonthlyModel'
        ExactlyOnce:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.Models.TimeModel'
      type: object
    KeyfactorApi.Models.Orchestrators.AgentBlueprintStoresResponse:
      example:
        CreateIfMissing: true
        AgentBlueprintId: 00000000-0000-0000-0000-000000000000
        ContainerId: 5
        CertStoreTypeName: CertStoreTypeName
        AgentBlueprintStoreId: 00000000-0000-0000-0000-000000000000
        Approved: true
        CertStoreType: 2
        Properties: Properties
        StorePath: StorePath
      properties:
        AgentBlueprintStoreId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        AgentBlueprintId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        StorePath:
          type: string
        ContainerId:
          format: int32
          type: integer
        CertStoreType:
          format: int32
          type: integer
        CertStoreTypeName:
          type: string
        Approved:
          type: boolean
        CreateIfMissing:
          type: boolean
        Properties:
          type: string
      type: object
    Keyfactor.Common.Scheduling.Models.IntervalModel:
      example:
        Minutes: 6
      properties:
        Minutes:
          format: int32
          type: integer
      type: object
    Keyfactor.Common.Scheduling.Models.TimeModel:
      example:
        Time: 2000-01-23T04:56:07.000+00:00
      properties:
        Time:
          format: date-time
          type: string
      type: object
    Keyfactor.Common.Scheduling.Models.WeeklyModel:
      example:
        Days:
        - 1
        - 1
        Time: 2000-01-23T04:56:07.000+00:00
      properties:
        Days:
          items:
            enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            format: int32
            type: integer
          type: array
        Time:
          format: date-time
          type: string
      type: object
    Keyfactor.Common.Scheduling.Models.MonthlyModel:
      example:
        Time: 2000-01-23T04:56:07.000+00:00
        Day: 5
      properties:
        Day:
          format: int32
          type: integer
        Time:
          format: date-time
          type: string
      type: object
    Models.QueryModels.PagedAgentBlueprintStoresQuery:
      properties:
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        SkipCount:
          description: Number of records to be skipped before inclusion in the result
            set
          format: int32
          readOnly: true
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: "Field by which the results should be sorted (OperationStart,\
            \ OperationEnd, UserName)"
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.Agents.AgentPool:
      description: Class representing an SSL agent pool
      example:
        DiscoverAgentsCount: 0
        MonitorAgentsCount: 6
        Agents:
        - ClientMachine: ClientMachine
          EnableDiscover: true
          Version: Version
          AllowsDiscover: true
          AllowsMonitor: true
          AgentId: 00000000-0000-0000-0000-000000000000
          EnableMonitor: true
        - ClientMachine: ClientMachine
          EnableDiscover: true
          Version: Version
          AllowsDiscover: true
          AllowsMonitor: true
          AgentId: 00000000-0000-0000-0000-000000000000
          EnableMonitor: true
        AgentPoolId: 00000000-0000-0000-0000-000000000000
        Name: Name
      properties:
        AgentPoolId:
          description: GUID identifier of the agent pool
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Name:
          description: Name of the agent pool
          type: string
        DiscoverAgentsCount:
          description: Number of agents that can perform discovery jobs
          format: int32
          type: integer
        MonitorAgentsCount:
          description: Number of agents that can perform monitoring jobs
          format: int32
          type: integer
        Agents:
          description: List of the agents assigned to the pool
          items:
            $ref: '#/components/schemas/Models.Agents.AgentPoolAgent'
          type: array
      required:
      - Name
      type: object
    Models.Agents.AgentPoolAgent:
      example:
        ClientMachine: ClientMachine
        EnableDiscover: true
        Version: Version
        AllowsDiscover: true
        AllowsMonitor: true
        AgentId: 00000000-0000-0000-0000-000000000000
        EnableMonitor: true
      properties:
        AgentId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        EnableDiscover:
          type: boolean
        EnableMonitor:
          type: boolean
        Version:
          type: string
        AllowsDiscover:
          type: boolean
        AllowsMonitor:
          type: boolean
        ClientMachine:
          type: string
      type: object
    Models.QueryModels.PagedAgentPoolQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.QueryModels.PagedAgentPoolAgentsQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.QueryModels.PagedAuditLogQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Keyfactor.Auditing.Querying.AuditLogEntry:
      example:
        EntityType: EntityType
        Category: 6
        User: User
        Message: Message
        Signature: Signature
        Level: 5
        Id: 0
        Operation: 1
        Timestamp: 2000-01-23T04:56:07.000+00:00
        AuditIdentifier: AuditIdentifier
        ImmutableIdentifier: ImmutableIdentifier
      properties:
        Id:
          format: int32
          type: integer
        Timestamp:
          format: date-time
          type: string
        Message:
          type: string
        Signature:
          type: string
        Category:
          format: int32
          type: integer
        Operation:
          format: int32
          type: integer
        Level:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        User:
          type: string
        EntityType:
          type: string
        AuditIdentifier:
          type: string
        ImmutableIdentifier:
          type: string
      type: object
    Models.Security.CertificatePermissions:
      description: A list of permissions for a given certificate and which security
        role(s) granted them.
      example:
        Roles:
        - Permissions:
          - Permissions
          - Permissions
          Name: Name
        - Permissions:
          - Permissions
          - Permissions
          Name: Name
      properties:
        Roles:
          items:
            $ref: '#/components/schemas/Models.Security.SecurityRoles.SecurityRoleResponseBase'
          type: array
      type: object
    Models.Security.SecurityRoles.SecurityRoleResponseBase:
      example:
        Permissions:
        - Permissions
        - Permissions
        Name: Name
      properties:
        Name:
          description: The name of the created role
          type: string
        Permissions:
          description: The permissions included in the created security role
          items:
            type: string
          type: array
      type: object
    Models.CertificateValidationResponse:
      example:
        Valid: true
        Results:
          key: Results
      properties:
        Valid:
          description: States whether the certificate is valid or not
          type: boolean
        Results:
          additionalProperties:
            type: string
          description: Lists any reasons why the certificate is not valid
          type: object
      type: object
    KeyfactorApi.Models.Certificates.CertificateLocationsResponse:
      example:
        Details:
        - StoreType: StoreType
          StoreCount: 6
          Locations:
          - ClientMachine: ClientMachine
            NetworkName: NetworkName
            StoreId: 00000000-0000-0000-0000-000000000000
            Alias: Alias
            Port: 5
            IPAddress: IPAddress
            AgentPool: AgentPool
            StoreTypeId: 1
            StorePath: StorePath
          - ClientMachine: ClientMachine
            NetworkName: NetworkName
            StoreId: 00000000-0000-0000-0000-000000000000
            Alias: Alias
            Port: 5
            IPAddress: IPAddress
            AgentPool: AgentPool
            StoreTypeId: 1
            StorePath: StorePath
          StoreTypeId: 0
        - StoreType: StoreType
          StoreCount: 6
          Locations:
          - ClientMachine: ClientMachine
            NetworkName: NetworkName
            StoreId: 00000000-0000-0000-0000-000000000000
            Alias: Alias
            Port: 5
            IPAddress: IPAddress
            AgentPool: AgentPool
            StoreTypeId: 1
            StorePath: StorePath
          - ClientMachine: ClientMachine
            NetworkName: NetworkName
            StoreId: 00000000-0000-0000-0000-000000000000
            Alias: Alias
            Port: 5
            IPAddress: IPAddress
            AgentPool: AgentPool
            StoreTypeId: 1
            StorePath: StorePath
          StoreTypeId: 0
      properties:
        Details:
          items:
            $ref: '#/components/schemas/Models.CertStoreLocations.CertificateLocationsGroup'
          type: array
      type: object
    Models.CertStoreLocations.CertificateLocationsGroup:
      example:
        StoreType: StoreType
        StoreCount: 6
        Locations:
        - ClientMachine: ClientMachine
          NetworkName: NetworkName
          StoreId: 00000000-0000-0000-0000-000000000000
          Alias: Alias
          Port: 5
          IPAddress: IPAddress
          AgentPool: AgentPool
          StoreTypeId: 1
          StorePath: StorePath
        - ClientMachine: ClientMachine
          NetworkName: NetworkName
          StoreId: 00000000-0000-0000-0000-000000000000
          Alias: Alias
          Port: 5
          IPAddress: IPAddress
          AgentPool: AgentPool
          StoreTypeId: 1
          StorePath: StorePath
        StoreTypeId: 0
      properties:
        StoreType:
          readOnly: true
          type: string
        StoreTypeId:
          format: int32
          readOnly: true
          type: integer
        StoreCount:
          format: int32
          readOnly: true
          type: integer
        Locations:
          items:
            $ref: '#/components/schemas/Models.CertStoreLocations.CertificateStoreLocationsDetail'
          type: array
      type: object
    Models.CertStoreLocations.CertificateStoreLocationsDetail:
      example:
        ClientMachine: ClientMachine
        NetworkName: NetworkName
        StoreId: 00000000-0000-0000-0000-000000000000
        Alias: Alias
        Port: 5
        IPAddress: IPAddress
        AgentPool: AgentPool
        StoreTypeId: 1
        StorePath: StorePath
      properties:
        StoreId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        StoreTypeId:
          format: int32
          type: integer
        ClientMachine:
          type: string
        StorePath:
          type: string
        AgentPool:
          type: string
        Alias:
          type: string
        IPAddress:
          type: string
        Port:
          format: int32
          type: integer
        NetworkName:
          type: string
      type: object
    KeyfactorApi.Models.Certificates.CertificateIdentityAuditResponse:
      description: Represents an account with a list of permission granted to it on
        a given certificate by either a role or collection
      example:
        IdentityType: IdentityType
        Permissions:
        - GrantedBy:
          - GrantedBy
          - GrantedBy
          Name: Name
        - GrantedBy:
          - GrantedBy
          - GrantedBy
          Name: Name
        Id: 0
        AccountName: AccountName
        SID: SID
      properties:
        Id:
          description: Id of the account represented by the audit response
          format: int32
          type: integer
        AccountName:
          description: Name of the account represented by the audit response
          type: string
        IdentityType:
          description: The type of account represented by the audit response (User
            or Group)
          type: string
        SID:
          description: The SID of the account represented by the audit reponse
          type: string
        Permissions:
          description: Permissions granted to the account represented by the audit
            reponse on the specified certifcate
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Certificates.CertificateIdentityAuditResponse.CertificatePermission'
          readOnly: true
          type: array
      type: object
    KeyfactorApi.Models.Certificates.CertificateIdentityAuditResponse.CertificatePermission:
      description: Represents a permission granted to an account for a certificate
      example:
        GrantedBy:
        - GrantedBy
        - GrantedBy
        Name: Name
      properties:
        Name:
          description: The name of the permission
          type: string
        GrantedBy:
          description: A list of roles or collections that grant the given permission
          items:
            type: string
          type: array
      type: object
    Models.CertificateRetrievalResponse:
      example:
        ArchivedKey: true
        CARowIndex: 9
        KeyType: 2
        IssuedEmail: IssuedEmail
        PrincipalId: 6
        CARecordId: CARecordId
        Thumbprint: Thumbprint
        Metadata:
          key: Metadata
        IssuedCN: IssuedCN
        KeyUsage: 9
        RevocationComment: RevocationComment
        NotAfter: 2000-01-23T04:56:07.000+00:00
        IssuedOU: IssuedOU
        CertificateAuthorityId: 2
        RevocationEffDate: 2000-01-23T04:56:07.000+00:00
        HasPrivateKey: true
        SubjectAltNameElements:
        - Type: 1
          ValueHash: ValueHash
          Value: Value
          Id: 1
        - Type: 1
          ValueHash: ValueHash
          Value: Value
          Id: 1
        RequesterName: RequesterName
        TemplateName: TemplateName
        ContentBytes: ContentBytes
        KeySizeInBits: 5
        KeyTypeString: KeyTypeString
        KeyRecoverable: true
        TemplateId: 1
        DetailedKeyUsage:
          KeyEncipherment: true
          DataEncipherment: true
          CrlSign: true
          DigitalSignature: true
          KeyCertSign: true
          DecipherOnly: true
          KeyAgreement: true
          NonRepudiation: true
          HexCode: HexCode
          EncipherOnly: true
        RevocationReason: 3
        CertificateKeyId: 5
        IssuerDN: IssuerDN
        ImportDate: 2000-01-23T04:56:07.000+00:00
        CertStateString: CertStateString
        CertificateAuthorityName: CertificateAuthorityName
        CertRequestId: 4
        Locations:
        - StoreType: 1
          Alias: Alias
          CertStoreId: 00000000-0000-0000-0000-000000000000
          ChainLevel: 4
          StoreMachine: StoreMachine
          StorePath: StorePath
        - StoreType: 1
          Alias: Alias
          CertStoreId: 00000000-0000-0000-0000-000000000000
          ChainLevel: 4
          StoreMachine: StoreMachine
          StorePath: StorePath
        Curve: Curve
        RequesterId: 7
        SigningAlgorithm: SigningAlgorithm
        IssuedDN: IssuedDN
        PrincipalName: PrincipalName
        CertState: 5
        ExtendedKeyUsages:
        - DisplayName: DisplayName
          Id: 7
          Oid: Oid
        - DisplayName: DisplayName
          Id: 7
          Oid: Oid
        SSLLocations:
        - NetworkName: NetworkName
          Port: 7
          IPAddress: IPAddress
          AgentPool: AgentPool
          StorePath: StorePath
        - NetworkName: NetworkName
          Port: 7
          IPAddress: IPAddress
          AgentPool: AgentPool
          StorePath: StorePath
        CRLDistributionPoints:
        - UrlHash: UrlHash
          Id: 1
          Url: Url
        - UrlHash: UrlHash
          Id: 1
          Url: Url
        SerialNumber: SerialNumber
        Id: 0
        NotBefore: 2000-01-23T04:56:07.000+00:00
        LocationsCount:
        - Type: Type
          Count: 6
        - Type: Type
          Count: 6
      properties:
        Id:
          format: int32
          type: integer
        Thumbprint:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        SerialNumber:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        IssuedDN:
          nullable: true
          type: string
        IssuedCN:
          nullable: true
          type: string
        ImportDate:
          format: date-time
          type: string
        NotBefore:
          format: date-time
          type: string
        NotAfter:
          format: date-time
          type: string
        IssuerDN:
          nullable: true
          type: string
        PrincipalId:
          format: int32
          nullable: true
          type: integer
        TemplateId:
          format: int32
          type: integer
        CertState:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          format: int32
          type: integer
        KeySizeInBits:
          format: int32
          type: integer
        KeyType:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          format: int32
          type: integer
        RequesterId:
          format: int32
          type: integer
        IssuedOU:
          nullable: true
          type: string
        IssuedEmail:
          nullable: true
          type: string
        KeyUsage:
          format: int32
          type: integer
        SigningAlgorithm:
          type: string
        CertStateString:
          type: string
        KeyTypeString:
          type: string
        RevocationEffDate:
          format: date-time
          nullable: true
          type: string
        RevocationReason:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 8
          - 999
          - -1
          format: int32
          nullable: true
          type: integer
        RevocationComment:
          nullable: true
          type: string
        CertificateAuthorityId:
          format: int32
          type: integer
        CertificateAuthorityName:
          type: string
        TemplateName:
          description: Full template display name.
          type: string
        ArchivedKey:
          type: boolean
        HasPrivateKey:
          type: boolean
        PrincipalName:
          nullable: true
          type: string
        CertRequestId:
          format: int32
          type: integer
        RequesterName:
          type: string
        ContentBytes:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        ExtendedKeyUsages:
          items:
            $ref: '#/components/schemas/Models.CertificateRetrievalResponse.ExtendedKeyUsageModel'
          type: array
        SubjectAltNameElements:
          items:
            $ref: '#/components/schemas/Models.CertificateRetrievalResponse.SubjectAlternativeNameModel'
          type: array
        CRLDistributionPoints:
          items:
            $ref: '#/components/schemas/Models.CertificateRetrievalResponse.CRLDistributionPointModel'
          type: array
        LocationsCount:
          items:
            $ref: '#/components/schemas/Models.CertificateRetrievalResponse.LocationCountModel'
          type: array
        SSLLocations:
          items:
            $ref: '#/components/schemas/Models.CertificateRetrievalResponse.CertificateStoreLocationDetailModel'
          type: array
        Locations:
          items:
            $ref: '#/components/schemas/Models.CertificateRetrievalResponse.CertificateStoreInventoryItemModel'
          type: array
        Metadata:
          additionalProperties:
            type: string
          type: object
        CertificateKeyId:
          format: int32
          type: integer
        CARowIndex:
          format: int64
          readOnly: true
          type: integer
        CARecordId:
          type: string
        DetailedKeyUsage:
          $ref: '#/components/schemas/Models.CertificateRetrievalResponse.DetailedKeyUsageModel'
        KeyRecoverable:
          type: boolean
        Curve:
          nullable: true
          type: string
      type: object
    Models.CertificateRetrievalResponse.ExtendedKeyUsageModel:
      example:
        DisplayName: DisplayName
        Id: 7
        Oid: Oid
      properties:
        Id:
          format: int32
          type: integer
        Oid:
          type: string
        DisplayName:
          type: string
      type: object
    Models.CertificateRetrievalResponse.SubjectAlternativeNameModel:
      example:
        Type: 1
        ValueHash: ValueHash
        Value: Value
        Id: 1
      properties:
        Id:
          format: int32
          type: integer
        Value:
          type: string
        Type:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 100
          - 101
          - 999
          format: int32
          type: integer
        ValueHash:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    Models.CertificateRetrievalResponse.CRLDistributionPointModel:
      example:
        UrlHash: UrlHash
        Id: 1
        Url: Url
      properties:
        Id:
          format: int32
          type: integer
        Url:
          type: string
        UrlHash:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    Models.CertificateRetrievalResponse.LocationCountModel:
      example:
        Type: Type
        Count: 6
      properties:
        Type:
          type: string
        Count:
          format: int32
          type: integer
      type: object
    Models.CertificateRetrievalResponse.CertificateStoreLocationDetailModel:
      example:
        NetworkName: NetworkName
        Port: 7
        IPAddress: IPAddress
        AgentPool: AgentPool
        StorePath: StorePath
      properties:
        StorePath:
          type: string
        AgentPool:
          type: string
        IPAddress:
          type: string
        Port:
          format: int32
          type: integer
        NetworkName:
          type: string
      type: object
    Models.CertificateRetrievalResponse.CertificateStoreInventoryItemModel:
      example:
        StoreType: 1
        Alias: Alias
        CertStoreId: 00000000-0000-0000-0000-000000000000
        ChainLevel: 4
        StoreMachine: StoreMachine
        StorePath: StorePath
      properties:
        StoreMachine:
          type: string
        StorePath:
          type: string
        StoreType:
          format: int32
          type: integer
        Alias:
          type: string
        ChainLevel:
          format: int32
          type: integer
        CertStoreId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
      type: object
    Models.CertificateRetrievalResponse.DetailedKeyUsageModel:
      example:
        KeyEncipherment: true
        DataEncipherment: true
        CrlSign: true
        DigitalSignature: true
        KeyCertSign: true
        DecipherOnly: true
        KeyAgreement: true
        NonRepudiation: true
        HexCode: HexCode
        EncipherOnly: true
      properties:
        CrlSign:
          type: boolean
        DataEncipherment:
          type: boolean
        DecipherOnly:
          type: boolean
        DigitalSignature:
          type: boolean
        EncipherOnly:
          type: boolean
        KeyAgreement:
          type: boolean
        KeyCertSign:
          type: boolean
        KeyEncipherment:
          type: boolean
        NonRepudiation:
          type: boolean
        HexCode:
          type: string
      type: object
    Models.QueryModels.PagedCertificateHistoryQuery:
      properties:
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: "Field by which the results should be sorted (OperationStart,\
            \ OperationEnd, UserName)"
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.PKI.CertificateOperation:
      description: Details of an operation done on a certificate.
      example:
        OperationEnd: 2000-01-23T04:56:07.000+00:00
        Comment: Comment
        Action: Action
        Username: Username
        Id: 0
        OperationStart: 2000-01-23T04:56:07.000+00:00
      properties:
        Id:
          format: int64
          type: integer
        OperationStart:
          format: date-time
          type: string
        OperationEnd:
          format: date-time
          type: string
        Username:
          type: string
        Comment:
          type: string
        Action:
          type: string
      type: object
    KeyfactorApi.Models.Certificates.CertificateQueryRequest:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
        IncludeRevoked:
          description: Select 'true' to include revoked certificates in the results
          type: boolean
        IncludeExpired:
          description: Select 'true' to include expired certificates in the results
          type: boolean
      type: object
    Models.MetadataUpdateRequest:
      properties:
        Id:
          format: int32
          type: integer
        Metadata:
          additionalProperties:
            type: string
          type: object
      required:
      - Metadata
      type: object
    Models.MetadataAllUpdateRequest:
      properties:
        Query:
          type: string
        CertificateIds:
          items:
            format: int32
            type: integer
          type: array
        Metadata:
          items:
            $ref: '#/components/schemas/Models.MetadataSingleUpdateRequest'
          type: array
      required:
      - Metadata
      type: object
    Models.MetadataSingleUpdateRequest:
      properties:
        MetadataName:
          type: string
        Value:
          type: string
        OverwriteExisting:
          type: boolean
      type: object
    Models.CertificateImportRequestModel:
      description: Class representing a request to import a certificate into Keyfactor
        Command
      example:
        Certificate: <base64 cert>
        Password: <pfx password>
        Metadata:
          Email-Contact: user@domain.com
        StoreIds:
        - 00000000-0000-0000-0000-000000000000
        - 00000000-0000-0000-0000-000000000000
        StoreTypes:
        - StoreTypeId: 0
          Alias: <store alias>
          Overwrite: true
          Properties: []
        Schedule: 2022-09-23T18:09:16.5942278Z
        ImportMetadata: true
      properties:
        Certificate:
          description: Base64-encoded certificate contents
          type: string
        Password:
          description: Optional password associated if required for a PFX
          type: string
        Metadata:
          additionalProperties:
            type: string
          description: Colleciton of metadata to be associated with the imported certificate
          type: object
        StoreIds:
          description: List of the Keyfactor certificate store identifiers (GUID)
            with which the imported certificate should be associated
          items:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
          type: array
        StoreTypes:
          description: List of the certificate store types with with the imported
            certificate should be associated
          items:
            $ref: '#/components/schemas/Models.Enrollment.ManagementStoreType'
          type: array
        Schedule:
          description: Schedule on which the certificate should be imported
          format: date-time
          type: string
        ImportMetadata:
          description: Whether or not we should validate and import the certificate's
            metadata.
          type: boolean
      required:
      - Certificate
      type: object
    Models.Enrollment.ManagementStoreType:
      properties:
        StoreTypeId:
          format: int32
          type: integer
        Alias:
          type: string
        Overwrite:
          type: boolean
        Properties:
          items:
            properties: {}
            type: object
          type: array
      type: object
    Models.CertificateImportResponseModel:
      example:
        JobStatus: 6
        InvalidKeystores:
        - ClientMachine: ClientMachine
          Alias: Alias
          Explanation: Explanation
          Reason: 1
          KeystoreId: 00000000-0000-0000-0000-000000000000
          StorePath: StorePath
        - ClientMachine: ClientMachine
          Alias: Alias
          Explanation: Explanation
          Reason: 1
          KeystoreId: 00000000-0000-0000-0000-000000000000
          StorePath: StorePath
        ImportStatus: 0
        Thumbprint: Thumbprint
      properties:
        ImportStatus:
          enum:
          - 0
          - 1
          - 2
          - 4
          - 8
          - 16
          - 32
          - 64
          - 128
          - 256
          format: int32
          type: integer
        JobStatus:
          enum:
          - 1
          - 2
          - 3
          format: int32
          type: integer
        InvalidKeystores:
          items:
            $ref: '#/components/schemas/Models.InvalidKeystore'
          type: array
        Thumbprint:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    Models.InvalidKeystore:
      example:
        ClientMachine: ClientMachine
        Alias: Alias
        Explanation: Explanation
        Reason: 1
        KeystoreId: 00000000-0000-0000-0000-000000000000
        StorePath: StorePath
      properties:
        KeystoreId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        ClientMachine:
          type: string
        StorePath:
          type: string
        Alias:
          type: string
        Reason:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          format: int32
          type: integer
        Explanation:
          type: string
      type: object
    Models.RevokeCertificateRequest:
      properties:
        CertificateIds:
          items:
            format: int32
            type: integer
          type: array
        Reason:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 8
          - 999
          - -1
          format: int32
          type: integer
        Comment:
          type: string
        EffectiveDate:
          format: date-time
          type: string
        CollectionId:
          format: int32
          type: integer
      type: object
    Models.Revocation.RevocationResponse:
      example:
        RevokedIds:
        - 0
        - 0
        SuspendedCerts:
        - Message: Message
          CertId: 6
          WorkflowId: 00000000-0000-0000-0000-000000000000
        - Message: Message
          CertId: 6
          WorkflowId: 00000000-0000-0000-0000-000000000000
      properties:
        RevokedIds:
          items:
            format: int32
            type: integer
          type: array
        SuspendedCerts:
          items:
            $ref: '#/components/schemas/Models.Revocation.SuspendedRevocationResponse'
          type: array
      type: object
    Models.Revocation.SuspendedRevocationResponse:
      example:
        Message: Message
        CertId: 6
        WorkflowId: 00000000-0000-0000-0000-000000000000
      properties:
        CertId:
          format: int32
          type: integer
        WorkflowId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Message:
          type: string
      type: object
    KeyfactorApi.Models.Certificates.AnalyzeCertificateRequest:
      properties:
        Certificate:
          type: string
        Password:
          type: string
      type: object
    Models.CertificateDetails:
      example:
        IssuerDN: IssuerDN
        Thumbprint: Thumbprint
        Metadata:
          key: Metadata
        IssuedDN: IssuedDN
        NotAfter: 2000-01-23T04:56:07.000+00:00
        NotBefore: 2000-01-23T04:56:07.000+00:00
        IsEndEntity: true
      properties:
        IssuedDN:
          nullable: true
          type: string
        IssuerDN:
          nullable: true
          type: string
        Thumbprint:
          type: string
        NotAfter:
          format: date-time
          type: string
        NotBefore:
          format: date-time
          type: string
        Metadata:
          additionalProperties:
            type: string
          type: object
        IsEndEntity:
          type: boolean
      type: object
    Models.CertificateRecoveryRequest:
      properties:
        Password:
          type: string
        CertID:
          format: int32
          type: integer
        SerialNumber:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        IssuerDN:
          nullable: true
          type: string
        Thumbprint:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        IncludeChain:
          type: boolean
      required:
      - Password
      type: object
    Models.RecoveryResponse:
      example:
        PFX: PFX
        FileName: FileName
      properties:
        PFX:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        FileName:
          type: string
      type: object
    Models.CertificateDownloadRequest:
      properties:
        CertID:
          format: int32
          type: integer
        SerialNumber:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        IssuerDN:
          nullable: true
          type: string
        Thumbprint:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        IncludeChain:
          type: boolean
      type: object
    Models.CertificateDownloadResponse:
      example:
        Content: Content
      properties:
        Content:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    Models.RevokeAllCertificatesRequest:
      description: Information for revoking all certifictes in a query
      properties:
        Query:
          description: The query string of the certificates to revoke
          type: string
        Reason:
          description: The Reason for revocation
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 8
          - 999
          - -1
          format: int32
          type: integer
        Comment:
          description: A comment for auditing purposes
          type: string
        EffectiveDate:
          description: The date when the certificates are to appear on the revocation
            list
          format: date-time
          type: string
        IncludeRevoked:
          description: A flag telling the query to include revoked certificates
          type: boolean
        IncludeExpired:
          description: A flag telling the query to include expired certificates
          type: boolean
      required:
      - Comment
      - Reason
      type: object
    Models.CertificateAuthorities.CertificateAuthorityResponse:
      example:
        IncrementalScan:
          Daily:
            Time: 2000-01-23T04:56:07.000+00:00
          Monthly:
            Time: 2000-01-23T04:56:07.000+00:00
            Day: 5
          Weekly:
            Days:
            - 1
            - 1
            Time: 2000-01-23T04:56:07.000+00:00
          Immediate: true
          ExactlyOnce:
            Time: 2000-01-23T04:56:07.000+00:00
          Interval:
            Minutes: 6
        FailureMax: 5
        MonitorThresholds: true
        ExplicitPassword:
          Parameters:
            key: Parameters
          SecretValue: SecretValue
          Provider: 3
        ExplicitCredentials: true
        IssuanceMax: 6
        AllowedEnrollmentTypes: 2
        Remote: true
        AuthCertificate:
          IssuerDN: IssuerDN
          ExpirationDate: 2000-01-23T04:56:07.000+00:00
          Thumbprint: Thumbprint
          IssuedDN: IssuedDN
        EnforceUniqueDN: true
        Properties: Properties
        ExplicitUser: ExplicitUser
        UseAllowedRequesters: true
        LastScan: LastScan
        SubscriberTerms: true
        LogicalName: LogicalName
        Delegate: true
        KeyRetentionDays: 9
        ThresholdCheck:
          Daily:
            Time: 2000-01-23T04:56:07.000+00:00
          Monthly:
            Time: 2000-01-23T04:56:07.000+00:00
            Day: 5
          Weekly:
            Days:
            - 1
            - 1
            Time: 2000-01-23T04:56:07.000+00:00
          Immediate: true
          ExactlyOnce:
            Time: 2000-01-23T04:56:07.000+00:00
          Interval:
            Minutes: 6
        Standalone: true
        ForestRoot: ForestRoot
        AllowedRequesters:
        - AllowedRequesters
        - AllowedRequesters
        HostName: HostName
        RFCEnforcement: true
        Agent: 00000000-0000-0000-0000-000000000000
        FullScan:
          Daily:
            Time: 2000-01-23T04:56:07.000+00:00
          Monthly:
            Time: 2000-01-23T04:56:07.000+00:00
            Day: 5
          Weekly:
            Days:
            - 1
            - 1
            Time: 2000-01-23T04:56:07.000+00:00
          Immediate: true
          ExactlyOnce:
            Time: 2000-01-23T04:56:07.000+00:00
          Interval:
            Minutes: 6
        CAType: 2
        KeyRetention: 7
        ConfigurationTenant: ConfigurationTenant
        IssuanceMin: 1
        DenialMax: 5
        Id: 0
        DelegateEnrollment: true
      properties:
        Id:
          format: int32
          type: integer
        LogicalName:
          type: string
        HostName:
          type: string
        Delegate:
          type: boolean
        DelegateEnrollment:
          type: boolean
        ForestRoot:
          readOnly: true
          type: string
        ConfigurationTenant:
          type: string
        Remote:
          type: boolean
        Agent:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Standalone:
          type: boolean
        MonitorThresholds:
          type: boolean
        IssuanceMax:
          format: int32
          type: integer
        IssuanceMin:
          format: int32
          type: integer
        DenialMax:
          format: int32
          type: integer
        FailureMax:
          format: int32
          type: integer
        RFCEnforcement:
          type: boolean
        Properties:
          type: string
        AllowedEnrollmentTypes:
          enum:
          - 1
          - 2
          - 3
          format: int32
          type: integer
        KeyRetention:
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          type: integer
        KeyRetentionDays:
          format: int32
          type: integer
        ExplicitCredentials:
          type: boolean
        SubscriberTerms:
          type: boolean
        ExplicitUser:
          type: string
        ExplicitPassword:
          $ref: '#/components/schemas/Models.KeyfactorAPISecret'
        UseAllowedRequesters:
          type: boolean
        AllowedRequesters:
          items:
            type: string
          type: array
        FullScan:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        IncrementalScan:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        ThresholdCheck:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        CAType:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        AuthCertificate:
          $ref: '#/components/schemas/Models.CertificateAuthorities.CertificateAuthorityAuthCertificate'
        EnforceUniqueDN:
          type: boolean
        LastScan:
          readOnly: true
          type: string
      type: object
    Models.KeyfactorAPISecret:
      example:
        Parameters:
          key: Parameters
        SecretValue: SecretValue
        Provider: 3
      properties:
        SecretValue:
          type: string
        Parameters:
          additionalProperties:
            type: string
          type: object
        Provider:
          format: int32
          type: integer
      type: object
    Models.CertificateAuthorities.CertificateAuthorityAuthCertificate:
      example:
        IssuerDN: IssuerDN
        ExpirationDate: 2000-01-23T04:56:07.000+00:00
        Thumbprint: Thumbprint
        IssuedDN: IssuedDN
      properties:
        IssuedDN:
          nullable: true
          type: string
        IssuerDN:
          nullable: true
          type: string
        Thumbprint:
          type: string
        ExpirationDate:
          format: date-time
          type: string
      type: object
    Models.QueryModels.PagedCertificateAuthorityQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.CertificateAuthorities.CertificateAuthorityRequest:
      properties:
        Id:
          format: int32
          type: integer
        LogicalName:
          type: string
        HostName:
          type: string
        Delegate:
          type: boolean
        DelegateEnrollment:
          type: boolean
        ForestRoot:
          type: string
        ConfigurationTenant:
          type: string
        Remote:
          type: boolean
        Agent:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Standalone:
          type: boolean
        MonitorThresholds:
          type: boolean
        IssuanceMax:
          format: int32
          type: integer
        IssuanceMin:
          format: int32
          type: integer
        FailureMax:
          format: int32
          type: integer
        RFCEnforcement:
          type: boolean
        Properties:
          type: string
        AllowedEnrollmentTypes:
          enum:
          - 0
          - 1
          - 2
          - 4
          format: int32
          type: integer
        KeyRetention:
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          type: integer
        KeyRetentionDays:
          format: int32
          type: integer
        ExplicitCredentials:
          type: boolean
        SubscriberTerms:
          type: boolean
        ExplicitUser:
          type: string
        ExplicitPassword:
          $ref: '#/components/schemas/Models.KeyfactorAPISecret'
        UseAllowedRequesters:
          type: boolean
        AllowedRequesters:
          items:
            type: string
          type: array
        FullScan:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        IncrementalScan:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        ThresholdCheck:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        AuthCertificatePassword:
          $ref: '#/components/schemas/Models.KeyfactorAPISecret'
        AuthCertificate:
          $ref: '#/components/schemas/Models.KeyfactorAPISecret'
        CAType:
          enum:
          - 0
          - 1
          format: int32
          type: integer
        EnforceUniqueDN:
          type: boolean
      type: object
    KeyfactorApi.Models.CertificateAuthorities.CertificateAuthorityTestResponse:
      description: A DTO for CA tests.
      example:
        Message: Message
        Success: true
      properties:
        Success:
          description: Whether the test succeeded or failed.
          type: boolean
        Message:
          description: The message returned by the test.
          type: string
      type: object
    Models.CRLRequestModel:
      properties:
        CertificateAuthorityLogicalName:
          type: string
        CertificateAuthorityHostName:
          type: string
      required:
      - CertificateAuthorityLogicalName
      type: object
    Models.CertificateQuery:
      example:
        Favorite: true
        Description: Description
        Automated: true
        DuplicationField: 6
        Content: Content
        ShowOnDashboard: true
        Id: 0
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Description:
          type: string
        Automated:
          type: boolean
        Content:
          type: string
        DuplicationField:
          enum:
          - 0
          - 1
          - 2
          - 4
          format: int32
          type: integer
        ShowOnDashboard:
          type: boolean
        Favorite:
          type: boolean
      type: object
    Models.PagedQuery:
      description: A query result set with parameters to define the format of records
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.CertificateCollections.CertificateCollectionUpdateRequest:
      properties:
        Id:
          format: int32
          type: integer
        Name:
          maxLength: 100
          minLength: 0
          type: string
        Description:
          maxLength: 1000
          minLength: 0
          type: string
        Query:
          type: string
        DuplicationField:
          enum:
          - 0
          - 1
          - 2
          - 4
          format: int32
          type: integer
        ShowOnDashboard:
          type: boolean
        Favorite:
          type: boolean
      required:
      - Id
      - Name
      type: object
    KeyfactorApi.Models.CertificateCollections.CertificateCollectionResponse:
      example:
        Favorite: true
        Description: Description
        Query: Query
        DuplicationField: 6
        Content: Content
        ShowOnDashboard: true
        Id: 0
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Description:
          type: string
        Content:
          readOnly: true
          type: string
        Query:
          type: string
        DuplicationField:
          enum:
          - 0
          - 1
          - 2
          - 4
          format: int32
          type: integer
        ShowOnDashboard:
          type: boolean
        Favorite:
          type: boolean
      type: object
    KeyfactorApi.Models.CertificateCollections.CertificateCollectionCreateRequest:
      properties:
        CopyFromId:
          format: int32
          type: integer
        Id:
          format: int32
          type: integer
        Name:
          maxLength: 100
          minLength: 0
          type: string
        Description:
          maxLength: 1000
          minLength: 0
          type: string
        Query:
          type: string
        DuplicationField:
          enum:
          - 0
          - 1
          - 2
          - 4
          format: int32
          type: integer
        ShowOnDashboard:
          type: boolean
        Favorite:
          type: boolean
      required:
      - Name
      type: object
    KeyfactorApi.Models.CertificateCollections.CertificateCollectionCopyRequest:
      properties:
        CopyFromId:
          format: int32
          type: integer
        Name:
          maxLength: 100
          minLength: 0
          type: string
        Description:
          maxLength: 1000
          minLength: 0
          type: string
        Query:
          type: string
        DuplicationField:
          enum:
          - 0
          - 1
          - 2
          - 4
          format: int32
          type: integer
        ShowOnDashboard:
          type: boolean
        Favorite:
          type: boolean
      required:
      - CopyFromId
      - Name
      type: object
    Models.CollectionRolePermissions:
      properties:
        RoleId:
          format: int32
          type: integer
        Permissions:
          items:
            type: string
          type: array
      type: object
    Models.QueryModels.PagedCertificateStoreQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.ReenrollmentStatus:
      properties:
        Data:
          type: boolean
        AgentId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Message:
          type: string
        JobProperties:
          type: string
        CustomAliasAllowed:
          format: int32
          type: integer
        EntryParameters:
          items:
            $ref: '#/components/schemas/Models.CertificateStoreTypes.CertificateStoreTypeEntryParameter'
          type: array
      type: object
    Models.CertificateStoreTypes.CertificateStoreTypeEntryParameter:
      example:
        RequiredWhen:
          HasPrivateKey: false
          OnAdd: false
          OnRemove: false
          OnReenrollment: false
        DefaultValue: DefaultValue
        Options: Options
        Type: 2
        DependsOn: DependsOn
        DisplayName: DisplayName
        StoreTypeId: 5
        Name: Name
      properties:
        StoreTypeId:
          format: int32
          type: integer
        Name:
          type: string
        DisplayName:
          type: string
        Type:
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          type: integer
        RequiredWhen:
          additionalProperties:
            type: boolean
          example:
            HasPrivateKey: false
            OnAdd: false
            OnRemove: false
            OnReenrollment: false
          type: object
        DependsOn:
          type: string
        DefaultValue:
          type: string
        Options:
          type: string
      type: object
    Models.CertificateStores.CertificateStoreUpdateRequest:
      properties:
        Id:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        ContainerId:
          format: int32
          type: integer
        CreateIfMissing:
          type: boolean
        Properties:
          type: string
        AgentId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        InventorySchedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        Password:
          $ref: '#/components/schemas/Models.KeyfactorAPISecret'
      type: object
    Models.CertificateStores.CertificateStoreCreateRequest:
      properties:
        ContainerId:
          format: int32
          type: integer
        ClientMachine:
          type: string
        Storepath:
          type: string
        CertStoreType:
          format: int32
          type: integer
        CreateIfMissing:
          type: boolean
        Properties:
          type: string
        AgentId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        AgentAssigned:
          type: boolean
        InventorySchedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        Password:
          $ref: '#/components/schemas/Models.KeyfactorAPISecret'
      type: object
    Models.QueryModels.PagedCertificateStoreInventoryQuery:
      properties:
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: "Field by which the results should be sorted (OperationStart,\
            \ OperationEnd, UserName)"
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.CertificateStoreInventory:
      example:
        Parameters:
          key: "{}"
        Certificates:
        - IssuerDN: IssuerDN
          SerialNumber: SerialNumber
          Thumbprint: Thumbprint
          Metadata:
            key: "{}"
          SigningAlgorithm: SigningAlgorithm
          IssuedDN: IssuedDN
          Id: 0
          NotBefore: 2000-01-23T04:56:07.000+00:00
          NotAfter: 2000-01-23T04:56:07.000+00:00
          CertStoreInventoryItemId: 6
        - IssuerDN: IssuerDN
          SerialNumber: SerialNumber
          Thumbprint: Thumbprint
          Metadata:
            key: "{}"
          SigningAlgorithm: SigningAlgorithm
          IssuedDN: IssuedDN
          Id: 0
          NotBefore: 2000-01-23T04:56:07.000+00:00
          NotAfter: 2000-01-23T04:56:07.000+00:00
          CertStoreInventoryItemId: 6
        Name: Name
      properties:
        Name:
          type: string
        Certificates:
          items:
            $ref: '#/components/schemas/Models.CertificateStoreInventoryCertificates'
          type: array
        Parameters:
          additionalProperties:
            properties: {}
            type: object
          type: object
      type: object
    Models.CertificateStoreInventoryCertificates:
      example:
        IssuerDN: IssuerDN
        SerialNumber: SerialNumber
        Thumbprint: Thumbprint
        Metadata:
          key: "{}"
        SigningAlgorithm: SigningAlgorithm
        IssuedDN: IssuedDN
        Id: 0
        NotBefore: 2000-01-23T04:56:07.000+00:00
        NotAfter: 2000-01-23T04:56:07.000+00:00
        CertStoreInventoryItemId: 6
      properties:
        Id:
          format: int32
          type: integer
        IssuedDN:
          nullable: true
          type: string
        SerialNumber:
          type: string
        NotBefore:
          format: date-time
          type: string
        NotAfter:
          format: date-time
          type: string
        SigningAlgorithm:
          type: string
        IssuerDN:
          nullable: true
          type: string
        Thumbprint:
          type: string
        CertStoreInventoryItemId:
          format: int32
          type: integer
        Metadata:
          additionalProperties:
            properties: {}
            type: object
          type: object
      type: object
    Models.QueryModels.PagedCertificateStoreServerQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.CertificateStoreUpdateServerRequest:
      properties:
        Id:
          format: int32
          type: integer
        Username:
          $ref: '#/components/schemas/Models.KeyfactorAPISecret'
        Password:
          $ref: '#/components/schemas/Models.KeyfactorAPISecret'
        UseSSL:
          type: boolean
        Name:
          type: string
        Container:
          format: int32
          type: integer
      required:
      - Id
      - Name
      - Password
      - UseSSL
      - Username
      type: object
    Models.CertificateStoreServerResponse:
      example:
        ServerType: 6
        UseSSL: true
        Id: 0
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        UseSSL:
          type: boolean
        ServerType:
          format: int32
          type: integer
        Name:
          type: string
      type: object
    Models.CertificateStoreCreateServerRequest:
      properties:
        Username:
          $ref: '#/components/schemas/Models.KeyfactorAPISecret'
        Password:
          $ref: '#/components/schemas/Models.KeyfactorAPISecret'
        UseSSL:
          type: boolean
        ServerType:
          format: int32
          type: integer
        Name:
          type: string
        Container:
          format: int32
          type: integer
      required:
      - Name
      - Password
      - ServerType
      - UseSSL
      - Username
      type: object
    Models.CertStoreNewPasswordRequest:
      description: NewPassword must be provided and be of type string or KeyfactorAPISecret.
      example:
        CertStoreId: 00000000-0000-0000-0000-000000000000
        NewPassword:
          SecretValue: <string password>
          Parameters:
            <optional PAM parameters key>: <optional PAM parameters value
          Provider: 0
      properties:
        CertStoreId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        NewPassword:
          properties: {}
          type: object
      required:
      - CertStoreId
      - NewPassword
      type: object
    Models.DiscoveryJobRequest:
      properties:
        ClientMachine:
          type: string
        AgentId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Type:
          format: int32
          type: integer
        JobExecutionTimestamp:
          format: date-time
          type: string
        Dirs:
          type: string
        IgnoredDirs:
          type: string
        Extensions:
          type: string
        NamePatterns:
          type: string
        SymLinks:
          type: boolean
        Compatibility:
          type: boolean
        ServerUsername:
          $ref: '#/components/schemas/Models.KeyfactorAPISecret'
        ServerPassword:
          $ref: '#/components/schemas/Models.KeyfactorAPISecret'
        ServerUseSsl:
          type: boolean
      required:
      - Type
      type: object
    Models.ContainerAssignment:
      properties:
        CertStoreContainerId:
          format: int32
          type: integer
        NewContainerName:
          type: string
        NewContainerType:
          format: int32
          type: integer
        KeystoreIds:
          items:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
          type: array
      required:
      - KeystoreIds
      type: object
    KeyfactorApi.Models.CertificateStores.CertificateStoreApproveRequest:
      properties:
        Id:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        ContainerId:
          format: int32
          type: integer
        CertStoreType:
          format: int32
          type: integer
        Properties:
          type: string
        Password:
          $ref: '#/components/schemas/Models.KeyfactorAPISecret'
      type: object
    Models.CertStoresSchedule:
      properties:
        StoreIds:
          items:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
          type: array
        Schedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
      required:
      - StoreIds
      type: object
    KeyfactorApi.Models.CertificateStores.ReenrollmentRequest:
      properties:
        KeystoreId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        SubjectName:
          type: string
        AgentGuid:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Alias:
          type: string
        JobProperties:
          additionalProperties:
            properties: {}
            type: object
          type: object
        CertificateAuthority:
          type: string
        CertificateTemplate:
          type: string
      type: object
    KeyfactorApi.Models.CertificateStores.AddCertificateRequest:
      properties:
        CertificateId:
          format: int32
          type: integer
        CertificateStores:
          items:
            $ref: '#/components/schemas/Models.CertificateStoreEntry'
          type: array
        Schedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        CollectionId:
          format: int32
          type: integer
      required:
      - CertificateId
      - CertificateStores
      - Schedule
      type: object
    Models.CertificateStoreEntry:
      properties:
        CertificateStoreId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Alias:
          type: string
        JobFields:
          additionalProperties:
            properties: {}
            type: object
          type: object
        Overwrite:
          type: boolean
        EntryPassword:
          $ref: '#/components/schemas/Models.KeyfactorAPISecret'
        PfxPassword:
          description: The PFX password.
          type: string
        IncludePrivateKey:
          type: boolean
      required:
      - CertificateStoreId
      type: object
    KeyfactorApi.Models.CertificateStores.RemoveCertificateRequest:
      properties:
        CertificateStores:
          items:
            $ref: '#/components/schemas/Models.CertificateLocationSpecifier'
          type: array
        Schedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        CollectionId:
          format: int32
          type: integer
      required:
      - CertificateStores
      - Schedule
      type: object
    Models.CertificateLocationSpecifier:
      properties:
        Alias:
          type: string
        CertificateStoreId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        JobFields:
          additionalProperties:
            properties: {}
            type: object
          type: object
      type: object
    Models.QueryModels.PagedCertificateStoreContainerQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.CertificateStoreContainerListResponse:
      example:
        StoreCount: 1
        Schedule: Schedule
        OverwriteSchedules: true
        Id: 0
        CertStoreType: 6
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        OverwriteSchedules:
          type: boolean
        Schedule:
          type: string
        CertStoreType:
          format: int32
          type: integer
        StoreCount:
          format: int32
          type: integer
      type: object
    Models.CertificateStore:
      properties:
        Id:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        DisplayName:
          readOnly: true
          type: string
        ContainerId:
          format: int32
          type: integer
        ClientMachine:
          type: string
        Storepath:
          type: string
        CertStoreInventoryJobId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        CertStoreType:
          format: int32
          type: integer
        Approved:
          type: boolean
        CreateIfMissing:
          type: boolean
        Properties:
          type: string
        AgentId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        AgentAssigned:
          type: boolean
        ContainerName:
          type: string
        InventorySchedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        ReenrollmentStatus:
          $ref: '#/components/schemas/Models.ReenrollmentStatus'
        SetNewPasswordAllowed:
          type: boolean
        Password:
          type: string
      type: object
    KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeResponse:
      example:
        PowerShell: true
        CustomAliasAllowed: 3
        ImportType: 6
        JobProperties:
        - JobProperties
        - JobProperties
        StorePathValue: StorePathValue
        Capability: Capability
        StorePathType: StorePathType
        DiscoveryJobType: 00000000-0000-0000-0000-000000000000
        ShortName: ShortName
        LocalStore: true
        Properties:
        - DefaultValue: DefaultValue
          Type: 5
          DependsOn: DependsOn
          Required: true
          DisplayName: DisplayName
          StoreTypeId: 1
          Name: Name
        - DefaultValue: DefaultValue
          Type: 5
          DependsOn: DependsOn
          Required: true
          DisplayName: DisplayName
          StoreTypeId: 1
          Name: Name
        ServerRegistration: 2
        Name: Name
        EnrollmentJobType: 00000000-0000-0000-0000-000000000000
        StoreType: 0
        EntryParameters:
        - RequiredWhen:
            HasPrivateKey: false
            OnAdd: false
            OnRemove: false
            OnReenrollment: false
          DefaultValue: DefaultValue
          Options: Options
          Type: 2
          DependsOn: DependsOn
          DisplayName: DisplayName
          StoreTypeId: 5
          Name: Name
        - RequiredWhen:
            HasPrivateKey: false
            OnAdd: false
            OnRemove: false
            OnReenrollment: false
          DefaultValue: DefaultValue
          Options: Options
          Type: 2
          DependsOn: DependsOn
          DisplayName: DisplayName
          StoreTypeId: 5
          Name: Name
        SupportedOperations:
          Add: true
          Create: true
          Discovery: true
          Enrollment: true
          Remove: true
        BlueprintAllowed: true
        InventoryEndpoint: InventoryEndpoint
        PrivateKeyAllowed: 9
        PasswordOptions:
          StoreRequired: true
          EntrySupported: true
          Style: 7
        ServerRequired: true
        InventoryJobType: 00000000-0000-0000-0000-000000000000
        ManagementJobType: 00000000-0000-0000-0000-000000000000
      properties:
        Name:
          type: string
        ShortName:
          type: string
        Capability:
          type: string
        StoreType:
          format: int32
          type: integer
        ImportType:
          format: int32
          type: integer
        LocalStore:
          type: boolean
        SupportedOperations:
          $ref: '#/components/schemas/Models.CertStoreTypeSupportedOperations'
        Properties:
          items:
            $ref: '#/components/schemas/Models.CertificateStoreTypeProperty'
          type: array
        EntryParameters:
          items:
            $ref: '#/components/schemas/Models.CertificateStoreTypes.CertificateStoreTypeEntryParameter'
          type: array
        PasswordOptions:
          $ref: '#/components/schemas/Models.CertStoreTypePasswordOptions'
        StorePathType:
          type: string
        StorePathValue:
          type: string
        PrivateKeyAllowed:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        JobProperties:
          items:
            type: string
          readOnly: true
          type: array
        ServerRequired:
          type: boolean
        PowerShell:
          type: boolean
        BlueprintAllowed:
          type: boolean
        CustomAliasAllowed:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        ServerRegistration:
          format: int32
          type: integer
        InventoryEndpoint:
          type: string
        InventoryJobType:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        ManagementJobType:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        DiscoveryJobType:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        EnrollmentJobType:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
      type: object
    Models.CertStoreTypeSupportedOperations:
      example:
        Add: true
        Create: true
        Discovery: true
        Enrollment: true
        Remove: true
      properties:
        Add:
          type: boolean
        Create:
          type: boolean
        Discovery:
          type: boolean
        Enrollment:
          type: boolean
        Remove:
          type: boolean
      type: object
    Models.CertificateStoreTypeProperty:
      example:
        DefaultValue: DefaultValue
        Type: 5
        DependsOn: DependsOn
        Required: true
        DisplayName: DisplayName
        StoreTypeId: 1
        Name: Name
      properties:
        StoreTypeId:
          format: int32
          type: integer
        Name:
          type: string
        DisplayName:
          type: string
        Type:
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          type: integer
        DependsOn:
          type: string
        DefaultValue:
          type: string
        Required:
          type: boolean
      type: object
    Models.CertStoreTypePasswordOptions:
      example:
        StoreRequired: true
        EntrySupported: true
        Style: 7
      properties:
        EntrySupported:
          type: boolean
        StoreRequired:
          type: boolean
        Style:
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeUpdateRequest:
      properties:
        StoreType:
          format: int32
          type: integer
        Name:
          type: string
        ShortName:
          maxLength: 10
          minLength: 0
          type: string
        Capability:
          maxLength: 220
          minLength: 0
          type: string
        LocalStore:
          type: boolean
        SupportedOperations:
          $ref: '#/components/schemas/Models.CertStoreTypeSupportedOperations'
        Properties:
          items:
            $ref: '#/components/schemas/Models.CertificateStoreTypeProperty'
          type: array
        PasswordOptions:
          $ref: '#/components/schemas/Models.CertStoreTypePasswordOptions'
        StorePathType:
          type: string
        StorePathValue:
          type: string
        PrivateKeyAllowed:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        ServerRequired:
          type: boolean
        PowerShell:
          type: boolean
        BlueprintAllowed:
          type: boolean
        CustomAliasAllowed:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        EntryParameters:
          items:
            $ref: '#/components/schemas/Models.CertificateStoreTypes.CertificateStoreTypeEntryParameter'
          type: array
      required:
      - Name
      - ShortName
      - StoreType
      type: object
    KeyfactorApi.Models.CertificateStoresTypes.CertificateStoreTypeCreationRequest:
      properties:
        Name:
          type: string
        ShortName:
          maxLength: 10
          minLength: 0
          type: string
        Capability:
          maxLength: 220
          minLength: 0
          type: string
        LocalStore:
          type: boolean
        SupportedOperations:
          $ref: '#/components/schemas/Models.CertStoreTypeSupportedOperations'
        Properties:
          items:
            $ref: '#/components/schemas/Models.CertificateStoreTypeProperty'
          type: array
        PasswordOptions:
          $ref: '#/components/schemas/Models.CertStoreTypePasswordOptions'
        StorePathType:
          type: string
        StorePathValue:
          type: string
        PrivateKeyAllowed:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        ServerRequired:
          type: boolean
        PowerShell:
          type: boolean
        BlueprintAllowed:
          type: boolean
        CustomAliasAllowed:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        ServerRegistration:
          format: int32
          type: integer
        InventoryEndpoint:
          type: string
        InventoryJobTypeId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        ManagementJobTypeId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        DiscoveryJobTypeId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        EnrollmentJobTypeId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        EntryParameters:
          items:
            $ref: '#/components/schemas/Models.CertificateStoreTypes.CertificateStoreTypeEntryParameter'
          type: array
      required:
      - Name
      - ShortName
      type: object
    Models.CSRGenerationResponseModel:
      example:
        CSRText: CSRText
        CSRFilePath: CSRFilePath
      properties:
        CSRFilePath:
          type: string
        CSRText:
          type: string
      type: object
    Models.QueryModels.PagedPendingCSRQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.PendingCSRResponse:
      example:
        CSR: CSR
        RequestTime: 2000-01-23T04:56:07.000+00:00
        Id: 0
        Subject:
        - Subject
        - Subject
      properties:
        Id:
          format: int32
          type: integer
        CSR:
          type: string
        RequestTime:
          format: date-time
          type: string
        Subject:
          items:
            type: string
          type: array
      type: object
    Models.Enrollment.CSRGenerationRequest:
      properties:
        Subject:
          description: Subject for the requested certificate
          type: string
        KeyType:
          description: "Certificate key type [RSA, ECC]"
          type: string
        KeyLength:
          description: "Size of the certificate key (ex: RSA 1024, 2048, 4096/ECC\
            \ 256, 384, 521)"
          format: int32
          type: integer
        Template:
          type: string
        SANs:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
      required:
      - KeyLength
      - KeyType
      - Subject
      type: object
    Models.CSRContents:
      example:
        CSR: <base64-encoded CSR>
      properties:
        CSR:
          type: string
      required:
      - CSR
      type: object
    KeyfactorApi.Models.OrchestratorJobs.JobTypeResponse:
      example:
        Description: Description
        JobTypeFields:
        - DefaultValue: DefaultValue
          Type: 0
          Required: true
          Name: Name
        - DefaultValue: DefaultValue
          Type: 0
          Required: true
          Name: Name
        Id: 00000000-0000-0000-0000-000000000000
        JobTypeName: JobTypeName
      properties:
        Id:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        JobTypeName:
          type: string
        Description:
          type: string
        JobTypeFields:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.JobTypeFieldResponse'
          type: array
      type: object
    KeyfactorApi.Models.OrchestratorJobs.JobTypeFieldResponse:
      example:
        DefaultValue: DefaultValue
        Type: 0
        Required: true
        Name: Name
      properties:
        Name:
          type: string
        Type:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          format: int32
          type: integer
        DefaultValue:
          type: string
        Required:
          type: boolean
      type: object
    Models.OrchestratorJobs.JobTypeUpdateRequest:
      properties:
        Id:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        JobTypeName:
          type: string
        Description:
          type: string
        JobTypeFields:
          items:
            $ref: '#/components/schemas/Models.OrchestratorJobs.JobTypeFieldRequest'
          type: array
      required:
      - Id
      - JobTypeName
      type: object
    Models.OrchestratorJobs.JobTypeFieldRequest:
      properties:
        Name:
          type: string
        Type:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          format: int32
          type: integer
        DefaultValue:
          type: string
        Required:
          type: boolean
      required:
      - Name
      - Type
      type: object
    Models.OrchestratorJobs.JobTypeCreateRequest:
      properties:
        JobTypeName:
          type: string
        Description:
          type: string
        JobTypeFields:
          items:
            $ref: '#/components/schemas/Models.OrchestratorJobs.JobTypeFieldRequest'
          type: array
      required:
      - JobTypeName
      type: object
    KeyfactorApi.Models.Alerts.Denied.DeniedAlertDefinitionResponse:
      example:
        EventHandlerParameters:
        - DefaultValue: DefaultValue
          ParameterType: ParameterType
          Id: 5
          Key: Key
        - DefaultValue: DefaultValue
          ParameterType: ParameterType
          Id: 5
          Key: Key
        Message: Message
        Recipients:
        - Recipients
        - Recipients
        DisplayName: DisplayName
        Id: 0
        RegisteredEventHandler:
          DisplayName: DisplayName
          UseHandler: true
          Id: 1
        Subject: Subject
        Template:
          ConfigurationTenant: ConfigurationTenant
          DisplayName: DisplayName
          Id: 6
          ForestRoot: ForestRoot
      properties:
        Id:
          format: int32
          type: integer
        DisplayName:
          type: string
        Subject:
          type: string
        Message:
          type: string
        Recipients:
          items:
            type: string
          type: array
        Template:
          $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertTemplate.AlertTemplateResponse'
        RegisteredEventHandler:
          $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.RegisteredEventHandlerResponse'
        EventHandlerParameters:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.EventHandlerParameterResponse'
          type: array
      type: object
    KeyfactorApi.Models.Alerts.AlertTemplate.AlertTemplateResponse:
      example:
        ConfigurationTenant: ConfigurationTenant
        DisplayName: DisplayName
        Id: 6
        ForestRoot: ForestRoot
      properties:
        Id:
          format: int32
          type: integer
        DisplayName:
          type: string
        ForestRoot:
          type: string
        ConfigurationTenant:
          type: string
      type: object
    KeyfactorApi.Models.EventHandler.RegisteredEventHandlerResponse:
      example:
        DisplayName: DisplayName
        UseHandler: true
        Id: 1
      properties:
        Id:
          format: int32
          type: integer
        DisplayName:
          type: string
        UseHandler:
          type: boolean
      type: object
    KeyfactorApi.Models.EventHandler.EventHandlerParameterResponse:
      example:
        DefaultValue: DefaultValue
        ParameterType: ParameterType
        Id: 5
        Key: Key
      properties:
        Id:
          format: int32
          type: integer
        Key:
          type: string
        DefaultValue:
          type: string
        ParameterType:
          type: string
      type: object
    Models.QueryModels.PagedDeniedAlertQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Alerts.Denied.DeniedAlertUpdateRequest:
      properties:
        Id:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        DisplayName:
          type: string
        Subject:
          type: string
        Message:
          type: string
        TemplateId:
          format: int32
          type: integer
        RegisteredEventHandler:
          $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.RegisteredEventHandlerRequest'
        Recipients:
          items:
            type: string
          type: array
        EventHandlerParameters:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.EventHandlerParameterRequest'
          type: array
      required:
      - DisplayName
      - Message
      - Subject
      type: object
    KeyfactorApi.Models.EventHandler.RegisteredEventHandlerRequest:
      properties:
        Id:
          format: int32
          type: integer
        UseHandler:
          type: boolean
      required:
      - Id
      - UseHandler
      type: object
    KeyfactorApi.Models.EventHandler.EventHandlerParameterRequest:
      properties:
        Key:
          type: string
        DefaultValue:
          type: string
        ParameterType:
          type: string
      required:
      - DefaultValue
      - Key
      - ParameterType
      type: object
    KeyfactorApi.Models.Alerts.Denied.DeniedAlertCreationRequest:
      properties:
        DisplayName:
          type: string
        Subject:
          type: string
        Message:
          type: string
        TemplateId:
          format: int32
          type: integer
        RegisteredEventHandler:
          $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.RegisteredEventHandlerRequest'
        Recipients:
          items:
            type: string
          type: array
        EventHandlerParameters:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.EventHandlerParameterRequest'
          type: array
      required:
      - DisplayName
      - Message
      - Subject
      type: object
    KeyfactorApi.Models.Templates.TemplateEnrollmentSettingsResponse:
      example:
        TemplateRegexes:
        - Regex: Regex
          Error: Error
          SubjectPart: SubjectPart
        - Regex: Regex
          Error: Error
          SubjectPart: SubjectPart
        TemplateDefaults:
        - Value: Value
          SubjectPart: SubjectPart
        - Value: Value
          SubjectPart: SubjectPart
        TemplatePolicy:
          ECCValidCurves:
          - ECCValidCurves
          - ECCValidCurves
          AllowWildcards: true
          AllowKeyReuse: true
          RSAValidKeySizes:
          - 0
          - 0
          RFCEnforcement: true
      properties:
        TemplateRegexes:
          description: The regular expressions to use for validation during enrollment.
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Templates.TemplateEnrollmentRegexResponse'
          type: array
        TemplateDefaults:
          description: The default values to use during enrollment.
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Templates.TemplateEnrollmentDefaultResponse'
          type: array
        TemplatePolicy:
          $ref: '#/components/schemas/KeyfactorApi.Models.Templates.TemplateEnrollmentPolicyResponse'
      type: object
    KeyfactorApi.Models.Templates.TemplateEnrollmentRegexResponse:
      example:
        Regex: Regex
        Error: Error
        SubjectPart: SubjectPart
      properties:
        SubjectPart:
          description: The subject part to apply the regular expression to.
          type: string
        Regex:
          description: The regular expression to apply to the subject part.
          type: string
        Error:
          description: The error message to show when the regex validation fails.
          type: string
      type: object
    KeyfactorApi.Models.Templates.TemplateEnrollmentDefaultResponse:
      example:
        Value: Value
        SubjectPart: SubjectPart
      properties:
        SubjectPart:
          description: The subject part to apply the default to.
          type: string
        Value:
          description: The value to apply by default.
          type: string
      type: object
    KeyfactorApi.Models.Templates.TemplateEnrollmentPolicyResponse:
      example:
        ECCValidCurves:
        - ECCValidCurves
        - ECCValidCurves
        AllowWildcards: true
        AllowKeyReuse: true
        RSAValidKeySizes:
        - 0
        - 0
        RFCEnforcement: true
      properties:
        RSAValidKeySizes:
          description: The allowed RSA key sizes.
          items:
            format: int32
            type: integer
          type: array
        ECCValidCurves:
          description: The allowed ECC curves.
          items:
            type: string
          type: array
        AllowKeyReuse:
          description: Whether or not keys can be reused.
          type: boolean
        AllowWildcards:
          description: Whether or not wildcards can be used.
          type: boolean
        RFCEnforcement:
          description: Whether or not RFC 2818 compliance should be enforced.
          type: boolean
      type: object
    Core.Models.Enrollment.EnrollmentTemplateCAResponse:
      example:
        StandaloneCAs:
        - SubscriberTerms: true
          Name: Name
          RFCEnforcement: true
        - SubscriberTerms: true
          Name: Name
          RFCEnforcement: true
        Templates:
        - EnrollmentFields:
          - Options:
            - Options
            - Options
            DataType: 1
            Id: 6
            Name: Name
          - Options:
            - Options
            - Options
            DataType: 1
            Id: 6
            Name: Name
          KeyType: KeyType
          Regexes:
          - Regex: Regex
            Error: Error
            SubjectPart: SubjectPart
            TemplateId: 7
          - Regex: Regex
            Error: Error
            SubjectPart: SubjectPart
            TemplateId: 7
          Curve: Curve
          RequiresApproval: true
          ExtendedKeyUsages:
          - DisplayName: DisplayName
            Id: 9
            Oid: Oid
          - DisplayName: DisplayName
            Id: 9
            Oid: Oid
          Name: Name
          MetadataFields:
          - Validation: Validation
            DefaultValue: DefaultValue
            Message: Message
            MetadataId: 5
            Enrollment: 2
            Id: 5
          - Validation: Validation
            DefaultValue: DefaultValue
            Message: Message
            MetadataId: 5
            Enrollment: 2
            Id: 5
          CAs:
          - SubscriberTerms: true
            Name: Name
            RFCEnforcement: true
          - SubscriberTerms: true
            Name: Name
            RFCEnforcement: true
          DisplayName: DisplayName
          Forest: Forest
          Id: 0
          KeySize: KeySize
          RFCEnforcement: true
        - EnrollmentFields:
          - Options:
            - Options
            - Options
            DataType: 1
            Id: 6
            Name: Name
          - Options:
            - Options
            - Options
            DataType: 1
            Id: 6
            Name: Name
          KeyType: KeyType
          Regexes:
          - Regex: Regex
            Error: Error
            SubjectPart: SubjectPart
            TemplateId: 7
          - Regex: Regex
            Error: Error
            SubjectPart: SubjectPart
            TemplateId: 7
          Curve: Curve
          RequiresApproval: true
          ExtendedKeyUsages:
          - DisplayName: DisplayName
            Id: 9
            Oid: Oid
          - DisplayName: DisplayName
            Id: 9
            Oid: Oid
          Name: Name
          MetadataFields:
          - Validation: Validation
            DefaultValue: DefaultValue
            Message: Message
            MetadataId: 5
            Enrollment: 2
            Id: 5
          - Validation: Validation
            DefaultValue: DefaultValue
            Message: Message
            MetadataId: 5
            Enrollment: 2
            Id: 5
          CAs:
          - SubscriberTerms: true
            Name: Name
            RFCEnforcement: true
          - SubscriberTerms: true
            Name: Name
            RFCEnforcement: true
          DisplayName: DisplayName
          Forest: Forest
          Id: 0
          KeySize: KeySize
          RFCEnforcement: true
      properties:
        Templates:
          items:
            $ref: '#/components/schemas/Core.Models.Enrollment.EnrollmentTemplate'
          type: array
        StandaloneCAs:
          items:
            $ref: '#/components/schemas/Core.Models.Enrollment.EnrollmentCA'
          type: array
      type: object
    Core.Models.Enrollment.EnrollmentTemplate:
      example:
        EnrollmentFields:
        - Options:
          - Options
          - Options
          DataType: 1
          Id: 6
          Name: Name
        - Options:
          - Options
          - Options
          DataType: 1
          Id: 6
          Name: Name
        KeyType: KeyType
        Regexes:
        - Regex: Regex
          Error: Error
          SubjectPart: SubjectPart
          TemplateId: 7
        - Regex: Regex
          Error: Error
          SubjectPart: SubjectPart
          TemplateId: 7
        Curve: Curve
        RequiresApproval: true
        ExtendedKeyUsages:
        - DisplayName: DisplayName
          Id: 9
          Oid: Oid
        - DisplayName: DisplayName
          Id: 9
          Oid: Oid
        Name: Name
        MetadataFields:
        - Validation: Validation
          DefaultValue: DefaultValue
          Message: Message
          MetadataId: 5
          Enrollment: 2
          Id: 5
        - Validation: Validation
          DefaultValue: DefaultValue
          Message: Message
          MetadataId: 5
          Enrollment: 2
          Id: 5
        CAs:
        - SubscriberTerms: true
          Name: Name
          RFCEnforcement: true
        - SubscriberTerms: true
          Name: Name
          RFCEnforcement: true
        DisplayName: DisplayName
        Forest: Forest
        Id: 0
        KeySize: KeySize
        RFCEnforcement: true
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        DisplayName:
          type: string
        Forest:
          type: string
        KeySize:
          type: string
        KeyType:
          type: string
        RequiresApproval:
          type: boolean
        RFCEnforcement:
          type: boolean
        CAs:
          items:
            $ref: '#/components/schemas/Core.Models.Enrollment.EnrollmentCA'
          type: array
        EnrollmentFields:
          items:
            $ref: '#/components/schemas/Models.TemplateEnrollmentField'
          type: array
        MetadataFields:
          items:
            $ref: '#/components/schemas/Models.TemplateMetadataField'
          type: array
        Regexes:
          items:
            $ref: '#/components/schemas/Models.TemplateRegex'
          type: array
        ExtendedKeyUsages:
          items:
            $ref: '#/components/schemas/Models.ExtendedKeyUsage'
          type: array
        Curve:
          nullable: true
          type: string
      type: object
    Core.Models.Enrollment.EnrollmentCA:
      example:
        SubscriberTerms: true
        Name: Name
        RFCEnforcement: true
      properties:
        Name:
          type: string
        RFCEnforcement:
          type: boolean
        SubscriberTerms:
          type: boolean
      type: object
    Models.TemplateEnrollmentField:
      example:
        Options:
        - Options
        - Options
        DataType: 1
        Id: 6
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Options:
          items:
            type: string
          type: array
        DataType:
          enum:
          - 1
          - 2
          format: int32
          type: integer
      type: object
    Models.TemplateMetadataField:
      example:
        Validation: Validation
        DefaultValue: DefaultValue
        Message: Message
        MetadataId: 5
        Enrollment: 2
        Id: 5
      properties:
        Id:
          format: int32
          type: integer
        DefaultValue:
          type: string
        MetadataId:
          format: int32
          type: integer
        Validation:
          type: string
        Enrollment:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        Message:
          type: string
      type: object
    Models.TemplateRegex:
      example:
        Regex: Regex
        Error: Error
        SubjectPart: SubjectPart
        TemplateId: 7
      properties:
        TemplateId:
          format: int32
          type: integer
        SubjectPart:
          type: string
        Regex:
          type: string
        Error:
          type: string
      type: object
    Models.ExtendedKeyUsage:
      example:
        DisplayName: DisplayName
        Id: 9
        Oid: Oid
      properties:
        Id:
          format: int32
          type: integer
        Oid:
          type: string
        DisplayName:
          type: string
      type: object
    Models.Enrollment.AvailableRenewal:
      example:
        Message: Message
        AvailableRenewalType: 0
      properties:
        AvailableRenewalType:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        Message:
          type: string
      type: object
    Models.Enrollment.CSREnrollmentRequest:
      example:
        CSR: <base64-encoded CSR>
        CertificateAuthority: <host\logical>
        IncludeChain: false
        Timestamp: 2022-09-22T18:09:16.7196785Z
        Template: WebServer
        SANs:
          ip4:
          - 192.168.2.2
      properties:
        CSR:
          type: string
        CertificateAuthority:
          type: string
        IncludeChain:
          type: boolean
        Metadata:
          properties: {}
          type: object
        AdditionalEnrollmentFields:
          additionalProperties:
            properties: {}
            type: object
          type: object
        Timestamp:
          format: date-time
          type: string
        Template:
          type: string
        SANs:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
      required:
      - CSR
      type: object
    Models.Enrollment.CSREnrollmentResponse:
      example:
        Metadata:
          key: Metadata
        CertificateInformation:
          IssuerDN: IssuerDN
          SerialNumber: SerialNumber
          KeyfactorID: 0
          DispositionMessage: DispositionMessage
          Thumbprint: Thumbprint
          Certificates:
          - Certificates
          - Certificates
          KeyfactorRequestId: 6
          RequestDisposition: RequestDisposition
          EnrollmentContext:
            key: EnrollmentContext
      properties:
        CertificateInformation:
          $ref: '#/components/schemas/Models.Pkcs10CertificateResponse'
        Metadata:
          additionalProperties:
            type: string
          type: object
      type: object
    Models.Pkcs10CertificateResponse:
      example:
        IssuerDN: IssuerDN
        SerialNumber: SerialNumber
        KeyfactorID: 0
        DispositionMessage: DispositionMessage
        Thumbprint: Thumbprint
        Certificates:
        - Certificates
        - Certificates
        KeyfactorRequestId: 6
        RequestDisposition: RequestDisposition
        EnrollmentContext:
          key: EnrollmentContext
      properties:
        SerialNumber:
          type: string
        IssuerDN:
          nullable: true
          type: string
        Thumbprint:
          type: string
        KeyfactorID:
          description: "The integer ID of the certificate in the keyfactor database,\
            \ if Issued"
          format: int32
          type: integer
        Certificates:
          items:
            type: string
          type: array
        KeyfactorRequestId:
          description: "The integer id of the certificate request in the Keyfactor\
            \ database, if one exists."
          format: int32
          type: integer
        RequestDisposition:
          type: string
        DispositionMessage:
          type: string
        EnrollmentContext:
          additionalProperties:
            type: string
          nullable: true
          type: object
      type: object
    Models.Enrollment.PFXEnrollmentRequest:
      example:
        CustomFriendlyName: <custom name>
        Password: <pfx password>
        PopulateMissingValuesFromAD: false
        Subject: <certificate subject>
        IncludeChain: true
        RenewalCertificateId: 0
        CertificateAuthority: <host>\<logical>
        Timestamp: 2022-09-22T18:09:16.7196785Z
        Template: <template short name>
        SANs:
          ip4:
          - 192.168.2.2
      properties:
        CustomFriendlyName:
          type: string
        Password:
          type: string
        PopulateMissingValuesFromAD:
          type: boolean
        Subject:
          type: string
        IncludeChain:
          type: boolean
        RenewalCertificateId:
          format: int32
          type: integer
        CertificateAuthority:
          type: string
        Metadata:
          properties: {}
          type: object
        AdditionalEnrollmentFields:
          additionalProperties:
            properties: {}
            type: object
          type: object
        Timestamp:
          format: date-time
          type: string
        Template:
          type: string
        SANs:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
      type: object
    Models.Enrollment.PFXEnrollmentResponse:
      example:
        Metadata:
          key: Metadata
        CertificateInformation:
          IssuerDN: IssuerDN
          SerialNumber: SerialNumber
          KeyfactorId: 0
          Pkcs12Blob: Pkcs12Blob
          DispositionMessage: DispositionMessage
          Thumbprint: Thumbprint
          KeyfactorRequestId: 6
          RequestDisposition: RequestDisposition
          EnrollmentContext:
            key: EnrollmentContext
          Password: Password
      properties:
        CertificateInformation:
          $ref: '#/components/schemas/Models.Pkcs12CertificateResponse'
        Metadata:
          additionalProperties:
            type: string
          type: object
      type: object
    Models.Pkcs12CertificateResponse:
      example:
        IssuerDN: IssuerDN
        SerialNumber: SerialNumber
        KeyfactorId: 0
        Pkcs12Blob: Pkcs12Blob
        DispositionMessage: DispositionMessage
        Thumbprint: Thumbprint
        KeyfactorRequestId: 6
        RequestDisposition: RequestDisposition
        EnrollmentContext:
          key: EnrollmentContext
        Password: Password
      properties:
        SerialNumber:
          type: string
        IssuerDN:
          nullable: true
          type: string
        Thumbprint:
          type: string
        KeyfactorId:
          format: int32
          type: integer
        Pkcs12Blob:
          type: string
        Password:
          type: string
        KeyfactorRequestId:
          description: "The integer id of the certificate request in the Keyfactor\
            \ database, if one exists."
          format: int32
          type: integer
        RequestDisposition:
          type: string
        DispositionMessage:
          type: string
        EnrollmentContext:
          additionalProperties:
            type: string
          nullable: true
          type: object
      type: object
    KeyfactorApi.Models.Enrollment.EnrollmentManagementRequest:
      example:
        Stores:
        - StoreId: 00000000-0000-0000-0000-000000000000
          Alias: <store alias>
          Overwrite: true
          Properties:
            Netscalervserver: thevalue
        CertificateId: 0
        RequestId: 0
        Password: <pfx password>
        JobTime: 2022-09-23T18:09:16.7196785Z
      properties:
        Stores:
          description: "The stores to add the certificate to. Values in this collection\
            \ will take precedence over values in {Models.Enrollment.SpecificEnrollmentManagementRequest.StoreTypes}."
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Enrollment.ManagementStoreRequest'
          type: array
        StoreIds:
          items:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
          type: array
        StoreTypes:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Enrollment.ManagementStoreTypeRequest'
          type: array
        CertificateId:
          format: int32
          type: integer
        RequestId:
          format: int32
          type: integer
        Password:
          type: string
        JobTime:
          format: date-time
          type: string
      required:
      - Password
      type: object
    KeyfactorApi.Models.Enrollment.ManagementStoreRequest:
      properties:
        StoreId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Alias:
          type: string
        Overwrite:
          type: boolean
        Properties:
          additionalProperties:
            properties: {}
            type: object
          type: object
      type: object
    KeyfactorApi.Models.Enrollment.ManagementStoreTypeRequest:
      properties:
        StoreTypeId:
          format: int32
          type: integer
        Alias:
          type: string
        Overwrite:
          type: boolean
        Properties:
          items:
            properties: {}
            type: object
          type: array
      type: object
    KeyfactorAPI.Models.Enrollment.EnrollmentManagementResponse:
      example:
        SuccessfulStores:
        - 00000000-0000-0000-0000-000000000000
        - 00000000-0000-0000-0000-000000000000
        FailedStores:
        - 00000000-0000-0000-0000-000000000000
        - 00000000-0000-0000-0000-000000000000
      properties:
        SuccessfulStores:
          items:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
          type: array
        FailedStores:
          items:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
          type: array
      type: object
    Models.Enrollment.ExistingEnrollmentManagementRequest:
      example:
        ExistingCertificateId: 0
        CertificateId: 0
        RequestId: 0
        Password: <pfx password>
        JobTime: 2022-09-23T18:09:16.7196785Z
      properties:
        ExistingCertificateId:
          format: int32
          type: integer
        CertificateId:
          format: int32
          type: integer
        RequestId:
          format: int32
          type: integer
        Password:
          type: string
        JobTime:
          format: date-time
          type: string
      type: object
    Models.Enrollment.RenewalRequest:
      example:
        CertificateId: 0
        Thumbprint: <hex thumbprint>
        CertificateAuthority: <host>\<logical>
        Template: <template name>
        Timestamp: 2022-09-22T14:09:16.7346109-04:00
      properties:
        CertificateId:
          format: int32
          type: integer
        Thumbprint:
          type: string
        CertificateAuthority:
          type: string
        Template:
          type: string
        Timestamp:
          format: date-time
          type: string
      type: object
    Models.Enrollment.RenewalResponse:
      example:
        IssuerDN: IssuerDN
        KeyfactorId: 0
        SerialNumber: SerialNumber
        DispositionMessage: DispositionMessage
        Thumbprint: Thumbprint
        KeyfactorRequestId: 6
        RequestDisposition: RequestDisposition
        Password: Password
      properties:
        KeyfactorId:
          format: int32
          type: integer
        KeyfactorRequestId:
          format: int32
          type: integer
        Thumbprint:
          type: string
        SerialNumber:
          type: string
        IssuerDN:
          nullable: true
          type: string
        RequestDisposition:
          type: string
        DispositionMessage:
          type: string
        Password:
          type: string
      type: object
    KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertDefinitionResponse:
      example:
        EventHandlerParameters:
        - DefaultValue: DefaultValue
          ParameterType: ParameterType
          Id: 5
          Key: Key
        - DefaultValue: DefaultValue
          ParameterType: ParameterType
          Id: 5
          Key: Key
        Message: Message
        ExpirationWarningDays: 6
        Recipients:
        - Recipients
        - Recipients
        DisplayName: DisplayName
        Id: 0
        RegisteredEventHandler:
          DisplayName: DisplayName
          UseHandler: true
          Id: 1
        CertificateQuery:
          Id: 1
          Name: Name
        Subject: Subject
      properties:
        Id:
          format: int32
          type: integer
        DisplayName:
          type: string
        Subject:
          type: string
        Message:
          type: string
        ExpirationWarningDays:
          format: int32
          type: integer
        Recipients:
          items:
            type: string
          type: array
        CertificateQuery:
          $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertCertificateQuery.AlertCertificateQueryResponse'
        RegisteredEventHandler:
          $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.RegisteredEventHandlerResponse'
        EventHandlerParameters:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.EventHandlerParameterResponse'
          type: array
      type: object
    KeyfactorApi.Models.Alerts.AlertCertificateQuery.AlertCertificateQueryResponse:
      example:
        Id: 1
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
      type: object
    KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleResponse:
      example:
        Schedule:
          Daily:
            Time: 2000-01-23T04:56:07.000+00:00
          Monthly:
            Time: 2000-01-23T04:56:07.000+00:00
            Day: 5
          Weekly:
            Days:
            - 1
            - 1
            Time: 2000-01-23T04:56:07.000+00:00
          Immediate: true
          ExactlyOnce:
            Time: 2000-01-23T04:56:07.000+00:00
          Interval:
            Minutes: 6
      properties:
        Schedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
      type: object
    KeyfactorApi.Models.Alerts.AlertSchedule.AlertScheduleRequest:
      properties:
        Schedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
      type: object
    Models.QueryModels.PagedExpirationAlertQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertUpdateRequest:
      properties:
        Id:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        DisplayName:
          type: string
        Subject:
          type: string
        Message:
          type: string
        ExpirationWarningDays:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        CertificateQueryId:
          format: int32
          type: integer
        RegisteredEventHandler:
          $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.RegisteredEventHandlerRequest'
        Recipients:
          items:
            type: string
          type: array
        EventHandlerParameters:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.EventHandlerParameterRequest'
          type: array
      required:
      - DisplayName
      - ExpirationWarningDays
      - Message
      - Subject
      type: object
    KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertCreationRequest:
      properties:
        DisplayName:
          type: string
        Subject:
          type: string
        Message:
          type: string
        ExpirationWarningDays:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        CertificateQueryId:
          format: int32
          type: integer
        RegisteredEventHandler:
          $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.RegisteredEventHandlerRequest'
        Recipients:
          items:
            type: string
          type: array
        EventHandlerParameters:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.EventHandlerParameterRequest'
          type: array
      required:
      - DisplayName
      - ExpirationWarningDays
      - Message
      - Subject
      type: object
    KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertTestRequest:
      properties:
        AlertId:
          format: int32
          type: integer
        EvaluationDate:
          format: date-time
          type: string
        PreviousEvaluationDate:
          format: date-time
          type: string
        SendAlerts:
          type: boolean
      type: object
    KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertTestResponse:
      example:
        AlertBuildResult: 6
        ExpirationAlerts:
        - CARow: 0
          CAName: CAName
          Message: Message
          Recipients:
          - Recipients
          - Recipients
          IssuedCN: IssuedCN
          SendDate: SendDate
          Expiry: Expiry
          Subject: Subject
        - CARow: 0
          CAName: CAName
          Message: Message
          Recipients:
          - Recipients
          - Recipients
          IssuedCN: IssuedCN
          SendDate: SendDate
          Expiry: Expiry
          Subject: Subject
      properties:
        ExpirationAlerts:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertResponse'
          type: array
        AlertBuildResult:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertResponse:
      example:
        CARow: 0
        CAName: CAName
        Message: Message
        Recipients:
        - Recipients
        - Recipients
        IssuedCN: IssuedCN
        SendDate: SendDate
        Expiry: Expiry
        Subject: Subject
      properties:
        CAName:
          type: string
        CARow:
          format: int64
          type: integer
        IssuedCN:
          nullable: true
          type: string
        Expiry:
          type: string
        Subject:
          type: string
        Message:
          type: string
        Recipients:
          items:
            type: string
          type: array
        SendDate:
          type: string
      type: object
    KeyfactorApi.Models.Alerts.Expiration.ExpirationAlertTestAllRequest:
      properties:
        EvaluationDate:
          format: date-time
          type: string
        PreviousEvaluationDate:
          format: date-time
          type: string
        SendAlerts:
          type: boolean
      type: object
    KeyfactorApi.Models.Alerts.Issued.IssuedAlertDefinitionResponse:
      example:
        EventHandlerParameters:
        - DefaultValue: DefaultValue
          ParameterType: ParameterType
          Id: 5
          Key: Key
        - DefaultValue: DefaultValue
          ParameterType: ParameterType
          Id: 5
          Key: Key
        Message: Message
        Recipients:
        - Recipients
        - Recipients
        DisplayName: DisplayName
        Id: 0
        RegisteredEventHandler:
          DisplayName: DisplayName
          UseHandler: true
          Id: 1
        Subject: Subject
        Template:
          ConfigurationTenant: ConfigurationTenant
          DisplayName: DisplayName
          Id: 6
          ForestRoot: ForestRoot
      properties:
        Id:
          format: int32
          type: integer
        DisplayName:
          type: string
        Subject:
          type: string
        Message:
          type: string
        Recipients:
          items:
            type: string
          type: array
        Template:
          $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertTemplate.AlertTemplateResponse'
        RegisteredEventHandler:
          $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.RegisteredEventHandlerResponse'
        EventHandlerParameters:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.EventHandlerParameterResponse'
          type: array
      type: object
    Models.QueryModels.PagedIssuedAlertQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Alerts.Issued.IssuedAlertUpdateRequest:
      properties:
        Id:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        DisplayName:
          type: string
        Subject:
          type: string
        Message:
          type: string
        TemplateId:
          format: int32
          type: integer
        RegisteredEventHandler:
          $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.RegisteredEventHandlerRequest'
        Recipients:
          items:
            type: string
          type: array
        EventHandlerParameters:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.EventHandlerParameterRequest'
          type: array
      required:
      - DisplayName
      - Message
      - Subject
      type: object
    KeyfactorApi.Models.Alerts.Issued.IssuedAlertCreationRequest:
      properties:
        DisplayName:
          type: string
        Subject:
          type: string
        Message:
          type: string
        TemplateId:
          format: int32
          type: integer
        RegisteredEventHandler:
          $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.RegisteredEventHandlerRequest'
        Recipients:
          items:
            type: string
          type: array
        EventHandlerParameters:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.EventHandlerParameterRequest'
          type: array
      required:
      - DisplayName
      - Message
      - Subject
      type: object
    Models.SSH.Keys.UnmanagedKeyResponse:
      example:
        Fingerprint: Fingerprint
        PrivateKey: PrivateKey
        Email: Email
        LogonCount: 1
        KeyType: KeyType
        Username: Username
        PublicKey: PublicKey
        DiscoveredDate: 2000-01-23T04:56:07.000+00:00
        Comments:
        - Comments
        - Comments
        Id: 0
        KeyLength: 6
      properties:
        Id:
          format: int32
          type: integer
        Fingerprint:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        PublicKey:
          type: string
        PrivateKey:
          type: string
        KeyType:
          type: string
        KeyLength:
          format: int32
          type: integer
        DiscoveredDate:
          format: date-time
          type: string
        Email:
          type: string
        Comments:
          items:
            type: string
          type: array
        Username:
          type: string
        LogonCount:
          format: int32
          type: integer
      type: object
    Models.SSH.Keys.KeyResponse:
      example:
        CreationDate: 2000-01-23T04:56:07.000+00:00
        Fingerprint: Fingerprint
        PrivateKey: PrivateKey
        Email: Email
        LogonCount: 1
        KeyType: KeyType
        PublicKey: PublicKey
        Comments:
        - Comments
        - Comments
        StaleDate: 2000-01-23T04:56:07.000+00:00
        Id: 0
        KeyLength: 6
      properties:
        Id:
          format: int32
          type: integer
        Fingerprint:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        PublicKey:
          type: string
        PrivateKey:
          type: string
        KeyType:
          type: string
        KeyLength:
          format: int32
          type: integer
        CreationDate:
          format: date-time
          type: string
        StaleDate:
          format: date-time
          type: string
        Email:
          type: string
        Comments:
          items:
            type: string
          type: array
        LogonCount:
          format: int32
          type: integer
      type: object
    Models.SSH.Keys.KeyUpdateRequest:
      properties:
        Id:
          format: int32
          type: integer
        Email:
          type: string
        Comment:
          type: string
      required:
      - Email
      - Id
      type: object
    Models.SSH.Keys.KeyGenerationRequest:
      properties:
        KeyType:
          type: string
        PrivateKeyFormat:
          type: string
        KeyLength:
          format: int32
          type: integer
        Email:
          type: string
        Password:
          type: string
        Comment:
          type: string
      required:
      - Email
      - KeyLength
      - KeyType
      - Password
      - PrivateKeyFormat
      type: object
    Models.QueryModels.PagedSSHUnmanagedKeyQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertDefinitionResponse:
      example:
        EventHandlerParameters:
        - DefaultValue: DefaultValue
          ParameterType: ParameterType
          Id: 5
          Key: Key
        - DefaultValue: DefaultValue
          ParameterType: ParameterType
          Id: 5
          Key: Key
        Message: Message
        RotationWarningDays: 6
        DisplayName: DisplayName
        Recipient: Recipient
        Id: 0
        RegisteredEventHandler:
          DisplayName: DisplayName
          UseHandler: true
          Id: 1
        Subject: Subject
      properties:
        Id:
          format: int32
          type: integer
        DisplayName:
          type: string
        Subject:
          type: string
        Message:
          type: string
        Recipient:
          type: string
        RotationWarningDays:
          format: int32
          type: integer
        RegisteredEventHandler:
          $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.RegisteredEventHandlerResponse'
        EventHandlerParameters:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.EventHandlerParameterResponse'
          type: array
      type: object
    Models.QueryModels.PagedKeyRotationAlertQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertUpdateRequest:
      properties:
        Id:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        DisplayName:
          type: string
        Subject:
          type: string
        Message:
          type: string
        RotationWarningDays:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        RegisteredEventHandler:
          $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.RegisteredEventHandlerRequest'
        EventHandlerParameters:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.EventHandlerParameterRequest'
          type: array
      required:
      - DisplayName
      - Message
      - RotationWarningDays
      - Subject
      type: object
    KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertCreationRequest:
      properties:
        DisplayName:
          type: string
        Subject:
          type: string
        Message:
          type: string
        RotationWarningDays:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        RegisteredEventHandler:
          $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.RegisteredEventHandlerRequest'
        EventHandlerParameters:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.EventHandlerParameterRequest'
          type: array
      required:
      - DisplayName
      - Message
      - RotationWarningDays
      - Subject
      type: object
    KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertTestRequest:
      properties:
        AlertId:
          format: int32
          type: integer
        EvaluationDate:
          format: date-time
          type: string
        PreviousEvaluationDate:
          format: date-time
          type: string
        SendAlerts:
          type: boolean
      type: object
    KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertTestResponse:
      example:
        AlertBuildResult: 0
        KeyRotationAlerts:
        - Message: Message
          Recipient: Recipient
          Subject: Subject
        - Message: Message
          Recipient: Recipient
          Subject: Subject
      properties:
        KeyRotationAlerts:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertResponse'
          type: array
        AlertBuildResult:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertResponse:
      example:
        Message: Message
        Recipient: Recipient
        Subject: Subject
      properties:
        Subject:
          type: string
        Message:
          type: string
        Recipient:
          type: string
      type: object
    KeyfactorApi.Models.Alerts.KeyRotation.KeyRotationAlertTestAllRequest:
      properties:
        EvaluationDate:
          format: date-time
          type: string
        PreviousEvaluationDate:
          format: date-time
          type: string
        SendAlerts:
          type: boolean
      type: object
    KeyfactorApi.Models.License.LicenseResponse:
      example:
        KeyfactorVersion: KeyfactorVersion
        LicenseData:
          IssuedDate: 2000-01-23T04:56:07.000+00:00
          ExpirationDate: 2000-01-23T04:56:07.000+00:00
          Customer:
            Id: Id
            Name: Name
          LicensedProducts:
          - LicensedFeatures:
            - FeatureID: FeatureID
              ExpirationDate: 2000-01-23T04:56:07.000+00:00
              DisplayName: DisplayName
              Enabled: true
              Quantity: 0
            - FeatureID: FeatureID
              ExpirationDate: 2000-01-23T04:56:07.000+00:00
              DisplayName: DisplayName
              Enabled: true
              Quantity: 0
            MinorRev: MinorRev
            MajorRev: MajorRev
            DisplayName: DisplayName
            ProductId: ProductId
          - LicensedFeatures:
            - FeatureID: FeatureID
              ExpirationDate: 2000-01-23T04:56:07.000+00:00
              DisplayName: DisplayName
              Enabled: true
              Quantity: 0
            - FeatureID: FeatureID
              ExpirationDate: 2000-01-23T04:56:07.000+00:00
              DisplayName: DisplayName
              Enabled: true
              Quantity: 0
            MinorRev: MinorRev
            MajorRev: MajorRev
            DisplayName: DisplayName
            ProductId: ProductId
          LicenseId: LicenseId
      properties:
        KeyfactorVersion:
          readOnly: true
          type: string
        LicenseData:
          $ref: '#/components/schemas/KeyfactorApi.Models.License.LicenseResponse.License'
      type: object
    KeyfactorApi.Models.License.LicenseResponse.License:
      example:
        IssuedDate: 2000-01-23T04:56:07.000+00:00
        ExpirationDate: 2000-01-23T04:56:07.000+00:00
        Customer:
          Id: Id
          Name: Name
        LicensedProducts:
        - LicensedFeatures:
          - FeatureID: FeatureID
            ExpirationDate: 2000-01-23T04:56:07.000+00:00
            DisplayName: DisplayName
            Enabled: true
            Quantity: 0
          - FeatureID: FeatureID
            ExpirationDate: 2000-01-23T04:56:07.000+00:00
            DisplayName: DisplayName
            Enabled: true
            Quantity: 0
          MinorRev: MinorRev
          MajorRev: MajorRev
          DisplayName: DisplayName
          ProductId: ProductId
        - LicensedFeatures:
          - FeatureID: FeatureID
            ExpirationDate: 2000-01-23T04:56:07.000+00:00
            DisplayName: DisplayName
            Enabled: true
            Quantity: 0
          - FeatureID: FeatureID
            ExpirationDate: 2000-01-23T04:56:07.000+00:00
            DisplayName: DisplayName
            Enabled: true
            Quantity: 0
          MinorRev: MinorRev
          MajorRev: MajorRev
          DisplayName: DisplayName
          ProductId: ProductId
        LicenseId: LicenseId
      properties:
        LicenseId:
          type: string
        Customer:
          $ref: '#/components/schemas/KeyfactorApi.Models.License.LicenseResponse.LicensedCustomer'
        IssuedDate:
          format: date-time
          type: string
        ExpirationDate:
          format: date-time
          type: string
        LicensedProducts:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.License.LicenseResponse.LicensedProduct'
          type: array
      type: object
    KeyfactorApi.Models.License.LicenseResponse.LicensedCustomer:
      example:
        Id: Id
        Name: Name
      properties:
        Name:
          type: string
        Id:
          type: string
      type: object
    KeyfactorApi.Models.License.LicenseResponse.LicensedProduct:
      example:
        LicensedFeatures:
        - FeatureID: FeatureID
          ExpirationDate: 2000-01-23T04:56:07.000+00:00
          DisplayName: DisplayName
          Enabled: true
          Quantity: 0
        - FeatureID: FeatureID
          ExpirationDate: 2000-01-23T04:56:07.000+00:00
          DisplayName: DisplayName
          Enabled: true
          Quantity: 0
        MinorRev: MinorRev
        MajorRev: MajorRev
        DisplayName: DisplayName
        ProductId: ProductId
      properties:
        ProductId:
          type: string
        DisplayName:
          type: string
        MajorRev:
          type: string
        MinorRev:
          type: string
        LicensedFeatures:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.License.LicenseResponse.LicensedFeature'
          type: array
      type: object
    KeyfactorApi.Models.License.LicenseResponse.LicensedFeature:
      example:
        FeatureID: FeatureID
        ExpirationDate: 2000-01-23T04:56:07.000+00:00
        DisplayName: DisplayName
        Enabled: true
        Quantity: 0
      properties:
        FeatureID:
          type: string
        DisplayName:
          type: string
        Enabled:
          type: boolean
        Quantity:
          format: int32
          type: integer
        ExpirationDate:
          format: date-time
          type: string
      type: object
    Models.SSH.Logons.LogonResponse:
      example:
        Server:
          UnderManagement: true
          GroupName: GroupName
          Owner:
            Username: Username
            LogonIds:
            - 5
            - 5
            Id: 1
            Key:
              CreationDate: 2000-01-23T04:56:07.000+00:00
              Fingerprint: Fingerprint
              PrivateKey: PrivateKey
              Email: Email
              LogonCount: 1
              KeyType: KeyType
              PublicKey: PublicKey
              Comments:
              - Comments
              - Comments
              StaleDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              KeyLength: 6
          SyncSchedule:
            Daily:
              Time: 2000-01-23T04:56:07.000+00:00
            Monthly:
              Time: 2000-01-23T04:56:07.000+00:00
              Day: 5
            Weekly:
              Days:
              - 1
              - 1
              Time: 2000-01-23T04:56:07.000+00:00
            Immediate: true
            ExactlyOnce:
              Time: 2000-01-23T04:56:07.000+00:00
            Interval:
              Minutes: 6
          Port: 5
          Hostname: Hostname
          ServerGroupId: 00000000-0000-0000-0000-000000000000
          Id: 6
          AgentId: 00000000-0000-0000-0000-000000000000
          Orchestrator: Orchestrator
        Username: Username
        Access:
        - Username: Username
          LogonIds:
          - 5
          - 5
          Id: 1
          Key:
            CreationDate: 2000-01-23T04:56:07.000+00:00
            Fingerprint: Fingerprint
            PrivateKey: PrivateKey
            Email: Email
            LogonCount: 1
            KeyType: KeyType
            PublicKey: PublicKey
            Comments:
            - Comments
            - Comments
            StaleDate: 2000-01-23T04:56:07.000+00:00
            Id: 0
            KeyLength: 6
        - Username: Username
          LogonIds:
          - 5
          - 5
          Id: 1
          Key:
            CreationDate: 2000-01-23T04:56:07.000+00:00
            Fingerprint: Fingerprint
            PrivateKey: PrivateKey
            Email: Email
            LogonCount: 1
            KeyType: KeyType
            PublicKey: PublicKey
            Comments:
            - Comments
            - Comments
            StaleDate: 2000-01-23T04:56:07.000+00:00
            Id: 0
            KeyLength: 6
        LastLogon: 2000-01-23T04:56:07.000+00:00
        Id: 0
        KeyCount: 2
      properties:
        Id:
          format: int32
          type: integer
        Username:
          type: string
        LastLogon:
          format: date-time
          type: string
        Server:
          $ref: '#/components/schemas/Models.SSH.Servers.ServerResponse'
        KeyCount:
          format: int32
          type: integer
        Access:
          items:
            $ref: '#/components/schemas/Models.SSH.Users.SshUserResponse'
          type: array
      type: object
    Models.SSH.Servers.ServerResponse:
      example:
        UnderManagement: true
        GroupName: GroupName
        Owner:
          Username: Username
          LogonIds:
          - 5
          - 5
          Id: 1
          Key:
            CreationDate: 2000-01-23T04:56:07.000+00:00
            Fingerprint: Fingerprint
            PrivateKey: PrivateKey
            Email: Email
            LogonCount: 1
            KeyType: KeyType
            PublicKey: PublicKey
            Comments:
            - Comments
            - Comments
            StaleDate: 2000-01-23T04:56:07.000+00:00
            Id: 0
            KeyLength: 6
        SyncSchedule:
          Daily:
            Time: 2000-01-23T04:56:07.000+00:00
          Monthly:
            Time: 2000-01-23T04:56:07.000+00:00
            Day: 5
          Weekly:
            Days:
            - 1
            - 1
            Time: 2000-01-23T04:56:07.000+00:00
          Immediate: true
          ExactlyOnce:
            Time: 2000-01-23T04:56:07.000+00:00
          Interval:
            Minutes: 6
        Port: 5
        Hostname: Hostname
        ServerGroupId: 00000000-0000-0000-0000-000000000000
        Id: 6
        AgentId: 00000000-0000-0000-0000-000000000000
        Orchestrator: Orchestrator
      properties:
        Id:
          format: int32
          type: integer
        AgentId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Hostname:
          type: string
        ServerGroupId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        SyncSchedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        UnderManagement:
          type: boolean
        Owner:
          $ref: '#/components/schemas/Models.SSH.Users.SshUserResponse'
        GroupName:
          type: string
        Orchestrator:
          type: string
        Port:
          format: int32
          type: integer
      type: object
    Models.SSH.Users.SshUserResponse:
      example:
        Username: Username
        LogonIds:
        - 5
        - 5
        Id: 1
        Key:
          CreationDate: 2000-01-23T04:56:07.000+00:00
          Fingerprint: Fingerprint
          PrivateKey: PrivateKey
          Email: Email
          LogonCount: 1
          KeyType: KeyType
          PublicKey: PublicKey
          Comments:
          - Comments
          - Comments
          StaleDate: 2000-01-23T04:56:07.000+00:00
          Id: 0
          KeyLength: 6
      properties:
        Id:
          format: int32
          type: integer
        Key:
          $ref: '#/components/schemas/Models.SSH.Keys.KeyResponse'
        Username:
          type: string
        LogonIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    Models.QueryModels.PagedSSHLogonQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.SSH.Logons.LogonQueryResponse:
      example:
        GroupName: GroupName
        ServerId: 6
        Username: Username
        ServerName: ServerName
        LastLogon: 2000-01-23T04:56:07.000+00:00
        Id: 0
        ServerUnderManagement: true
        KeyCount: 1
      properties:
        Id:
          format: int32
          type: integer
        Username:
          type: string
        LastLogon:
          format: date-time
          type: string
        ServerId:
          format: int32
          type: integer
        ServerName:
          type: string
        GroupName:
          type: string
        KeyCount:
          format: int32
          type: integer
        ServerUnderManagement:
          type: boolean
      type: object
    Models.SSH.Logons.LogonCreationRequest:
      properties:
        Username:
          type: string
        ServerId:
          format: int32
          type: integer
        UserIds:
          items:
            format: int32
            type: integer
          type: array
      required:
      - ServerId
      - Username
      type: object
    Models.SSH.Logons.LogonAccessRequest:
      properties:
        LogonId:
          format: int32
          type: integer
        UserIds:
          items:
            format: int32
            type: integer
          type: array
      required:
      - LogonId
      type: object
    Models.SSH.Access.LogonUserAccessResponse:
      example:
        Users:
        - Username: Username
          LogonIds:
          - 5
          - 5
          Id: 1
          Key:
            CreationDate: 2000-01-23T04:56:07.000+00:00
            Fingerprint: Fingerprint
            PrivateKey: PrivateKey
            Email: Email
            LogonCount: 1
            KeyType: KeyType
            PublicKey: PublicKey
            Comments:
            - Comments
            - Comments
            StaleDate: 2000-01-23T04:56:07.000+00:00
            Id: 0
            KeyLength: 6
        - Username: Username
          LogonIds:
          - 5
          - 5
          Id: 1
          Key:
            CreationDate: 2000-01-23T04:56:07.000+00:00
            Fingerprint: Fingerprint
            PrivateKey: PrivateKey
            Email: Email
            LogonCount: 1
            KeyType: KeyType
            PublicKey: PublicKey
            Comments:
            - Comments
            - Comments
            StaleDate: 2000-01-23T04:56:07.000+00:00
            Id: 0
            KeyLength: 6
        LogonName: LogonName
        LogonId: 0
      properties:
        LogonId:
          format: int32
          type: integer
        LogonName:
          type: string
        Users:
          items:
            $ref: '#/components/schemas/Models.SSH.Users.SshUserResponse'
          type: array
      type: object
    KeyfactorApi.Models.MacEnrollment.MacEnrollmentAPIModel:
      example:
        MetadataValue: MetadataValue
        UseMetadata: true
        Enabled: true
        Id: 0
        MetadataField: MetadataField
        Interval: 6
      properties:
        Id:
          format: int32
          type: integer
        Enabled:
          type: boolean
        Interval:
          format: int32
          type: integer
        UseMetadata:
          type: boolean
        MetadataField:
          type: string
        MetadataValue:
          type: string
      type: object
    Models.MetadataFieldTypeModel:
      example:
        Validation: Validation
        Options: Options
        DefaultValue: DefaultValue
        Description: Description
        DisplayOrder: 5
        Message: Message
        Hint: Hint
        DataType: 6
        Enrollment: 1
        Id: 0
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Description:
          type: string
        DataType:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          format: int32
          type: integer
        Hint:
          type: string
        Validation:
          type: string
        Enrollment:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        Message:
          type: string
        Options:
          type: string
        DefaultValue:
          type: string
        DisplayOrder:
          format: int32
          type: integer
      type: object
    Models.QueryModels.PagedMetadataFieldQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.MetadataField.MetadataFieldUpdateRequest:
      properties:
        Id:
          format: int32
          maximum: 2147483647
          minimum: 0
          type: integer
        Name:
          maxLength: 256
          minLength: 0
          type: string
        Description:
          maxLength: 1024
          minLength: 0
          type: string
        DataType:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          format: int32
          type: integer
        Hint:
          maxLength: 128
          minLength: 0
          type: string
        Validation:
          maxLength: 4000
          minLength: 0
          type: string
        Enrollment:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        Message:
          maxLength: 1024
          minLength: 0
          type: string
        Options:
          type: string
        DefaultValue:
          maxLength: 100
          minLength: 0
          type: string
        DisplayOrder:
          format: int32
          type: integer
      required:
      - DataType
      - Description
      - Id
      - Name
      type: object
    KeyfactorApi.Models.MetadataField.MetadataFieldResponse:
      example:
        Validation: Validation
        Options: Options
        DefaultValue: DefaultValue
        Description: Description
        DisplayOrder: 5
        Message: Message
        Hint: Hint
        DataType: 6
        Enrollment: 1
        Id: 0
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Description:
          type: string
        DataType:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          format: int32
          type: integer
        Hint:
          type: string
        Validation:
          type: string
        Enrollment:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        Message:
          type: string
        Options:
          type: string
        DefaultValue:
          type: string
        DisplayOrder:
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.MetadataField.MetadataFieldCreateRequest:
      properties:
        Name:
          maxLength: 256
          minLength: 0
          type: string
        Description:
          maxLength: 1024
          minLength: 0
          type: string
        DataType:
          enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          format: int32
          type: integer
        Hint:
          maxLength: 128
          minLength: 0
          type: string
        Validation:
          maxLength: 4000
          minLength: 0
          type: string
        Enrollment:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        Message:
          maxLength: 1024
          minLength: 0
          type: string
        Options:
          type: string
        DefaultValue:
          maxLength: 100
          minLength: 0
          type: string
        DisplayOrder:
          format: int32
          type: integer
      required:
      - DataType
      - Description
      - Name
      type: object
    KeyfactorApi.Models.Monitoring.RevocationMonitoringDefinitionResponse:
      example:
        Email:
          Recipients:
          - Recipients
          - Recipients
          WarningDays: 6
          EnableReminder: true
        Schedule:
          Daily:
            Time: 2000-01-23T04:56:07.000+00:00
          Monthly:
            Time: 2000-01-23T04:56:07.000+00:00
            Day: 5
          Weekly:
            Days:
            - 1
            - 1
            Time: 2000-01-23T04:56:07.000+00:00
          Immediate: true
          ExactlyOnce:
            Time: 2000-01-23T04:56:07.000+00:00
          Interval:
            Minutes: 6
        EndpointType: EndpointType
        Dashboard:
          Show: true
          WarningHours: 1
        Id: 0
        OCSPParameters:
          AuthorityName: AuthorityName
          AuthorityNameId: AuthorityNameId
          AuthorityKeyId: AuthorityKeyId
          SampleSerialNumber: SampleSerialNumber
          CertificateAuthorityId: 5
        Name: Name
        Location: Location
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        EndpointType:
          type: string
        Location:
          type: string
        Email:
          $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.EmailResponse'
        Dashboard:
          $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.DashboardResponse'
        Schedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        OCSPParameters:
          $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.OCSPParametersResponse'
      type: object
    KeyfactorApi.Models.Monitoring.EmailResponse:
      example:
        Recipients:
        - Recipients
        - Recipients
        WarningDays: 6
        EnableReminder: true
      properties:
        EnableReminder:
          type: boolean
        WarningDays:
          format: int32
          type: integer
        Recipients:
          items:
            type: string
          type: array
      type: object
    KeyfactorApi.Models.Monitoring.DashboardResponse:
      example:
        Show: true
        WarningHours: 1
      properties:
        Show:
          type: boolean
        WarningHours:
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Monitoring.OCSPParametersResponse:
      example:
        AuthorityName: AuthorityName
        AuthorityNameId: AuthorityNameId
        AuthorityKeyId: AuthorityKeyId
        SampleSerialNumber: SampleSerialNumber
        CertificateAuthorityId: 5
      properties:
        CertificateAuthorityId:
          format: int32
          type: integer
        AuthorityName:
          type: string
        AuthorityNameId:
          type: string
        AuthorityKeyId:
          type: string
        SampleSerialNumber:
          type: string
      type: object
    Models.QueryModels.PagedRevocationMonitoringQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Monitoring.RevocationMonitoringUpdateRequest:
      properties:
        Id:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        Name:
          type: string
        EndpointType:
          type: string
        Location:
          type: string
        Email:
          $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.EmailRequest'
        Dashboard:
          $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.DashboardRequest'
        Schedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        OCSPParameters:
          $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.OCSPParametersRequest'
      required:
      - Dashboard
      - EndpointType
      - Location
      - Name
      type: object
    KeyfactorApi.Models.Monitoring.EmailRequest:
      properties:
        EnableReminder:
          type: boolean
        WarningDays:
          format: int32
          type: integer
        Recipients:
          items:
            type: string
          type: array
      type: object
    KeyfactorApi.Models.Monitoring.DashboardRequest:
      properties:
        Show:
          type: boolean
        WarningHours:
          format: int32
          type: integer
      required:
      - Show
      type: object
    KeyfactorApi.Models.Monitoring.OCSPParametersRequest:
      example:
        CertificateContents: <Certificate Content>
        CertificateAuthorityId: 1
      properties:
        CertificateContents:
          type: string
        CertificateAuthorityId:
          format: int32
          type: integer
        AuthorityName:
          type: string
        AuthorityNameId:
          type: string
        AuthorityKeyId:
          type: string
        SampleSerialNumber:
          type: string
      type: object
    KeyfactorApi.Models.Monitoring.RevocationMonitoringCreationRequest:
      properties:
        Name:
          type: string
        EndpointType:
          type: string
        Location:
          type: string
        Email:
          $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.EmailRequest'
        Dashboard:
          $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.DashboardRequest'
        Schedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        OCSPParameters:
          $ref: '#/components/schemas/KeyfactorApi.Models.Monitoring.OCSPParametersRequest'
      required:
      - Dashboard
      - EndpointType
      - Location
      - Name
      type: object
    KeyfactorApi.Models.Monitoring.RevocationMonitoringAlertTestRequest:
      properties:
        AlertId:
          format: int32
          type: integer
        EvaluationDate:
          format: date-time
          type: string
        SendAlerts:
          type: boolean
      type: object
    KeyfactorApi.Models.Monitoring.RevocationMonitoringAlertTestResponse:
      example:
        AlertBuildResult: 0
        RevocationMonitoringAlerts:
        - Message: Message
          Recipients:
          - Recipients
          - Recipients
          Subject: Subject
        - Message: Message
          Recipients:
          - Recipients
          - Recipients
          Subject: Subject
      properties:
        RevocationMonitoringAlerts:
          items:
            $ref: '#/components/schemas/Models.Monitoring.RevocationMonitoringAlertResponse'
          type: array
        AlertBuildResult:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          format: int32
          type: integer
      type: object
    Models.Monitoring.RevocationMonitoringAlertResponse:
      example:
        Message: Message
        Recipients:
        - Recipients
        - Recipients
        Subject: Subject
      properties:
        Subject:
          type: string
        Message:
          type: string
        Recipients:
          items:
            type: string
          type: array
      type: object
    KeyfactorApi.Models.Monitoring.RevocationMonitoringAlertTestAllRequest:
      properties:
        EvaluationDate:
          format: date-time
          type: string
        SendAlerts:
          type: boolean
      type: object
    KeyfactorApi.Models.OrchestratorJobs.CustomJobResultDataResponse:
      example:
        JobHistoryId: 0
        Data: Data
      properties:
        JobHistoryId:
          format: int64
          type: integer
        Data:
          type: string
      type: object
    Models.QueryModels.PagedAgentJobHistoryQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.CertificateStores.JobHistoryResponse:
      example:
        AgentMachine: AgentMachine
        OperationEnd: 2000-01-23T04:56:07.000+00:00
        Status: 1
        ClientMachine: ClientMachine
        JobType: JobType
        Message: Message
        Schedule:
          Daily:
            Time: 2000-01-23T04:56:07.000+00:00
          Monthly:
            Time: 2000-01-23T04:56:07.000+00:00
            Day: 5
          Weekly:
            Days:
            - 1
            - 1
            Time: 2000-01-23T04:56:07.000+00:00
          Immediate: true
          ExactlyOnce:
            Time: 2000-01-23T04:56:07.000+00:00
          Interval:
            Minutes: 6
        JobHistoryId: 0
        JobId: 00000000-0000-0000-0000-000000000000
        OperationStart: 2000-01-23T04:56:07.000+00:00
        Result: 6
        StorePath: StorePath
      properties:
        JobHistoryId:
          format: int64
          type: integer
        AgentMachine:
          type: string
        JobId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Schedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        JobType:
          type: string
        OperationStart:
          format: date-time
          type: string
        OperationEnd:
          format: date-time
          type: string
        Message:
          type: string
        Result:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          format: int32
          type: integer
        Status:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          format: int32
          type: integer
        StorePath:
          type: string
        ClientMachine:
          type: string
      type: object
    Models.QueryModels.PagedAgentJobQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.OrchestratorJobs.Job:
      example:
        Requested: Requested
        ClientMachine: ClientMachine
        Target: Target
        JobType: JobType
        Schedule:
          Daily:
            Time: 2000-01-23T04:56:07.000+00:00
          Monthly:
            Time: 2000-01-23T04:56:07.000+00:00
            Day: 5
          Weekly:
            Days:
            - 1
            - 1
            Time: 2000-01-23T04:56:07.000+00:00
          Immediate: true
          ExactlyOnce:
            Time: 2000-01-23T04:56:07.000+00:00
          Interval:
            Minutes: 6
        Id: 00000000-0000-0000-0000-000000000000
      properties:
        Id:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        ClientMachine:
          type: string
        Target:
          type: string
        Schedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        Requested:
          type: string
        JobType:
          type: string
      type: object
    Models.OrchestratorJobs.ScheduleJobRequest:
      properties:
        AgentId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        JobTypeName:
          type: string
        Schedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        JobFields:
          additionalProperties:
            type: string
          type: object
      required:
      - AgentId
      - JobTypeName
      type: object
    KeyfactorApi.Models.OrchestratorJobs.JobResponse:
      example:
        RequestTimestamp: 2000-01-23T04:56:07.000+00:00
        JobFields:
        - JobTypeField: JobTypeField
          Value: Value
        - JobTypeField: JobTypeField
          Value: Value
        Schedule:
          Daily:
            Time: 2000-01-23T04:56:07.000+00:00
          Monthly:
            Time: 2000-01-23T04:56:07.000+00:00
            Day: 5
          Weekly:
            Days:
            - 1
            - 1
            Time: 2000-01-23T04:56:07.000+00:00
          Immediate: true
          ExactlyOnce:
            Time: 2000-01-23T04:56:07.000+00:00
          Interval:
            Minutes: 6
        OrchestratorId: 00000000-0000-0000-0000-000000000000
        JobId: 00000000-0000-0000-0000-000000000000
        JobTypeName: JobTypeName
      properties:
        JobId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        OrchestratorId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        JobTypeName:
          type: string
        Schedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        JobFields:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.JobFieldResponse'
          type: array
        RequestTimestamp:
          format: date-time
          type: string
      type: object
    KeyfactorApi.Models.OrchestratorJobs.JobFieldResponse:
      example:
        JobTypeField: JobTypeField
        Value: Value
      properties:
        JobTypeField:
          type: string
        Value:
          type: string
      type: object
    KeyfactorApi.Models.OrchestratorJobs.RescheduleJobRequest:
      description: Class representing orchestrator jobs to be rescheduled
      properties:
        JobAuditIds:
          description: List of orchestrator job audit ids to be rescheduled
          items:
            format: int64
            type: integer
          type: array
        Query:
          description: Query identifying orchestrator jobs to be rescheduled
          type: string
      type: object
    KeyfactorApi.Models.OrchestratorJobs.UnscheduleJobRequest:
      description: Class representing orchestrator jobs to be unscheduled
      properties:
        JobIds:
          description: List of orchestrator job ids to be unscheduled
          items:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
          type: array
        Query:
          description: Query identifying orchestrator jobs to be unscheduled
          type: string
      type: object
    KeyfactorApi.Models.OrchestratorJobs.AcknowledgeJobRequest:
      properties:
        JobAuditIds:
          description: List of orchestrator job audit ids to be acknowledged
          items:
            format: int64
            type: integer
          type: array
        Query:
          description: Query identifying orchestrator jobs to be acknowledged
          type: string
      type: object
    Models.OrchestratorJobs.ScheduleBulkJobRequest:
      properties:
        OrchestratorIds:
          items:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
          type: array
        JobTypeName:
          type: string
        Schedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        JobFields:
          additionalProperties:
            type: string
          type: object
      required:
      - JobTypeName
      - OrchestratorIds
      type: object
    KeyfactorApi.Models.OrchestratorJobs.BulkJobResponse:
      example:
        RequestTimestamp: 2000-01-23T04:56:07.000+00:00
        JobFields:
        - JobTypeField: JobTypeField
          Value: Value
        - JobTypeField: JobTypeField
          Value: Value
        FailedOrchestratorIds:
        - 00000000-0000-0000-0000-000000000000
        - 00000000-0000-0000-0000-000000000000
        Schedule:
          Daily:
            Time: 2000-01-23T04:56:07.000+00:00
          Monthly:
            Time: 2000-01-23T04:56:07.000+00:00
            Day: 5
          Weekly:
            Days:
            - 1
            - 1
            Time: 2000-01-23T04:56:07.000+00:00
          Immediate: true
          ExactlyOnce:
            Time: 2000-01-23T04:56:07.000+00:00
          Interval:
            Minutes: 6
        OrchestratorJobPairs:
        - OrchestratorId: 00000000-0000-0000-0000-000000000000
          JobId: 00000000-0000-0000-0000-000000000000
        - OrchestratorId: 00000000-0000-0000-0000-000000000000
          JobId: 00000000-0000-0000-0000-000000000000
        JobTypeName: JobTypeName
      properties:
        OrchestratorJobPairs:
          items:
            $ref: '#/components/schemas/Models.OrchestratorJobs.BulkOrchestratorJobPair'
          type: array
        FailedOrchestratorIds:
          items:
            example: 00000000-0000-0000-0000-000000000000
            format: uuid
            type: string
          type: array
        JobTypeName:
          type: string
        Schedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        JobFields:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.OrchestratorJobs.JobFieldResponse'
          type: array
        RequestTimestamp:
          format: date-time
          type: string
      type: object
    Models.OrchestratorJobs.BulkOrchestratorJobPair:
      example:
        OrchestratorId: 00000000-0000-0000-0000-000000000000
        JobId: 00000000-0000-0000-0000-000000000000
      properties:
        JobId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        OrchestratorId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
      type: object
    KeyfactorApi.PAM.ProviderTypeCreateRequest:
      properties:
        Name:
          type: string
        Parameters:
          items:
            $ref: '#/components/schemas/KeyfactorApi.PAM.ProviderTypeParameterCreateRequest'
          type: array
      required:
      - Name
      type: object
    KeyfactorApi.PAM.ProviderTypeParameterCreateRequest:
      properties:
        Name:
          type: string
        DisplayName:
          type: string
        DataType:
          enum:
          - 1
          - 2
          format: int32
          type: integer
        InstanceLevel:
          type: boolean
      required:
      - Name
      type: object
    KeyfactorApi.PAM.ProviderTypeResponse:
      example:
        Parameters:
        - DisplayName: DisplayName
          DataType: 6
          InstanceLevel: true
          Id: 0
          Name: Name
        - DisplayName: DisplayName
          DataType: 6
          InstanceLevel: true
          Id: 0
          Name: Name
        Id: 00000000-0000-0000-0000-000000000000
        Name: Name
      properties:
        Id:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Name:
          type: string
        Parameters:
          items:
            $ref: '#/components/schemas/KeyfactorApi.PAM.ProviderTypeParameterResponse'
          type: array
      type: object
    KeyfactorApi.PAM.ProviderTypeParameterResponse:
      example:
        DisplayName: DisplayName
        DataType: 6
        InstanceLevel: true
        Id: 0
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        DisplayName:
          type: string
        DataType:
          enum:
          - 1
          - 2
          format: int32
          type: integer
        InstanceLevel:
          type: boolean
      type: object
    KeyfactorApi.Models.Alerts.Pending.PendingAlertDefinitionResponse:
      example:
        EventHandlerParameters:
        - DefaultValue: DefaultValue
          ParameterType: ParameterType
          Id: 5
          Key: Key
        - DefaultValue: DefaultValue
          ParameterType: ParameterType
          Id: 5
          Key: Key
        Message: Message
        Recipients:
        - Recipients
        - Recipients
        DisplayName: DisplayName
        Id: 0
        RegisteredEventHandler:
          DisplayName: DisplayName
          UseHandler: true
          Id: 1
        Subject: Subject
        Template:
          ConfigurationTenant: ConfigurationTenant
          DisplayName: DisplayName
          Id: 6
          ForestRoot: ForestRoot
      properties:
        Id:
          format: int32
          type: integer
        DisplayName:
          type: string
        Subject:
          type: string
        Message:
          type: string
        Recipients:
          items:
            type: string
          type: array
        Template:
          $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.AlertTemplate.AlertTemplateResponse'
        RegisteredEventHandler:
          $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.RegisteredEventHandlerResponse'
        EventHandlerParameters:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.EventHandlerParameterResponse'
          type: array
      type: object
    Models.QueryModels.PagedPendingAlertQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Alerts.Pending.PendingAlertUpdateRequest:
      properties:
        Id:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        DisplayName:
          type: string
        Subject:
          type: string
        Message:
          type: string
        TemplateId:
          format: int32
          type: integer
        RegisteredEventHandler:
          $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.RegisteredEventHandlerRequest'
        Recipients:
          items:
            type: string
          type: array
        EventHandlerParameters:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.EventHandlerParameterRequest'
          type: array
      required:
      - DisplayName
      - Message
      - Subject
      type: object
    KeyfactorApi.Models.Alerts.Pending.PendingAlertCreationRequest:
      properties:
        DisplayName:
          type: string
        Subject:
          type: string
        Message:
          type: string
        TemplateId:
          format: int32
          type: integer
        RegisteredEventHandler:
          $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.RegisteredEventHandlerRequest'
        Recipients:
          items:
            type: string
          type: array
        EventHandlerParameters:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.EventHandler.EventHandlerParameterRequest'
          type: array
      required:
      - DisplayName
      - Message
      - Subject
      type: object
    KeyfactorApi.Models.Alerts.Pending.PendingAlertTestRequest:
      properties:
        AlertId:
          format: int32
          type: integer
        SendAlerts:
          type: boolean
      type: object
    KeyfactorApi.Models.Alerts.Pending.PendingAlertTestResponse:
      example:
        PendingAlerts:
        - CARequestId: 0
          LogicalName: LogicalName
          Message: Message
          Recipients:
          - Recipients
          - Recipients
          Subject: Subject
          CommonName: CommonName
        - CARequestId: 0
          LogicalName: LogicalName
          Message: Message
          Recipients:
          - Recipients
          - Recipients
          Subject: Subject
          CommonName: CommonName
        AlertBuildResult: 6
      properties:
        PendingAlerts:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Alerts.Pending.PendingAlertResponse'
          type: array
        AlertBuildResult:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Alerts.Pending.PendingAlertResponse:
      example:
        CARequestId: 0
        LogicalName: LogicalName
        Message: Message
        Recipients:
        - Recipients
        - Recipients
        Subject: Subject
        CommonName: CommonName
      properties:
        Subject:
          type: string
        Message:
          type: string
        Recipients:
          items:
            type: string
          type: array
        CARequestId:
          format: int32
          type: integer
        CommonName:
          type: string
        LogicalName:
          type: string
      type: object
    KeyfactorApi.Models.Alerts.Pending.PendingAlertTestAllRequest:
      properties:
        SendAlerts:
          type: boolean
      type: object
    Models.Report:
      example:
        Favorite: true
        Schedules:
        - ReportFormat: ReportFormat
          EmailRecipients:
          - EmailRecipients
          - EmailRecipients
          KeyfactorSchedule:
            Daily:
              Time: 2000-01-23T04:56:07.000+00:00
            Monthly:
              Time: 2000-01-23T04:56:07.000+00:00
              Day: 5
            Weekly:
              Days:
              - 1
              - 1
              Time: 2000-01-23T04:56:07.000+00:00
            Immediate: true
            ExactlyOnce:
              Time: 2000-01-23T04:56:07.000+00:00
            Interval:
              Minutes: 6
          Id: 7
          CertificateCollectionId: 9
          SendReport: true
          RuntimeParameters:
            key: RuntimeParameters
          SaveReport: true
          SaveReportPath: SaveReportPath
        - ReportFormat: ReportFormat
          EmailRecipients:
          - EmailRecipients
          - EmailRecipients
          KeyfactorSchedule:
            Daily:
              Time: 2000-01-23T04:56:07.000+00:00
            Monthly:
              Time: 2000-01-23T04:56:07.000+00:00
              Day: 5
            Weekly:
              Days:
              - 1
              - 1
              Time: 2000-01-23T04:56:07.000+00:00
            Immediate: true
            ExactlyOnce:
              Time: 2000-01-23T04:56:07.000+00:00
            Interval:
              Minutes: 6
          Id: 7
          CertificateCollectionId: 9
          SendReport: true
          RuntimeParameters:
            key: RuntimeParameters
          SaveReport: true
          SaveReportPath: SaveReportPath
        Description: Description
        InNavigator: true
        ReportParameter:
        - DefaultValue: DefaultValue
          ParameterType: 5
          Description: Description
          DisplayOrder: 5
          DisplayName: DisplayName
          ParameterName: ParameterName
          Id: 1
          ParameterVisibility: 2
        - DefaultValue: DefaultValue
          ParameterType: 5
          Description: Description
          DisplayOrder: 5
          DisplayName: DisplayName
          ParameterName: ParameterName
          Id: 1
          ParameterVisibility: 2
        Categories: Categories
        ShortName: ShortName
        RemoveDuplicates: true
        VersionNumber: VersionNumber
        Scheduled: 6
        UsesCollection: true
        ReportPath: ReportPath
        DisplayName: DisplayName
        Id: 0
        AcceptedScheduleFormats:
        - AcceptedScheduleFormats
        - AcceptedScheduleFormats
      properties:
        Id:
          format: int32
          type: integer
        Scheduled:
          format: int32
          type: integer
        DisplayName:
          type: string
        Description:
          type: string
        ReportPath:
          type: string
        VersionNumber:
          type: string
        Categories:
          type: string
        ShortName:
          type: string
        InNavigator:
          type: boolean
        Favorite:
          type: boolean
        RemoveDuplicates:
          type: boolean
        UsesCollection:
          type: boolean
        ReportParameter:
          items:
            $ref: '#/components/schemas/Models.ReportParameters'
          type: array
        Schedules:
          items:
            $ref: '#/components/schemas/Models.ReportSchedule'
          type: array
        AcceptedScheduleFormats:
          items:
            type: string
          type: array
      type: object
    Models.ReportParameters:
      example:
        DefaultValue: DefaultValue
        ParameterType: 5
        Description: Description
        DisplayOrder: 5
        DisplayName: DisplayName
        ParameterName: ParameterName
        Id: 1
        ParameterVisibility: 2
      properties:
        Id:
          format: int32
          type: integer
        ParameterName:
          type: string
        ParameterType:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 19
          - 20
          - 21
          format: int32
          type: integer
        DisplayName:
          type: string
        Description:
          type: string
        DefaultValue:
          type: string
        DisplayOrder:
          format: int32
          type: integer
        ParameterVisibility:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
      type: object
    Models.ReportSchedule:
      example:
        ReportFormat: ReportFormat
        EmailRecipients:
        - EmailRecipients
        - EmailRecipients
        KeyfactorSchedule:
          Daily:
            Time: 2000-01-23T04:56:07.000+00:00
          Monthly:
            Time: 2000-01-23T04:56:07.000+00:00
            Day: 5
          Weekly:
            Days:
            - 1
            - 1
            Time: 2000-01-23T04:56:07.000+00:00
          Immediate: true
          ExactlyOnce:
            Time: 2000-01-23T04:56:07.000+00:00
          Interval:
            Minutes: 6
        Id: 7
        CertificateCollectionId: 9
        SendReport: true
        RuntimeParameters:
          key: RuntimeParameters
        SaveReport: true
        SaveReportPath: SaveReportPath
      properties:
        Id:
          format: int32
          type: integer
        SendReport:
          type: boolean
        SaveReport:
          type: boolean
        SaveReportPath:
          type: string
        ReportFormat:
          type: string
        KeyfactorSchedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        CertificateCollectionId:
          format: int32
          type: integer
        EmailRecipients:
          items:
            type: string
          type: array
        RuntimeParameters:
          additionalProperties:
            type: string
          type: object
      type: object
    Models.CustomReport:
      description: The CustomReport can be used to create and update a custom report.
      example:
        Favorite: true
        Description: Description
        InNavigator: true
        DisplayName: DisplayName
        Id: 0
        CustomURL: CustomURL
      properties:
        CustomURL:
          type: string
        Id:
          format: int32
          type: integer
        DisplayName:
          type: string
        Description:
          type: string
        InNavigator:
          type: boolean
        Favorite:
          type: boolean
      type: object
    Models.ReportParametersRequest:
      properties:
        Id:
          format: int32
          type: integer
        DisplayName:
          type: string
        Description:
          type: string
        DefaultValue:
          type: string
      type: object
    Models.QueryModels.PagedReportQuery:
      properties:
        AmmendedQuery:
          readOnly: true
          type: string
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.ReportRequestModel:
      description: The ReportRequestModel can be used to update a report.
      properties:
        Id:
          format: int32
          type: integer
        InNavigator:
          type: boolean
        Favorite:
          type: boolean
        RemoveDuplicates:
          type: boolean
      type: object
    Models.QueryModels.PagedCustomReportQuery:
      properties:
        AmmendedQuery:
          readOnly: true
          type: string
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.CustomReportUpdateRequest:
      description: The CustomReport can be used to create and update a custom report.
      properties:
        CustomURL:
          type: string
        Id:
          format: int32
          type: integer
        DisplayName:
          type: string
        Description:
          type: string
        InNavigator:
          type: boolean
        Favorite:
          type: boolean
      required:
      - Id
      type: object
    Models.CustomReportCreationRequest:
      description: The CustomReport can be used to create and update a custom report.
      properties:
        CustomURL:
          type: string
        DisplayName:
          type: string
        Description:
          type: string
        InNavigator:
          type: boolean
        Favorite:
          type: boolean
      required:
      - CustomURL
      - Description
      - DisplayName
      type: object
    Models.QueryModels.PagedReportScheduleQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.Security.Identities.SecurityIdentityPermissionsResponse:
      example:
        CollectionPermissions:
        - GrantedByRoles:
          - GrantedByRoles
          - GrantedByRoles
          Permission: Permission
        - GrantedByRoles:
          - GrantedByRoles
          - GrantedByRoles
          Permission: Permission
        Identity: Identity
        SecuredAreaPermissions:
        - GrantedByRoles:
          - GrantedByRoles
          - GrantedByRoles
          Permission: Permission
        - GrantedByRoles:
          - GrantedByRoles
          - GrantedByRoles
          Permission: Permission
        ContainerPermissions:
        - GrantedByRoles:
          - GrantedByRoles
          - GrantedByRoles
          Permission: Permission
        - GrantedByRoles:
          - GrantedByRoles
          - GrantedByRoles
          Permission: Permission
      properties:
        Identity:
          type: string
        SecuredAreaPermissions:
          items:
            $ref: '#/components/schemas/Models.Security.Identities.PermissionRolesPairResponse'
          type: array
        CollectionPermissions:
          items:
            $ref: '#/components/schemas/Models.Security.Identities.PermissionRolesPairResponse'
          type: array
        ContainerPermissions:
          items:
            $ref: '#/components/schemas/Models.Security.Identities.PermissionRolesPairResponse'
          type: array
      type: object
    Models.Security.Identities.PermissionRolesPairResponse:
      example:
        GrantedByRoles:
        - GrantedByRoles
        - GrantedByRoles
        Permission: Permission
      properties:
        Permission:
          type: string
        GrantedByRoles:
          items:
            type: string
          type: array
      type: object
    Models.Security.Identities.SecurityIdentityLookupResponse:
      description: A public DTO representing the result of a security identity lookup.
      example:
        Valid: true
      properties:
        Valid:
          description: Whether or not the identity is valid.
          type: boolean
      type: object
    Models.QueryModels.PagedSecurityIdentityQuery:
      description: Paged query for security identities.
      properties:
        Validate:
          description: Whether to audit the signed xml for every identity requested
            by the query
          type: boolean
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.Security.Identities.SecurityIdentityRequest:
      description: Model for requesting a security identity.
      properties:
        AccountName:
          description: The username of the security identity.
          type: string
      required:
      - AccountName
      type: object
    KeyfactorApi.Models.SecurityRoles.AreaPermissionResponse:
      example:
        Type: Type
        Area: Area
        Permission: Permission
      properties:
        Type:
          type: string
        Area:
          type: string
        Permission:
          type: string
      type: object
    KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.GlobalPermissionResponse:
      example:
        Area: Area
        Permission: Permission
      properties:
        Area:
          type: string
        Permission:
          type: string
      type: object
    KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.GlobalPermissionRequest:
      example:
        Area: AgentManagement
        Permission: Modify
      properties:
        Area:
          type: string
        Permission:
          type: string
      type: object
    KeyfactorApi.Models.SecurityRoles.ContainerPermissionResponse:
      example:
        ContainerId: 0
        Permission: Permission
        Name: Name
      properties:
        ContainerId:
          format: int32
          type: integer
        Name:
          type: string
        Permission:
          type: string
      type: object
    KeyfactorApi.Models.SecurityRoles.ContainerPermissionRequest:
      example:
        ContainerId: 1
        Permission: Read
      properties:
        ContainerId:
          format: int32
          type: integer
        Permission:
          type: string
      type: object
    KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.CollectionPermissionResponse:
      example:
        CollectionId: 0
        Permission: Permission
        Name: Name
      properties:
        CollectionId:
          format: int32
          type: integer
        Name:
          type: string
        Permission:
          type: string
      type: object
    KeyfactorApi.Models.SecurityRolesIdentities.SecurityRoles.CollectionPermissionRequest:
      example:
        CollectionId: 1
        Permission: Recover
      properties:
        CollectionId:
          format: int32
          type: integer
        Permission:
          type: string
      type: object
    KeyfactorApi.Models.SecurityRoles.RoleIdentitiesResponse:
      example:
        Id: 0
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
      type: object
    KeyfactorApi.Models.SecurityRoles.RoleIdentitiesRequest:
      properties:
        Ids:
          items:
            format: int32
            type: integer
          type: array
      type: object
    Models.QueryModels.PagedSecurityRoleQuery:
      description: Paged query for security identities.
      properties:
        Validate:
          description: Whether to audit the signed xml for every role requested by
            the query
          type: boolean
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.Security.SecurityRoles.SecurityRoleUpdateRequest:
      properties:
        Id:
          description: The Id of the security role to update
          format: int32
          type: integer
        Name:
          description: The name of the security role to update
          type: string
        Description:
          description: The description to be used on the updated security role
          type: string
        Enabled:
          description: Whether or not the security role should be enabled
          type: boolean
        Private:
          description: Whether or not the security role should be private
          type: boolean
        Permissions:
          description: The permissions to include in the role. These must be supplied
            in the format "Area:Permission"
          items:
            type: string
          type: array
        Identities:
          description: The Keyfactor identities to assign to the updated role
          items:
            $ref: '#/components/schemas/Models.Security.Identities.SecurityIdentityIdentifier'
          type: array
      required:
      - Description
      - Id
      - Name
      type: object
    Models.Security.Identities.SecurityIdentityIdentifier:
      description: Model for looking up a security identity
      properties:
        AccountName:
          description: The username of the security identity.
          type: string
        SID:
          description: The SID of the security identity.
          type: string
      type: object
    Models.Security.SecurityRoles.SecurityRoleCreationRequest:
      properties:
        Name:
          description: The name of the security role to create
          type: string
        Description:
          description: The description to be used on the created security role
          type: string
        Enabled:
          description: Whether or not the security role should be enabled
          type: boolean
        Private:
          description: Whether or not the security role should be private
          type: boolean
        Permissions:
          description: The permissions to include in the role. These must be supplied
            in the format "Area:Permission"
          items:
            type: string
          type: array
        Identities:
          description: The Keyfactor identities to assign to the created role
          items:
            $ref: '#/components/schemas/Models.Security.Identities.SecurityIdentityIdentifier'
          type: array
      required:
      - Description
      - Name
      type: object
    KeyfactorApi.Models.SecurityRoles.SecurityRoleCopyRequest:
      properties:
        Name:
          type: string
        Description:
          type: string
      type: object
    Models.SSH.Access.ServerAccessResponse:
      example:
        ServerId: 0
        LogonUsers:
        - Users:
          - Username: Username
            LogonIds:
            - 5
            - 5
            Id: 1
            Key:
              CreationDate: 2000-01-23T04:56:07.000+00:00
              Fingerprint: Fingerprint
              PrivateKey: PrivateKey
              Email: Email
              LogonCount: 1
              KeyType: KeyType
              PublicKey: PublicKey
              Comments:
              - Comments
              - Comments
              StaleDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              KeyLength: 6
          - Username: Username
            LogonIds:
            - 5
            - 5
            Id: 1
            Key:
              CreationDate: 2000-01-23T04:56:07.000+00:00
              Fingerprint: Fingerprint
              PrivateKey: PrivateKey
              Email: Email
              LogonCount: 1
              KeyType: KeyType
              PublicKey: PublicKey
              Comments:
              - Comments
              - Comments
              StaleDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              KeyLength: 6
          LogonName: LogonName
          LogonId: 0
        - Users:
          - Username: Username
            LogonIds:
            - 5
            - 5
            Id: 1
            Key:
              CreationDate: 2000-01-23T04:56:07.000+00:00
              Fingerprint: Fingerprint
              PrivateKey: PrivateKey
              Email: Email
              LogonCount: 1
              KeyType: KeyType
              PublicKey: PublicKey
              Comments:
              - Comments
              - Comments
              StaleDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              KeyLength: 6
          - Username: Username
            LogonIds:
            - 5
            - 5
            Id: 1
            Key:
              CreationDate: 2000-01-23T04:56:07.000+00:00
              Fingerprint: Fingerprint
              PrivateKey: PrivateKey
              Email: Email
              LogonCount: 1
              KeyType: KeyType
              PublicKey: PublicKey
              Comments:
              - Comments
              - Comments
              StaleDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              KeyLength: 6
          LogonName: LogonName
          LogonId: 0
      properties:
        ServerId:
          format: int32
          type: integer
        LogonUsers:
          items:
            $ref: '#/components/schemas/Models.SSH.Access.LogonUserAccessResponse'
          type: array
      type: object
    Models.QueryModels.PagedSSHServerQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.SSH.Servers.ServerUpdateRequest:
      properties:
        Id:
          format: int32
          type: integer
        UnderManagement:
          type: boolean
        Port:
          format: int32
          type: integer
      required:
      - Id
      type: object
    Models.SSH.Servers.ServerCreationRequest:
      properties:
        AgentId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Hostname:
          type: string
        ServerGroupId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        UnderManagement:
          type: boolean
        Port:
          format: int32
          type: integer
      required:
      - AgentId
      - Hostname
      - ServerGroupId
      type: object
    Models.SSH.Access.ServerAccessRequest:
      properties:
        ServerId:
          format: int32
          type: integer
        LogonUsers:
          items:
            $ref: '#/components/schemas/Models.SSH.Access.LogonUserAccessRequest'
          type: array
      required:
      - LogonUsers
      - ServerId
      type: object
    Models.SSH.Access.LogonUserAccessRequest:
      properties:
        LogonName:
          type: string
        Users:
          items:
            type: string
          type: array
      type: object
    Models.SSH.ServerGroups.ServerGroupResponse:
      example:
        GroupName: GroupName
        UnderManagement: true
        Owner:
          Username: Username
          LogonIds:
          - 5
          - 5
          Id: 1
          Key:
            CreationDate: 2000-01-23T04:56:07.000+00:00
            Fingerprint: Fingerprint
            PrivateKey: PrivateKey
            Email: Email
            LogonCount: 1
            KeyType: KeyType
            PublicKey: PublicKey
            Comments:
            - Comments
            - Comments
            StaleDate: 2000-01-23T04:56:07.000+00:00
            Id: 0
            KeyLength: 6
        SyncSchedule:
          Daily:
            Time: 2000-01-23T04:56:07.000+00:00
          Monthly:
            Time: 2000-01-23T04:56:07.000+00:00
            Day: 5
          Weekly:
            Days:
            - 1
            - 1
            Time: 2000-01-23T04:56:07.000+00:00
          Immediate: true
          ExactlyOnce:
            Time: 2000-01-23T04:56:07.000+00:00
          Interval:
            Minutes: 6
        ServerCount: 0
        Id: 00000000-0000-0000-0000-000000000000
      properties:
        Id:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Owner:
          $ref: '#/components/schemas/Models.SSH.Users.SshUserResponse'
        GroupName:
          type: string
        SyncSchedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        UnderManagement:
          type: boolean
        ServerCount:
          format: int32
          type: integer
      type: object
    Models.SSH.Access.ServerGroupAccessResponse:
      example:
        ServerGroupId: 00000000-0000-0000-0000-000000000000
        LogonUsers:
        - Users:
          - Username: Username
            LogonIds:
            - 5
            - 5
            Id: 1
            Key:
              CreationDate: 2000-01-23T04:56:07.000+00:00
              Fingerprint: Fingerprint
              PrivateKey: PrivateKey
              Email: Email
              LogonCount: 1
              KeyType: KeyType
              PublicKey: PublicKey
              Comments:
              - Comments
              - Comments
              StaleDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              KeyLength: 6
          - Username: Username
            LogonIds:
            - 5
            - 5
            Id: 1
            Key:
              CreationDate: 2000-01-23T04:56:07.000+00:00
              Fingerprint: Fingerprint
              PrivateKey: PrivateKey
              Email: Email
              LogonCount: 1
              KeyType: KeyType
              PublicKey: PublicKey
              Comments:
              - Comments
              - Comments
              StaleDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              KeyLength: 6
          LogonName: LogonName
          LogonId: 0
        - Users:
          - Username: Username
            LogonIds:
            - 5
            - 5
            Id: 1
            Key:
              CreationDate: 2000-01-23T04:56:07.000+00:00
              Fingerprint: Fingerprint
              PrivateKey: PrivateKey
              Email: Email
              LogonCount: 1
              KeyType: KeyType
              PublicKey: PublicKey
              Comments:
              - Comments
              - Comments
              StaleDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              KeyLength: 6
          - Username: Username
            LogonIds:
            - 5
            - 5
            Id: 1
            Key:
              CreationDate: 2000-01-23T04:56:07.000+00:00
              Fingerprint: Fingerprint
              PrivateKey: PrivateKey
              Email: Email
              LogonCount: 1
              KeyType: KeyType
              PublicKey: PublicKey
              Comments:
              - Comments
              - Comments
              StaleDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              KeyLength: 6
          LogonName: LogonName
          LogonId: 0
      properties:
        ServerGroupId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        LogonUsers:
          items:
            $ref: '#/components/schemas/Models.SSH.Access.LogonUserAccessResponse'
          type: array
      type: object
    Models.QueryModels.PagedSSHServerGroupQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.SSH.ServerGroups.ServerGroupUpdateRequest:
      properties:
        Id:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        OwnerName:
          type: string
        GroupName:
          type: string
        SyncSchedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        UnderManagement:
          type: boolean
      required:
      - GroupName
      - Id
      - OwnerName
      - UnderManagement
      type: object
    Models.SSH.ServerGroups.ServerGroupCreationRequest:
      properties:
        OwnerName:
          type: string
        GroupName:
          type: string
        SyncSchedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        UnderManagement:
          type: boolean
      required:
      - GroupName
      - OwnerName
      type: object
    Models.SSH.Access.ServerGroupAccessRequest:
      properties:
        ServerGroupId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        LogonUsers:
          items:
            $ref: '#/components/schemas/Models.SSH.Access.LogonUserAccessRequest'
          type: array
      required:
      - LogonUsers
      - ServerGroupId
      type: object
    Models.SSH.ServiceAccounts.ServiceAccountResponse:
      example:
        ServerGroup:
          GroupName: GroupName
          UnderManagement: true
          Owner:
            Username: Username
            LogonIds:
            - 5
            - 5
            Id: 1
            Key:
              CreationDate: 2000-01-23T04:56:07.000+00:00
              Fingerprint: Fingerprint
              PrivateKey: PrivateKey
              Email: Email
              LogonCount: 1
              KeyType: KeyType
              PublicKey: PublicKey
              Comments:
              - Comments
              - Comments
              StaleDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              KeyLength: 6
          SyncSchedule:
            Daily:
              Time: 2000-01-23T04:56:07.000+00:00
            Monthly:
              Time: 2000-01-23T04:56:07.000+00:00
              Day: 5
            Weekly:
              Days:
              - 1
              - 1
              Time: 2000-01-23T04:56:07.000+00:00
            Immediate: true
            ExactlyOnce:
              Time: 2000-01-23T04:56:07.000+00:00
            Interval:
              Minutes: 6
          ServerCount: 0
          Id: 00000000-0000-0000-0000-000000000000
        User:
          Username: Username
          LogonIds:
          - 5
          - 5
          Id: 1
          Key:
            CreationDate: 2000-01-23T04:56:07.000+00:00
            Fingerprint: Fingerprint
            PrivateKey: PrivateKey
            Email: Email
            LogonCount: 1
            KeyType: KeyType
            PublicKey: PublicKey
            Comments:
            - Comments
            - Comments
            StaleDate: 2000-01-23T04:56:07.000+00:00
            Id: 0
            KeyLength: 6
        ClientHostname: ClientHostname
        Id: 0
      properties:
        Id:
          format: int32
          type: integer
        ClientHostname:
          type: string
        ServerGroup:
          $ref: '#/components/schemas/Models.SSH.ServerGroups.ServerGroupResponse'
        User:
          $ref: '#/components/schemas/Models.SSH.Users.SshUserResponse'
      type: object
    Models.QueryModels.PagedSSHServiceAccountQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.SSH.ServiceAccounts.ServiceAccountUpdateRequest:
      properties:
        KeyUpdateRequest:
          $ref: '#/components/schemas/Models.SSH.Keys.KeyUpdateRequest'
        Id:
          format: int32
          type: integer
      required:
      - Id
      - KeyUpdateRequest
      type: object
    Models.SSH.ServiceAccounts.ServiceAccountCreationRequest:
      properties:
        KeyGenerationRequest:
          $ref: '#/components/schemas/Models.SSH.Keys.KeyGenerationRequest'
        User:
          $ref: '#/components/schemas/Models.SSH.ServiceAccounts.ServiceAccountUserCreationRequest'
        ClientHostname:
          type: string
        ServerGroupId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
      required:
      - ClientHostname
      - KeyGenerationRequest
      - ServerGroupId
      - User
      type: object
    Models.SSH.ServiceAccounts.ServiceAccountUserCreationRequest:
      properties:
        Username:
          type: string
        LogonIds:
          items:
            format: int32
            type: integer
          type: array
      required:
      - Username
      type: object
    KeyfactorAPI.Models.SMTP.SMTPResponse:
      example:
        SenderAccount: SenderAccount
        SenderName: SenderName
        RelayAuthenticationType: 1
        Port: 6
        Host: Host
        UseSSL: true
        Id: 0
        RelayUsername: RelayUsername
      properties:
        Host:
          type: string
        Id:
          format: int32
          type: integer
        Port:
          format: int32
          type: integer
        RelayAuthenticationType:
          format: int32
          type: integer
        RelayUsername:
          type: string
        SenderAccount:
          type: string
        SenderName:
          type: string
        UseSSL:
          type: boolean
      type: object
    KeyfactorAPI.Models.SMTP.SMTPRequest:
      properties:
        Host:
          type: string
        Id:
          format: int32
          type: integer
        Port:
          format: int32
          type: integer
        RelayAuthenticationType:
          format: int32
          type: integer
        RelayPassword:
          type: string
        RelayUsername:
          type: string
        SenderAccount:
          type: string
        SenderName:
          type: string
        UseSSL:
          type: boolean
      type: object
    KeyfactorAPI.Models.SMTP.SMTPTestRequest:
      properties:
        Host:
          type: string
        Id:
          format: int32
          type: integer
        Port:
          format: int32
          type: integer
        RelayAuthenticationType:
          format: int32
          type: integer
        RelayPassword:
          type: string
        RelayUsername:
          type: string
        SenderAccount:
          type: string
        SenderName:
          type: string
        TestRecipient:
          type: string
        UseSSL:
          type: boolean
      type: object
    KeyfactorAPI.Models.SMTP.SMTPTestResponse:
      example:
        SenderAccount: SenderAccount
        SenderName: SenderName
        RelayAuthenticationType: 1
        Port: 6
        Host: Host
        UseSSL: true
        Id: 0
        TestRecipient: TestRecipient
        RelayUsername: RelayUsername
      properties:
        Host:
          type: string
        Id:
          format: int32
          type: integer
        Port:
          format: int32
          type: integer
        RelayAuthenticationType:
          format: int32
          type: integer
        RelayUsername:
          type: string
        SenderAccount:
          type: string
        SenderName:
          type: string
        TestRecipient:
          type: string
        UseSSL:
          type: boolean
      type: object
    Models.SSL.ScanJobPart:
      example:
        Status: 6
        ScanJobPartDefinitions:
        - ItemType: 7
          Value: Value
        - ItemType: 7
          Value: Value
        EndTime: 2000-01-23T04:56:07.000+00:00
        StatTotalEndpointCount: 1
        StartTime: 2000-01-23T04:56:07.000+00:00
        StatConnectionRefusedCount: 5
        StatNoCertificateCount: 4
        ScanJobPartId: 00000000-0000-0000-0000-000000000000
        LogicalScanJobId: 00000000-0000-0000-0000-000000000000
        StatNotSslCount: 9
        StatTimedOutDownloadingCount: 2
        StatExceptionDownloadingCount: 7
        StatTimedOutConnectingCount: 5
        EstimatedEndpointCount: 0
        AgentJobId: 00000000-0000-0000-0000-000000000000
        StatBadSslHandshakeCount: 3
        StatCertificateFoundCount: 2
      properties:
        ScanJobPartId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        LogicalScanJobId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        AgentJobId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        EstimatedEndpointCount:
          format: int32
          type: integer
        Status:
          enum:
          - 1
          - 2
          - 3
          format: int32
          type: integer
        StatTotalEndpointCount:
          format: int32
          type: integer
        StatTimedOutConnectingCount:
          format: int32
          type: integer
        StatConnectionRefusedCount:
          format: int32
          type: integer
        StatTimedOutDownloadingCount:
          format: int32
          type: integer
        StatExceptionDownloadingCount:
          format: int32
          type: integer
        StatNotSslCount:
          format: int32
          type: integer
        StatBadSslHandshakeCount:
          format: int32
          type: integer
        StatCertificateFoundCount:
          format: int32
          type: integer
        StatNoCertificateCount:
          format: int32
          type: integer
        ScanJobPartDefinitions:
          items:
            $ref: '#/components/schemas/Models.SSL.ScanJobPartDefinition'
          type: array
        StartTime:
          format: date-time
          type: string
        EndTime:
          format: date-time
          type: string
      type: object
    Models.SSL.ScanJobPartDefinition:
      example:
        ItemType: 7
        Value: Value
      properties:
        ItemType:
          format: int32
          type: integer
        Value:
          type: string
      type: object
    Models.SSL.Endpoint:
      example:
        SNIName: SNIName
        EndpointId: 00000000-0000-0000-0000-000000000000
        Port: 0
        IpAddressBytes: IpAddressBytes
        NetworkId: 00000000-0000-0000-0000-000000000000
        LastHistoryId: 00000000-0000-0000-0000-000000000000
        EnableMonitor: true
        Reviewed: true
      properties:
        EndpointId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        NetworkId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        LastHistoryId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        IpAddressBytes:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        Port:
          format: int32
          type: integer
        SNIName:
          type: string
        EnableMonitor:
          type: boolean
        Reviewed:
          type: boolean
      type: object
    Models.SSL.NetworkDefinition:
      example:
        ItemType: 0
        Value: Value
      properties:
        ItemType:
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          type: integer
        Value:
          type: string
      type: object
    KeyfactorApi.Models.Ssl.NetworkResponse:
      example:
        MonitorTimeoutMs: 2.3021358869347655
        ExpirationAlertDays: 7.061401241503109
        Description: Description
        DiscoverStatus: 1
        GetRobots: true
        DiscoverJobParts: 9
        DiscoverPercentComplete: 0.8008281904610115
        DiscoverLastScanned: 2000-01-23T04:56:07.000+00:00
        Enabled: true
        QuietHours:
        - EndTime: 2000-01-23T04:56:07.000+00:00
          StartTime: 2000-01-23T04:56:07.000+00:00
          EndDay: 4
          StartDay: 2
        - EndTime: 2000-01-23T04:56:07.000+00:00
          StartTime: 2000-01-23T04:56:07.000+00:00
          EndDay: 4
          StartDay: 2
        NetworkId: 00000000-0000-0000-0000-000000000000
        Name: Name
        DiscoverSchedule:
          Daily:
            Time: 2000-01-23T04:56:07.000+00:00
          Monthly:
            Time: 2000-01-23T04:56:07.000+00:00
            Day: 5
          Weekly:
            Days:
            - 1
            - 1
            Time: 2000-01-23T04:56:07.000+00:00
          Immediate: true
          ExactlyOnce:
            Time: 2000-01-23T04:56:07.000+00:00
          Interval:
            Minutes: 6
        AgentPoolName: AgentPoolName
        MonitorPercentComplete: 6.027456183070403
        SslAlertRecipients:
        - SslAlertRecipients
        - SslAlertRecipients
        DiscoverTimeoutMs: 5.637376656633329
        MonitorSchedule:
          Daily:
            Time: 2000-01-23T04:56:07.000+00:00
          Monthly:
            Time: 2000-01-23T04:56:07.000+00:00
            Day: 5
          Weekly:
            Days:
            - 1
            - 1
            Time: 2000-01-23T04:56:07.000+00:00
          Immediate: true
          ExactlyOnce:
            Time: 2000-01-23T04:56:07.000+00:00
          Interval:
            Minutes: 6
        AgentPoolId: 00000000-0000-0000-0000-000000000000
        AutoMonitor: true
        MonitorStatus: 5
        MonitorLastScanned: 2000-01-23T04:56:07.000+00:00
        MonitorJobParts: 3
      properties:
        NetworkId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Name:
          type: string
        AgentPoolName:
          type: string
        AgentPoolId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Description:
          type: string
        Enabled:
          type: boolean
        DiscoverSchedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        MonitorSchedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        DiscoverPercentComplete:
          format: double
          type: number
        MonitorPercentComplete:
          format: double
          type: number
        DiscoverStatus:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          format: int32
          type: integer
        MonitorStatus:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          format: int32
          type: integer
        DiscoverLastScanned:
          format: date-time
          type: string
        MonitorLastScanned:
          format: date-time
          type: string
        SslAlertRecipients:
          items:
            type: string
          type: array
        AutoMonitor:
          type: boolean
        GetRobots:
          type: boolean
        DiscoverTimeoutMs:
          format: double
          type: number
        MonitorTimeoutMs:
          format: double
          type: number
        ExpirationAlertDays:
          format: double
          type: number
        DiscoverJobParts:
          format: int32
          type: integer
        MonitorJobParts:
          format: int32
          type: integer
        QuietHours:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.QuietHourResponse'
          type: array
      type: object
    KeyfactorApi.Models.Ssl.QuietHourResponse:
      example:
        EndTime: 2000-01-23T04:56:07.000+00:00
        StartTime: 2000-01-23T04:56:07.000+00:00
        EndDay: 4
        StartDay: 2
      properties:
        StartDay:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          format: int32
          type: integer
        StartTime:
          format: date-time
          type: string
        EndDay:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          format: int32
          type: integer
        EndTime:
          format: date-time
          type: string
      type: object
    Models.QueryModels.PagedSslResultQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.SSL.SslScanResult:
      example:
        AgentPoolName: AgentPoolName
        SNIName: SNIName
        NetworkName: NetworkName
        ReverseDNS: ReverseDNS
        CertificateCN: CertificateCN
        EndpointId: 00000000-0000-0000-0000-000000000000
        Port: 0
        IpAddress: IpAddress
        CertificateFound: true
        MonitorStatus: true
        Reviewed: true
      properties:
        EndpointId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        ReverseDNS:
          type: string
        SNIName:
          type: string
        IpAddress:
          type: string
        Port:
          format: int32
          type: integer
        CertificateFound:
          type: boolean
        AgentPoolName:
          type: string
        NetworkName:
          type: string
        MonitorStatus:
          type: boolean
        CertificateCN:
          type: string
        Reviewed:
          type: boolean
      type: object
    KeyfactorApi.Models.Ssl.NetworkQueryResponse:
      example:
        MonitorTimeoutMs: 2.3021358869347655
        ExpirationAlertDays: 7.061401241503109
        Description: Description
        DiscoverStatus: 1
        GetRobots: true
        DiscoverJobParts: 9
        DiscoverPercentComplete: 0.8008281904610115
        DiscoverLastScanned: 2000-01-23T04:56:07.000+00:00
        Enabled: true
        QuietHours:
        - EndTime: 2000-01-23T04:56:07.000+00:00
          StartTime: 2000-01-23T04:56:07.000+00:00
          EndDay: 4
          StartDay: 2
        - EndTime: 2000-01-23T04:56:07.000+00:00
          StartTime: 2000-01-23T04:56:07.000+00:00
          EndDay: 4
          StartDay: 2
        NetworkId: 00000000-0000-0000-0000-000000000000
        Name: Name
        DiscoverSchedule:
          Daily:
            Time: 2000-01-23T04:56:07.000+00:00
          Monthly:
            Time: 2000-01-23T04:56:07.000+00:00
            Day: 5
          Weekly:
            Days:
            - 1
            - 1
            Time: 2000-01-23T04:56:07.000+00:00
          Immediate: true
          ExactlyOnce:
            Time: 2000-01-23T04:56:07.000+00:00
          Interval:
            Minutes: 6
        AgentPoolName: AgentPoolName
        MonitorPercentComplete: 6.027456183070403
        SslAlertRecipients:
        - SslAlertRecipients
        - SslAlertRecipients
        DiscoverTimeoutMs: 5.637376656633329
        MonitorSchedule:
          Daily:
            Time: 2000-01-23T04:56:07.000+00:00
          Monthly:
            Time: 2000-01-23T04:56:07.000+00:00
            Day: 5
          Weekly:
            Days:
            - 1
            - 1
            Time: 2000-01-23T04:56:07.000+00:00
          Immediate: true
          ExactlyOnce:
            Time: 2000-01-23T04:56:07.000+00:00
          Interval:
            Minutes: 6
        AgentPoolId: 00000000-0000-0000-0000-000000000000
        AutoMonitor: true
        MonitorStatus: 5
        MonitorLastScanned: 2000-01-23T04:56:07.000+00:00
        MonitorJobParts: 3
      properties:
        NetworkId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Name:
          type: string
        AgentPoolName:
          type: string
        AgentPoolId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Description:
          type: string
        Enabled:
          type: boolean
        DiscoverSchedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        MonitorSchedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        DiscoverPercentComplete:
          format: double
          type: number
        MonitorPercentComplete:
          format: double
          type: number
        DiscoverStatus:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          format: int32
          type: integer
        MonitorStatus:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          format: int32
          type: integer
        DiscoverLastScanned:
          format: date-time
          type: string
        MonitorLastScanned:
          format: date-time
          type: string
        SslAlertRecipients:
          items:
            type: string
          type: array
        AutoMonitor:
          type: boolean
        GetRobots:
          type: boolean
        DiscoverTimeoutMs:
          format: double
          type: number
        MonitorTimeoutMs:
          format: double
          type: number
        ExpirationAlertDays:
          format: double
          type: number
        DiscoverJobParts:
          format: int32
          type: integer
        MonitorJobParts:
          format: int32
          type: integer
        QuietHours:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.QuietHourResponse'
          type: array
      type: object
    KeyfactorApi.Models.Ssl.UpdateNetworkRequest:
      properties:
        NetworkId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Name:
          type: string
        AgentPoolName:
          type: string
        Description:
          type: string
        Enabled:
          type: boolean
        DiscoverSchedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        MonitorSchedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        SslAlertRecipients:
          items:
            type: string
          type: array
        AutoMonitor:
          type: boolean
        GetRobots:
          type: boolean
        DiscoverTimeoutMs:
          format: double
          type: number
        MonitorTimeoutMs:
          format: double
          type: number
        ExpirationAlertDays:
          format: double
          type: number
        QuietHours:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.QuietHourRequest'
          type: array
      required:
      - AgentPoolName
      - Description
      - Name
      - NetworkId
      type: object
    KeyfactorApi.Models.Ssl.QuietHourRequest:
      properties:
        StartDay:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          format: int32
          type: integer
        StartTime:
          format: date-time
          type: string
        EndDay:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          format: int32
          type: integer
        EndTime:
          format: date-time
          type: string
      type: object
    KeyfactorApi.Models.Ssl.CreateNetworkRequest:
      properties:
        Name:
          type: string
        AgentPoolName:
          type: string
        Description:
          type: string
        Enabled:
          type: boolean
        DiscoverSchedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        MonitorSchedule:
          $ref: '#/components/schemas/Keyfactor.Common.Scheduling.KeyfactorSchedule'
        SslAlertRecipients:
          items:
            type: string
          type: array
        AutoMonitor:
          type: boolean
        GetRobots:
          type: boolean
        DiscoverTimeoutMs:
          format: double
          type: number
        MonitorTimeoutMs:
          format: double
          type: number
        ExpirationAlertDays:
          format: double
          type: number
        QuietHours:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Ssl.QuietHourRequest'
          type: array
      required:
      - AgentPoolName
      - Description
      - Name
      type: object
    Models.SSL.EndpointHistoryResponse:
      example:
        Status: 6
        HistoryCertificates:
        - IssuerDN: IssuerDN
          SerialNumber: SerialNumber
          SubjectAltNameElements:
          - Type: 7
            ValueHash: ValueHash
            Value: Value
            Id: 2
          - Type: 7
            ValueHash: ValueHash
            Value: Value
            Id: 2
          Thumbprint: Thumbprint
          SigningAlgorithm: SigningAlgorithm
          IssuedCN: IssuedCN
          IssuedDN: IssuedDN
          Id: 5
          NotBefore: 2000-01-23T04:56:07.000+00:00
          NotAfter: 2000-01-23T04:56:07.000+00:00
        - IssuerDN: IssuerDN
          SerialNumber: SerialNumber
          SubjectAltNameElements:
          - Type: 7
            ValueHash: ValueHash
            Value: Value
            Id: 2
          - Type: 7
            ValueHash: ValueHash
            Value: Value
            Id: 2
          Thumbprint: Thumbprint
          SigningAlgorithm: SigningAlgorithm
          IssuedCN: IssuedCN
          IssuedDN: IssuedDN
          Id: 5
          NotBefore: 2000-01-23T04:56:07.000+00:00
          NotAfter: 2000-01-23T04:56:07.000+00:00
        JobType: 1
        HistoryId: 00000000-0000-0000-0000-000000000000
        ProbeType: 5
        ReverseDNS: ReverseDNS
        EndpointId: 00000000-0000-0000-0000-000000000000
        AuditId: 0
        Timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        HistoryId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        EndpointId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        AuditId:
          format: int64
          type: integer
        Timestamp:
          format: date-time
          type: string
        Status:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          format: int32
          type: integer
        JobType:
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          type: integer
        ProbeType:
          enum:
          - 2
          - 3
          - 4
          - 5
          - 6
          format: int32
          type: integer
        ReverseDNS:
          type: string
        HistoryCertificates:
          items:
            $ref: '#/components/schemas/Models.SSL.EndpointHistoryResponse.CertificateModel'
          type: array
      type: object
    Models.SSL.EndpointHistoryResponse.CertificateModel:
      example:
        IssuerDN: IssuerDN
        SerialNumber: SerialNumber
        SubjectAltNameElements:
        - Type: 7
          ValueHash: ValueHash
          Value: Value
          Id: 2
        - Type: 7
          ValueHash: ValueHash
          Value: Value
          Id: 2
        Thumbprint: Thumbprint
        SigningAlgorithm: SigningAlgorithm
        IssuedCN: IssuedCN
        IssuedDN: IssuedDN
        Id: 5
        NotBefore: 2000-01-23T04:56:07.000+00:00
        NotAfter: 2000-01-23T04:56:07.000+00:00
      properties:
        Id:
          format: int32
          type: integer
        IssuedDN:
          nullable: true
          type: string
        SerialNumber:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        NotBefore:
          format: date-time
          type: string
        NotAfter:
          format: date-time
          type: string
        SigningAlgorithm:
          type: string
        Thumbprint:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        IssuerDN:
          nullable: true
          type: string
        IssuedCN:
          nullable: true
          type: string
        SubjectAltNameElements:
          items:
            $ref: '#/components/schemas/Models.SubjectAlternativeName'
          type: array
      type: object
    Models.SubjectAlternativeName:
      example:
        Type: 7
        ValueHash: ValueHash
        Value: Value
        Id: 2
      properties:
        Id:
          format: int32
          type: integer
        Value:
          type: string
        Type:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 100
          - 101
          - 999
          format: int32
          type: integer
        ValueHash:
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
      type: object
    Models.QueryModels.PagedScanJobPartsQuery:
      properties:
        JobType:
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          type: integer
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.SSL.DisplayScanJobPart:
      example:
        Status: 0
        Agent: Agent
        EndpointCount: 6
        EndTime: 2000-01-23T04:56:07.000+00:00
        StartTime: 2000-01-23T04:56:07.000+00:00
        ScanJobPartId: 00000000-0000-0000-0000-000000000000
      properties:
        ScanJobPartId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Agent:
          type: string
        Status:
          enum:
          - 1
          - 2
          - 3
          format: int32
          type: integer
        StartTime:
          format: date-time
          type: string
        EndTime:
          format: date-time
          type: string
        EndpointCount:
          format: int32
          type: integer
      type: object
    Models.SSL.NetworkRangesRequest:
      properties:
        NetworkId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Ranges:
          items:
            type: string
          type: array
      required:
      - NetworkId
      - Ranges
      type: object
    Models.SSL.EndpointStatusRequest:
      properties:
        Id:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Status:
          type: boolean
      required:
      - Id
      - Status
      type: object
    Models.SSL.ImmediateSslScanRequest:
      properties:
        Discovery:
          type: boolean
        Monitoring:
          type: boolean
      required:
      - Discovery
      - Monitoring
      type: object
    Models.TemplateRetrievalResponse:
      example:
        KeyType: KeyType
        AllowedEnrollmentTypes: 3
        KeyUsage: 1
        RequiresApproval: true
        UseAllowedRequesters: true
        KeyRetentionDays: 1
        DisplayName: DisplayName
        TemplateName: TemplateName
        ForestRoot: ForestRoot
        TemplateDefaults:
        - Value: Value
          SubjectPart: SubjectPart
        - Value: Value
          SubjectPart: SubjectPart
        AllowedRequesters:
        - AllowedRequesters
        - AllowedRequesters
        CommonName: CommonName
        RFCEnforcement: true
        EnrollmentFields:
        - Options:
          - Options
          - Options
          DataType: 5
          Id: 5
          Name: Name
        - Options:
          - Options
          - Options
          DataType: 5
          Id: 5
          Name: Name
        FriendlyName: FriendlyName
        TemplateRegexes:
        - Regex: Regex
          Error: Error
          SubjectPart: SubjectPart
          TemplateId: 2
        - Regex: Regex
          Error: Error
          SubjectPart: SubjectPart
          TemplateId: 2
        Curve: Curve
        Oid: Oid
        KeyArchival: true
        ExtendedKeyUsages:
        - DisplayName: DisplayName
          Id: 1
          Oid: Oid
        - DisplayName: DisplayName
          Id: 1
          Oid: Oid
        TemplatePolicy:
          ECCValidCurves:
          - ECCValidCurves
          - ECCValidCurves
          AllowWildcards: true
          AllowKeyReuse: true
          TemplateId: 4
          RSAValidKeySizes:
          - 7
          - 7
          RFCEnforcement: true
        KeyRetention: 6
        MetadataFields:
        - Validation: Validation
          DefaultValue: DefaultValue
          Message: Message
          MetadataId: 7
          Enrollment: 9
          Id: 2
        - Validation: Validation
          DefaultValue: DefaultValue
          Message: Message
          MetadataId: 7
          Enrollment: 9
          Id: 2
        ConfigurationTenant: ConfigurationTenant
        Id: 0
        KeySize: KeySize
      properties:
        Id:
          format: int32
          type: integer
        CommonName:
          type: string
        TemplateName:
          type: string
        Oid:
          type: string
        KeySize:
          type: string
        KeyType:
          type: string
        ForestRoot:
          readOnly: true
          type: string
        ConfigurationTenant:
          type: string
        FriendlyName:
          type: string
        KeyRetention:
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          type: integer
        KeyRetentionDays:
          format: int32
          type: integer
        KeyArchival:
          type: boolean
        EnrollmentFields:
          items:
            $ref: '#/components/schemas/Models.TemplateRetrievalResponse.TemplateEnrollmentFieldModel'
          type: array
        MetadataFields:
          items:
            $ref: '#/components/schemas/Models.TemplateRetrievalResponse.TemplateMetadataFieldModel'
          type: array
        AllowedEnrollmentTypes:
          enum:
          - 0
          - 1
          - 2
          - 4
          format: int32
          type: integer
        TemplateRegexes:
          items:
            $ref: '#/components/schemas/Models.TemplateRetrievalResponse.TemplateRegexModel'
          type: array
        TemplateDefaults:
          items:
            $ref: '#/components/schemas/Models.TemplateRetrievalResponse.TemplateDefaultModel'
          type: array
        TemplatePolicy:
          $ref: '#/components/schemas/Models.TemplateRetrievalResponse.TemplatePolicyModel'
        UseAllowedRequesters:
          type: boolean
        AllowedRequesters:
          items:
            type: string
          type: array
        DisplayName:
          type: string
        RFCEnforcement:
          type: boolean
        RequiresApproval:
          type: boolean
        KeyUsage:
          format: int32
          type: integer
        ExtendedKeyUsages:
          items:
            $ref: '#/components/schemas/Models.TemplateRetrievalResponse.ExtendedKeyUsageModel'
          type: array
        Curve:
          nullable: true
          type: string
      type: object
    Models.TemplateRetrievalResponse.TemplateEnrollmentFieldModel:
      example:
        Options:
        - Options
        - Options
        DataType: 5
        Id: 5
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Options:
          items:
            type: string
          type: array
        DataType:
          enum:
          - 1
          - 2
          format: int32
          type: integer
      type: object
    Models.TemplateRetrievalResponse.TemplateMetadataFieldModel:
      example:
        Validation: Validation
        DefaultValue: DefaultValue
        Message: Message
        MetadataId: 7
        Enrollment: 9
        Id: 2
      properties:
        Id:
          format: int32
          type: integer
        DefaultValue:
          type: string
        MetadataId:
          format: int32
          type: integer
        Validation:
          type: string
        Enrollment:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        Message:
          type: string
      type: object
    Models.TemplateRetrievalResponse.TemplateRegexModel:
      example:
        Regex: Regex
        Error: Error
        SubjectPart: SubjectPart
        TemplateId: 2
      properties:
        TemplateId:
          format: int32
          type: integer
        SubjectPart:
          type: string
        Regex:
          type: string
        Error:
          type: string
      type: object
    Models.TemplateRetrievalResponse.TemplateDefaultModel:
      example:
        Value: Value
        SubjectPart: SubjectPart
      properties:
        SubjectPart:
          type: string
        Value:
          type: string
      type: object
    Models.TemplateRetrievalResponse.TemplatePolicyModel:
      example:
        ECCValidCurves:
        - ECCValidCurves
        - ECCValidCurves
        AllowWildcards: true
        AllowKeyReuse: true
        TemplateId: 4
        RSAValidKeySizes:
        - 7
        - 7
        RFCEnforcement: true
      properties:
        TemplateId:
          format: int32
          type: integer
        RSAValidKeySizes:
          items:
            format: int32
            type: integer
          type: array
        ECCValidCurves:
          items:
            type: string
          type: array
        AllowKeyReuse:
          type: boolean
        AllowWildcards:
          type: boolean
        RFCEnforcement:
          type: boolean
      type: object
    Models.TemplateRetrievalResponse.ExtendedKeyUsageModel:
      example:
        DisplayName: DisplayName
        Id: 1
        Oid: Oid
      properties:
        Id:
          format: int32
          type: integer
        Oid:
          type: string
        DisplayName:
          type: string
      type: object
    KeyfactorApi.Models.Templates.GlobalTemplateSettingsResponse:
      example:
        TemplateRegexes:
        - Regex: Regex
          Error: Error
          SubjectPart: SubjectPart
        - Regex: Regex
          Error: Error
          SubjectPart: SubjectPart
        TemplateDefaults:
        - Value: Value
          SubjectPart: SubjectPart
        - Value: Value
          SubjectPart: SubjectPart
        TemplatePolicy:
          ECCValidCurves:
          - ECCValidCurves
          - ECCValidCurves
          AllowWildcards: true
          AllowKeyReuse: true
          RSAValidKeySizes:
          - 0
          - 0
          RFCEnforcement: true
      properties:
        TemplateRegexes:
          description: The regular expressions to use for validation during enrollment.
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplateRegexResponse'
          type: array
        TemplateDefaults:
          description: The default values to use during enrollment.
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplateDefaultResponse'
          type: array
        TemplatePolicy:
          $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplatePolicyResponse'
      type: object
    KeyfactorApi.Models.Templates.GlobalTemplateRegexResponse:
      example:
        Regex: Regex
        Error: Error
        SubjectPart: SubjectPart
      properties:
        SubjectPart:
          description: The subject part to apply the regular expression to.
          type: string
        Regex:
          description: The regular expression to apply to the subject part.
          type: string
        Error:
          description: The error message to show when the regex validation fails.
          type: string
      type: object
    KeyfactorApi.Models.Templates.GlobalTemplateDefaultResponse:
      example:
        Value: Value
        SubjectPart: SubjectPart
      properties:
        SubjectPart:
          description: The subject part to apply the default to.
          type: string
        Value:
          description: The value to apply by default.
          type: string
      type: object
    KeyfactorApi.Models.Templates.GlobalTemplatePolicyResponse:
      example:
        ECCValidCurves:
        - ECCValidCurves
        - ECCValidCurves
        AllowWildcards: true
        AllowKeyReuse: true
        RSAValidKeySizes:
        - 0
        - 0
        RFCEnforcement: true
      properties:
        RSAValidKeySizes:
          description: The allowed RSA key sizes.
          items:
            format: int32
            type: integer
          type: array
        ECCValidCurves:
          description: The allowed ECC curves.
          items:
            type: string
          type: array
        AllowKeyReuse:
          description: Whether or not keys can be reused.
          type: boolean
        AllowWildcards:
          description: Whether or not wildcards can be used.
          type: boolean
        RFCEnforcement:
          description: Whether or not RFC 2818 compliance should be enforced.
          type: boolean
      type: object
    KeyfactorApi.Models.Templates.GlobalTemplateSettingsRequest:
      properties:
        TemplateRegexes:
          description: The regular expressions to use for validation during enrollment.
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplateRegexRequest'
          type: array
        TemplateDefaults:
          description: The default values to use during enrollment.
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplateDefaultRequest'
          type: array
        TemplatePolicy:
          $ref: '#/components/schemas/KeyfactorApi.Models.Templates.GlobalTemplatePolicyRequest'
      required:
      - TemplateDefaults
      - TemplatePolicy
      - TemplateRegexes
      type: object
    KeyfactorApi.Models.Templates.GlobalTemplateRegexRequest:
      properties:
        SubjectPart:
          description: The subject part to apply the regular expression to.
          type: string
        Regex:
          description: The regular expression to apply to the subject part.
          type: string
        Error:
          description: The error message to show when the regex validation fails.
          type: string
      required:
      - SubjectPart
      type: object
    KeyfactorApi.Models.Templates.GlobalTemplateDefaultRequest:
      properties:
        SubjectPart:
          description: The subject part to apply the default to.
          type: string
        Value:
          description: The value to apply by default.
          type: string
      required:
      - SubjectPart
      type: object
    KeyfactorApi.Models.Templates.GlobalTemplatePolicyRequest:
      properties:
        RSAValidKeySizes:
          description: The allowed RSA key sizes.
          items:
            format: int32
            type: integer
          type: array
        ECCValidCurves:
          description: The allowed ECC curves.
          items:
            type: string
          type: array
        AllowKeyReuse:
          description: Whether or not keys can be reused.
          type: boolean
        AllowWildcards:
          description: Whether or not wildcards can be used.
          type: boolean
        RFCEnforcement:
          description: Whether or not RFC 2818 compliance should be enforced.
          type: boolean
      required:
      - AllowKeyReuse
      - AllowWildcards
      - ECCValidCurves
      - RFCEnforcement
      - RSAValidKeySizes
      type: object
    KeyfactorApi.Models.Templates.ValidSubjectPartResponse:
      example:
        SubjectPart: SubjectPart
        SubjectPartName: SubjectPartName
      properties:
        SubjectPart:
          type: string
        SubjectPartName:
          type: string
      type: object
    Models.QueryModels.PagedTemplateQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.TemplateCollectionRetrievalResponse:
      example:
        EnrollmentFields:
        - Options:
          - Options
          - Options
          DataType: 5
          Id: 5
          Name: Name
        - Options:
          - Options
          - Options
          DataType: 5
          Id: 5
          Name: Name
        KeyType: KeyType
        FriendlyName: FriendlyName
        AllowedEnrollmentTypes: 2
        TemplateRegexes:
        - Regex: Regex
          Error: Error
          SubjectPart: SubjectPart
          TemplateId: 7
        - Regex: Regex
          Error: Error
          SubjectPart: SubjectPart
          TemplateId: 7
        KeyUsage: 9
        Oid: Oid
        RequiresApproval: true
        KeyArchival: true
        ExtendedKeyUsages:
        - DisplayName: DisplayName
          Id: 3
          Oid: Oid
        - DisplayName: DisplayName
          Id: 3
          Oid: Oid
        UseAllowedRequesters: true
        KeyRetention: 6
        KeyRetentionDays: 1
        ConfigurationTenant: ConfigurationTenant
        DisplayName: DisplayName
        TemplateName: TemplateName
        Id: 0
        ForestRoot: ForestRoot
        KeySize: KeySize
        AllowedRequesters:
        - AllowedRequesters
        - AllowedRequesters
        CommonName: CommonName
      properties:
        Id:
          format: int32
          type: integer
        CommonName:
          type: string
        TemplateName:
          type: string
        Oid:
          type: string
        KeySize:
          type: string
        KeyType:
          type: string
        ForestRoot:
          readOnly: true
          type: string
        ConfigurationTenant:
          type: string
        FriendlyName:
          type: string
        KeyRetention:
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          type: integer
        KeyRetentionDays:
          format: int32
          type: integer
        KeyArchival:
          type: boolean
        EnrollmentFields:
          items:
            $ref: '#/components/schemas/Models.TemplateCollectionRetrievalResponse.TemplateEnrollmentFieldModel'
          type: array
        AllowedEnrollmentTypes:
          enum:
          - 0
          - 1
          - 2
          - 4
          format: int32
          type: integer
        TemplateRegexes:
          items:
            $ref: '#/components/schemas/Models.TemplateCollectionRetrievalResponse.TemplateRegexModel'
          type: array
        UseAllowedRequesters:
          type: boolean
        AllowedRequesters:
          items:
            type: string
          type: array
        DisplayName:
          type: string
        RequiresApproval:
          type: boolean
        KeyUsage:
          format: int32
          type: integer
        ExtendedKeyUsages:
          items:
            $ref: '#/components/schemas/Models.TemplateCollectionRetrievalResponse.ExtendedKeyUsageModel'
          type: array
      type: object
    Models.TemplateCollectionRetrievalResponse.TemplateEnrollmentFieldModel:
      example:
        Options:
        - Options
        - Options
        DataType: 5
        Id: 5
        Name: Name
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Options:
          items:
            type: string
          type: array
        DataType:
          enum:
          - 1
          - 2
          format: int32
          type: integer
      type: object
    Models.TemplateCollectionRetrievalResponse.TemplateRegexModel:
      example:
        Regex: Regex
        Error: Error
        SubjectPart: SubjectPart
        TemplateId: 7
      properties:
        TemplateId:
          format: int32
          type: integer
        SubjectPart:
          type: string
        Regex:
          type: string
        Error:
          type: string
      type: object
    Models.TemplateCollectionRetrievalResponse.ExtendedKeyUsageModel:
      example:
        DisplayName: DisplayName
        Id: 3
        Oid: Oid
      properties:
        Id:
          format: int32
          type: integer
        Oid:
          type: string
        DisplayName:
          type: string
      type: object
    Models.TemplateUpdateRequest:
      properties:
        Id:
          format: int32
          type: integer
        KeySize:
          type: string
        KeyType:
          type: string
        FriendlyName:
          type: string
        KeyRetention:
          enum:
          - 0
          - 1
          - 2
          - 3
          format: int32
          type: integer
        KeyRetentionDays:
          format: int32
          type: integer
        KeyArchival:
          type: boolean
        EnrollmentFields:
          items:
            $ref: '#/components/schemas/Models.TemplateUpdateRequest.TemplateEnrollmentFieldModel'
          type: array
        MetadataFields:
          items:
            $ref: '#/components/schemas/Models.TemplateUpdateRequest.TemplateMetadataFieldModel'
          type: array
        AllowedEnrollmentTypes:
          enum:
          - 0
          - 1
          - 2
          - 4
          format: int32
          type: integer
        TemplateRegexes:
          items:
            $ref: '#/components/schemas/Models.TemplateUpdateRequest.TemplateRegexModel'
          type: array
        TemplateDefaults:
          items:
            $ref: '#/components/schemas/Models.TemplateUpdateRequest.TemplateDefaultModel'
          type: array
        TemplatePolicy:
          $ref: '#/components/schemas/Models.TemplateUpdateRequest.TemplatePolicyModel'
        UseAllowedRequesters:
          type: boolean
        AllowedRequesters:
          items:
            type: string
          type: array
        RequiresApproval:
          type: boolean
        KeyUsage:
          format: int32
          type: integer
      type: object
    Models.TemplateUpdateRequest.TemplateEnrollmentFieldModel:
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Options:
          items:
            type: string
          type: array
        DataType:
          enum:
          - 1
          - 2
          format: int32
          type: integer
      type: object
    Models.TemplateUpdateRequest.TemplateMetadataFieldModel:
      properties:
        Id:
          format: int32
          type: integer
        DefaultValue:
          type: string
        MetadataId:
          format: int32
          type: integer
        Validation:
          type: string
        Enrollment:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
        Message:
          type: string
      type: object
    Models.TemplateUpdateRequest.TemplateRegexModel:
      properties:
        TemplateId:
          format: int32
          type: integer
        SubjectPart:
          type: string
        Regex:
          type: string
        Error:
          type: string
      type: object
    Models.TemplateUpdateRequest.TemplateDefaultModel:
      properties:
        SubjectPart:
          type: string
        Value:
          type: string
      type: object
    Models.TemplateUpdateRequest.TemplatePolicyModel:
      properties:
        TemplateId:
          format: int32
          type: integer
        RSAValidKeySizes:
          items:
            format: int32
            type: integer
          type: array
        ECCValidCurves:
          items:
            type: string
          type: array
        AllowKeyReuse:
          type: boolean
        AllowWildcards:
          type: boolean
        RFCEnforcement:
          type: boolean
      type: object
    KeyfactorApi.Models.ConfigurationTenant.ConfigurationTenantRequest:
      properties:
        ConfigurationTenant:
          type: string
      type: object
    Models.QueryModels.PagedSSHUserQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.SSH.Users.SshUserUpdateRequest:
      properties:
        Id:
          format: int32
          type: integer
        LogonIds:
          items:
            format: int32
            type: integer
          type: array
      required:
      - Id
      type: object
    Models.SSH.Users.SshUserCreationRequest:
      properties:
        Username:
          type: string
        LogonIds:
          items:
            format: int32
            type: integer
          type: array
      required:
      - Username
      type: object
    Models.SSH.Users.SshUserAccessResponse:
      example:
        Username: Username
        IsGroup: true
        Access:
        - Server:
            UnderManagement: true
            GroupName: GroupName
            Owner:
              Username: Username
              LogonIds:
              - 5
              - 5
              Id: 1
              Key:
                CreationDate: 2000-01-23T04:56:07.000+00:00
                Fingerprint: Fingerprint
                PrivateKey: PrivateKey
                Email: Email
                LogonCount: 1
                KeyType: KeyType
                PublicKey: PublicKey
                Comments:
                - Comments
                - Comments
                StaleDate: 2000-01-23T04:56:07.000+00:00
                Id: 0
                KeyLength: 6
            SyncSchedule:
              Daily:
                Time: 2000-01-23T04:56:07.000+00:00
              Monthly:
                Time: 2000-01-23T04:56:07.000+00:00
                Day: 5
              Weekly:
                Days:
                - 1
                - 1
                Time: 2000-01-23T04:56:07.000+00:00
              Immediate: true
              ExactlyOnce:
                Time: 2000-01-23T04:56:07.000+00:00
              Interval:
                Minutes: 6
            Port: 5
            Hostname: Hostname
            ServerGroupId: 00000000-0000-0000-0000-000000000000
            Id: 6
            AgentId: 00000000-0000-0000-0000-000000000000
            Orchestrator: Orchestrator
          Username: Username
          Access:
          - Username: Username
            LogonIds:
            - 5
            - 5
            Id: 1
            Key:
              CreationDate: 2000-01-23T04:56:07.000+00:00
              Fingerprint: Fingerprint
              PrivateKey: PrivateKey
              Email: Email
              LogonCount: 1
              KeyType: KeyType
              PublicKey: PublicKey
              Comments:
              - Comments
              - Comments
              StaleDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              KeyLength: 6
          - Username: Username
            LogonIds:
            - 5
            - 5
            Id: 1
            Key:
              CreationDate: 2000-01-23T04:56:07.000+00:00
              Fingerprint: Fingerprint
              PrivateKey: PrivateKey
              Email: Email
              LogonCount: 1
              KeyType: KeyType
              PublicKey: PublicKey
              Comments:
              - Comments
              - Comments
              StaleDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              KeyLength: 6
          LastLogon: 2000-01-23T04:56:07.000+00:00
          Id: 0
          KeyCount: 2
        - Server:
            UnderManagement: true
            GroupName: GroupName
            Owner:
              Username: Username
              LogonIds:
              - 5
              - 5
              Id: 1
              Key:
                CreationDate: 2000-01-23T04:56:07.000+00:00
                Fingerprint: Fingerprint
                PrivateKey: PrivateKey
                Email: Email
                LogonCount: 1
                KeyType: KeyType
                PublicKey: PublicKey
                Comments:
                - Comments
                - Comments
                StaleDate: 2000-01-23T04:56:07.000+00:00
                Id: 0
                KeyLength: 6
            SyncSchedule:
              Daily:
                Time: 2000-01-23T04:56:07.000+00:00
              Monthly:
                Time: 2000-01-23T04:56:07.000+00:00
                Day: 5
              Weekly:
                Days:
                - 1
                - 1
                Time: 2000-01-23T04:56:07.000+00:00
              Immediate: true
              ExactlyOnce:
                Time: 2000-01-23T04:56:07.000+00:00
              Interval:
                Minutes: 6
            Port: 5
            Hostname: Hostname
            ServerGroupId: 00000000-0000-0000-0000-000000000000
            Id: 6
            AgentId: 00000000-0000-0000-0000-000000000000
            Orchestrator: Orchestrator
          Username: Username
          Access:
          - Username: Username
            LogonIds:
            - 5
            - 5
            Id: 1
            Key:
              CreationDate: 2000-01-23T04:56:07.000+00:00
              Fingerprint: Fingerprint
              PrivateKey: PrivateKey
              Email: Email
              LogonCount: 1
              KeyType: KeyType
              PublicKey: PublicKey
              Comments:
              - Comments
              - Comments
              StaleDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              KeyLength: 6
          - Username: Username
            LogonIds:
            - 5
            - 5
            Id: 1
            Key:
              CreationDate: 2000-01-23T04:56:07.000+00:00
              Fingerprint: Fingerprint
              PrivateKey: PrivateKey
              Email: Email
              LogonCount: 1
              KeyType: KeyType
              PublicKey: PublicKey
              Comments:
              - Comments
              - Comments
              StaleDate: 2000-01-23T04:56:07.000+00:00
              Id: 0
              KeyLength: 6
          LastLogon: 2000-01-23T04:56:07.000+00:00
          Id: 0
          KeyCount: 2
        Id: 0
        Key:
          CreationDate: 2000-01-23T04:56:07.000+00:00
          Fingerprint: Fingerprint
          PrivateKey: PrivateKey
          Email: Email
          LogonCount: 1
          KeyType: KeyType
          PublicKey: PublicKey
          Comments:
          - Comments
          - Comments
          StaleDate: 2000-01-23T04:56:07.000+00:00
          Id: 0
          KeyLength: 6
      properties:
        Id:
          format: int32
          type: integer
        Key:
          $ref: '#/components/schemas/Models.SSH.Keys.KeyResponse'
        Username:
          type: string
        Access:
          items:
            $ref: '#/components/schemas/Models.SSH.Logons.LogonResponse'
          type: array
        IsGroup:
          type: boolean
      type: object
    Models.Workflow.CertificateRequestDetailsModel:
      example:
        CARequestId: CARequestId
        DistinguishedName: DistinguishedName
        Curve: Curve
        Metadata:
          key: Metadata
        DenialComment: DenialComment
        SubmissionDate: 2000-01-23T04:56:07.000+00:00
        KeyLength: KeyLength
        Template: Template
        StateString: StateString
        Requester: Requester
        SANs:
        - SANs
        - SANs
        State: 6
        CertificateAuthority: CertificateAuthority
        Id: 0
        CertStores:
        - EntryName: EntryName
          ClientMachine: ClientMachine
          StorePath: StorePath
        - EntryName: EntryName
          ClientMachine: ClientMachine
          StorePath: StorePath
        CommonName: CommonName
      properties:
        DenialComment:
          type: string
        KeyLength:
          type: string
        SANs:
          items:
            type: string
          type: array
        CertStores:
          items:
            $ref: '#/components/schemas/Models.Workflow.CertificateRequestCertStoreModel'
          type: array
        Curve:
          nullable: true
          type: string
        Id:
          format: int32
          type: integer
        CARequestId:
          type: string
        CommonName:
          type: string
        DistinguishedName:
          type: string
        SubmissionDate:
          format: date-time
          type: string
        CertificateAuthority:
          type: string
        Template:
          type: string
        Requester:
          type: string
        State:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          format: int32
          type: integer
        StateString:
          readOnly: true
          type: string
        Metadata:
          additionalProperties:
            type: string
          type: object
      type: object
    Models.Workflow.CertificateRequestCertStoreModel:
      example:
        EntryName: EntryName
        ClientMachine: ClientMachine
        StorePath: StorePath
      properties:
        EntryName:
          type: string
        ClientMachine:
          type: string
        StorePath:
          type: string
      type: object
    Models.QueryModels.PagedLegacyDeniedRequestQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.Workflow.CertificateRequestModel:
      example:
        StateString: StateString
        Requester: Requester
        CARequestId: CARequestId
        DistinguishedName: DistinguishedName
        State: 6
        Metadata:
          key: Metadata
        CertificateAuthority: CertificateAuthority
        Id: 0
        SubmissionDate: 2000-01-23T04:56:07.000+00:00
        CommonName: CommonName
        Template: Template
      properties:
        Id:
          format: int32
          type: integer
        CARequestId:
          type: string
        CommonName:
          type: string
        DistinguishedName:
          type: string
        SubmissionDate:
          format: date-time
          type: string
        CertificateAuthority:
          type: string
        Template:
          type: string
        Requester:
          type: string
        State:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          format: int32
          type: integer
        StateString:
          readOnly: true
          type: string
        Metadata:
          additionalProperties:
            type: string
          type: object
      type: object
    Models.QueryModels.PagedCertificateRequestQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    Models.Workflow.DenialRequest:
      properties:
        Comment:
          type: string
        CertificateRequestIds:
          items:
            format: int32
            type: integer
          type: array
      type: object
    Models.Workflow.ApproveDenyResult:
      example:
        Successes:
        - Comment: Comment
          CARowId: 0
          CARequestId: CARequestId
          CALogicalName: CALogicalName
          KeyfactorRequestId: 6
          CAHost: CAHost
        - Comment: Comment
          CARowId: 0
          CARequestId: CARequestId
          CALogicalName: CALogicalName
          KeyfactorRequestId: 6
          CAHost: CAHost
        Denials:
        - Comment: Comment
          CARowId: 0
          CARequestId: CARequestId
          CALogicalName: CALogicalName
          KeyfactorRequestId: 6
          CAHost: CAHost
        - Comment: Comment
          CARowId: 0
          CARequestId: CARequestId
          CALogicalName: CALogicalName
          KeyfactorRequestId: 6
          CAHost: CAHost
        Failures:
        - Comment: Comment
          CARowId: 0
          CARequestId: CARequestId
          CALogicalName: CALogicalName
          KeyfactorRequestId: 6
          CAHost: CAHost
        - Comment: Comment
          CARowId: 0
          CARequestId: CARequestId
          CALogicalName: CALogicalName
          KeyfactorRequestId: 6
          CAHost: CAHost
      properties:
        Failures:
          items:
            $ref: '#/components/schemas/Models.Workflow.ProcessedCertificateRequest'
          type: array
        Denials:
          items:
            $ref: '#/components/schemas/Models.Workflow.ProcessedCertificateRequest'
          type: array
        Successes:
          items:
            $ref: '#/components/schemas/Models.Workflow.ProcessedCertificateRequest'
          type: array
      type: object
    Models.Workflow.ProcessedCertificateRequest:
      example:
        Comment: Comment
        CARowId: 0
        CARequestId: CARequestId
        CALogicalName: CALogicalName
        KeyfactorRequestId: 6
        CAHost: CAHost
      properties:
        CARowId:
          format: int32
          readOnly: true
          type: integer
        CARequestId:
          type: string
        CAHost:
          type: string
        CALogicalName:
          type: string
        KeyfactorRequestId:
          format: int32
          type: integer
        Comment:
          type: string
      type: object
    KeyfactorApi.Models.Workflows.AvailableStepResponse:
      example:
        ExtensionName: ExtensionName
        SignalsDefinition:
          key:
            InputParameters:
              key:
                DefaultValue: DefaultValue
                ParameterType: 0
                DependsOn:
                  key: DependsOn
                Required: true
                SupportTokenReplacement: true
                DisplayName: DisplayName
                ControlType: 6
                PotentialValues:
                  key: PotentialValues
        DisplayName: DisplayName
        Outputs:
        - Outputs
        - Outputs
        ConfigurationParametersDefinition:
          key:
            DefaultValue: DefaultValue
            ParameterType: 0
            DependsOn:
              key: DependsOn
            Required: true
            SupportTokenReplacement: true
            DisplayName: DisplayName
            ControlType: 6
            PotentialValues:
              key: PotentialValues
      properties:
        DisplayName:
          description: The display name of the step.
          type: string
        ExtensionName:
          description: The name of the extension.
          type: string
        Outputs:
          description: The possible outputs of the step.
          items:
            type: string
          type: array
        ConfigurationParametersDefinition:
          additionalProperties:
            $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.ParameterDefinitionResponse'
          type: object
        SignalsDefinition:
          additionalProperties:
            $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.SignalDefinitionResponse'
          type: object
      type: object
    KeyfactorApi.Models.Workflows.ParameterDefinitionResponse:
      example:
        DefaultValue: DefaultValue
        ParameterType: 0
        DependsOn:
          key: DependsOn
        Required: true
        SupportTokenReplacement: true
        DisplayName: DisplayName
        ControlType: 6
        PotentialValues:
          key: PotentialValues
      properties:
        DisplayName:
          type: string
        ParameterType:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          format: int32
          type: integer
        Required:
          type: boolean
        DefaultValue:
          type: string
        ControlType:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          format: int32
          type: integer
        PotentialValues:
          additionalProperties:
            type: string
          type: object
        SupportTokenReplacement:
          type: boolean
        DependsOn:
          additionalProperties:
            type: string
          type: object
      type: object
    KeyfactorApi.Models.Workflows.SignalDefinitionResponse:
      example:
        InputParameters:
          key:
            DefaultValue: DefaultValue
            ParameterType: 0
            DependsOn:
              key: DependsOn
            Required: true
            SupportTokenReplacement: true
            DisplayName: DisplayName
            ControlType: 6
            PotentialValues:
              key: PotentialValues
      properties:
        InputParameters:
          additionalProperties:
            $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.ParameterDefinitionResponse'
          type: object
      type: object
    KeyfactorApi.Models.Workflows.DefinitionResponse:
      example:
        Steps:
        - ExtensionName: ExtensionName
          DisplayName: DisplayName
          Outputs:
            key: Outputs
          Enabled: true
          Id: 00000000-0000-0000-0000-000000000000
          Signals:
          - SignalName: SignalName
            RoleIds:
            - 0
            - 0
          - SignalName: SignalName
            RoleIds:
            - 0
            - 0
          ConfigurationParameters:
            key: "{}"
          UniqueName: UniqueName
          Conditions:
          - Value: Value
            Id: 00000000-0000-0000-0000-000000000000
          - Value: Value
            Id: 00000000-0000-0000-0000-000000000000
        - ExtensionName: ExtensionName
          DisplayName: DisplayName
          Outputs:
            key: Outputs
          Enabled: true
          Id: 00000000-0000-0000-0000-000000000000
          Signals:
          - SignalName: SignalName
            RoleIds:
            - 0
            - 0
          - SignalName: SignalName
            RoleIds:
            - 0
            - 0
          ConfigurationParameters:
            key: "{}"
          UniqueName: UniqueName
          Conditions:
          - Value: Value
            Id: 00000000-0000-0000-0000-000000000000
          - Value: Value
            Id: 00000000-0000-0000-0000-000000000000
        DraftVersion: 6
        Description: Description
        KeyDisplayName: KeyDisplayName
        WorkflowType: WorkflowType
        PublishedVersion: 1
        DisplayName: DisplayName
        IsPublished: true
        Id: 00000000-0000-0000-0000-000000000000
        Key: Key
      properties:
        Id:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        DisplayName:
          type: string
        Description:
          type: string
        Key:
          type: string
        KeyDisplayName:
          type: string
        IsPublished:
          type: boolean
        WorkflowType:
          type: string
        Steps:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionStepResponse'
          type: array
        DraftVersion:
          format: int32
          type: integer
        PublishedVersion:
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Workflows.DefinitionStepResponse:
      example:
        ExtensionName: ExtensionName
        DisplayName: DisplayName
        Outputs:
          key: Outputs
        Enabled: true
        Id: 00000000-0000-0000-0000-000000000000
        Signals:
        - SignalName: SignalName
          RoleIds:
          - 0
          - 0
        - SignalName: SignalName
          RoleIds:
          - 0
          - 0
        ConfigurationParameters:
          key: "{}"
        UniqueName: UniqueName
        Conditions:
        - Value: Value
          Id: 00000000-0000-0000-0000-000000000000
        - Value: Value
          Id: 00000000-0000-0000-0000-000000000000
      properties:
        Id:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        DisplayName:
          type: string
        UniqueName:
          type: string
        ExtensionName:
          type: string
        Enabled:
          type: boolean
        ConfigurationParameters:
          additionalProperties:
            properties: {}
            type: object
          type: object
        Signals:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.DefinitionStepSignalResponse'
          type: array
        Conditions:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.ConditionConfigurationResponse'
          type: array
        Outputs:
          additionalProperties:
            type: string
          type: object
      type: object
    KeyfactorApi.Models.Workflows.DefinitionStepSignalResponse:
      example:
        SignalName: SignalName
        RoleIds:
        - 0
        - 0
      properties:
        RoleIds:
          description: The roles that are allowed to send this signal.
          items:
            format: int32
            type: integer
          type: array
        SignalName:
          type: string
      type: object
    KeyfactorApi.Models.Workflows.ConditionConfigurationResponse:
      description: Information about the configuration of a workflow condition.
      example:
        Value: Value
        Id: 00000000-0000-0000-0000-000000000000
      properties:
        Id:
          description: The Id of the condition.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Value:
          description: The value to compare to. This value will be compared to a true
            value.
          type: string
      type: object
    KeyfactorApi.Models.Workflows.DefinitionUpdateRequest:
      example:
        DisplayName: <Updated workflow name>
        Description: <Updated workflow description>
      properties:
        DisplayName:
          type: string
        Description:
          type: string
      type: object
    Models.QueryModels.Workflow.WorkflowDefinitionQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Workflows.DefinitionQueryResponse:
      example:
        DraftVersion: 0
        KeyDisplayName: KeyDisplayName
        WorkflowType: WorkflowType
        PublishedVersion: 6
        DisplayName: DisplayName
        Id: 00000000-0000-0000-0000-000000000000
        Key: Key
      properties:
        Id:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        DisplayName:
          type: string
        Key:
          type: string
        KeyDisplayName:
          type: string
        WorkflowType:
          type: string
        DraftVersion:
          format: int32
          type: integer
        PublishedVersion:
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Workflows.DefinitionCreateRequest:
      example:
        DisplayName: <Workflow name>
        Description: <Workflow description>
        Key: <Numeric Template Id>
        WorkflowType: <Type of workflow>
      properties:
        DisplayName:
          description: Display name of the Definition
          type: string
        Description:
          description: Description of the Definition
          type: string
        Key:
          description: "Key to be used to look up definition when starting a new workflow.\r\
            \nFor enrollment workflowTypes, this should be a template"
          type: string
        WorkflowType:
          description: The Type of Workflow
          type: string
      type: object
    Models.QueryModels.Workflow.WorkflowStepSchemaQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Workflows.AvailableStepQueryResponse:
      example:
        ExtensionName: ExtensionName
        SignalsDefinition:
          key:
            InputParameters:
              key:
                DefaultValue: DefaultValue
                ParameterType: 0
                DependsOn:
                  key: DependsOn
                Required: true
                SupportTokenReplacement: true
                DisplayName: DisplayName
                ControlType: 6
                PotentialValues:
                  key: PotentialValues
        DisplayName: DisplayName
        SupportedWorkflowTypes:
        - SupportedWorkflowTypes
        - SupportedWorkflowTypes
        ConfigurationParametersDefinition:
          key:
            DefaultValue: DefaultValue
            ParameterType: 0
            DependsOn:
              key: DependsOn
            Required: true
            SupportTokenReplacement: true
            DisplayName: DisplayName
            ControlType: 6
            PotentialValues:
              key: PotentialValues
      properties:
        DisplayName:
          description: The display name of the step.
          type: string
        ExtensionName:
          description: The extension name of the step.
          type: string
        SupportedWorkflowTypes:
          description: The workflow types which this step can be a part of.
          items:
            type: string
          type: array
        ConfigurationParametersDefinition:
          additionalProperties:
            $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.ParameterDefinitionResponse'
          type: object
        SignalsDefinition:
          additionalProperties:
            $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.SignalDefinitionResponse'
          type: object
      type: object
    Models.QueryModels.Workflow.WorkflowTypeQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Workflows.WorkflowTypeQueryResponse:
      example:
        KeyType: KeyType
        ContextParameters:
        - ContextParameters
        - ContextParameters
        WorkflowType: WorkflowType
        BuiltInSteps:
        - ExtensionName: ExtensionName
          SignalsDefinition:
            key:
              InputParameters:
                key:
                  DefaultValue: DefaultValue
                  ParameterType: 0
                  DependsOn:
                    key: DependsOn
                  Required: true
                  SupportTokenReplacement: true
                  DisplayName: DisplayName
                  ControlType: 6
                  PotentialValues:
                    key: PotentialValues
          DisplayName: DisplayName
          Outputs:
          - Outputs
          - Outputs
          ConfigurationParametersDefinition:
            key:
              DefaultValue: DefaultValue
              ParameterType: 0
              DependsOn:
                key: DependsOn
              Required: true
              SupportTokenReplacement: true
              DisplayName: DisplayName
              ControlType: 6
              PotentialValues:
                key: PotentialValues
        - ExtensionName: ExtensionName
          SignalsDefinition:
            key:
              InputParameters:
                key:
                  DefaultValue: DefaultValue
                  ParameterType: 0
                  DependsOn:
                    key: DependsOn
                  Required: true
                  SupportTokenReplacement: true
                  DisplayName: DisplayName
                  ControlType: 6
                  PotentialValues:
                    key: PotentialValues
          DisplayName: DisplayName
          Outputs:
          - Outputs
          - Outputs
          ConfigurationParametersDefinition:
            key:
              DefaultValue: DefaultValue
              ParameterType: 0
              DependsOn:
                key: DependsOn
              Required: true
              SupportTokenReplacement: true
              DisplayName: DisplayName
              ControlType: 6
              PotentialValues:
                key: PotentialValues
      properties:
        WorkflowType:
          type: string
        KeyType:
          type: string
        ContextParameters:
          items:
            type: string
          type: array
        BuiltInSteps:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.AvailableStepResponse'
          type: array
      type: object
    KeyfactorApi.Models.Workflows.DefinitionStepRequest:
      example:
      - ExtensionName: NOOPStep
        UniqueName: StartNOOP
        DisplayName: Start-NOOP
        Enabled: true
        Signals: []
        Outputs:
          continue: Example Unique Name
      - ExtensionName: <Extension name>
        UniqueName: <Example Unique Name>
        DisplayName: <Display name of step>
        Enabled: true
        ConfigurationParameters:
          Subject: Subject Value
          Message: Message Value
          CyberArkSecret:
            Parameters:
              Folder: <CyberArk Safe Folder>
              Object: <CyberArk Secret Object>
            Provider: <Keyfactor PAM Provider ID>
          DelineaSecret:
            Parameters:
              SecretId: <Delinea Secret ID>
            Provider: <Keyfactor PAM Provider ID>
        Signals: []
        Outputs:
          continue: EndNOOP
      - ExtensionName: NOOPStep
        UniqueName: EndNOOP
        DisplayName: End-Step
        Enabled: true
        Signals: []
      properties:
        ExtensionName:
          type: string
        UniqueName:
          type: string
        DisplayName:
          type: string
        Enabled:
          type: boolean
        ConfigurationParameters:
          additionalProperties:
            properties: {}
            type: object
          type: object
        Signals:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.SignalConfigurationRequest'
          type: array
        Conditions:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.ConditionConfigurationRequest'
          type: array
        Outputs:
          additionalProperties:
            type: string
          type: object
      type: object
    KeyfactorApi.Models.Workflows.SignalConfigurationRequest:
      properties:
        SignalName:
          description: The name of the signal.
          type: string
        RoleIds:
          description: The roles that are allowed to send the signal.
          items:
            format: int32
            type: integer
          type: array
      type: object
    KeyfactorApi.Models.Workflows.ConditionConfigurationRequest:
      description: Information about the configuration of a workflow condition.
      properties:
        Value:
          description: The value to compare to true when evaluating conditions.
          type: string
      type: object
    KeyfactorApi.Models.Workflows.InstanceResponse:
      example:
        Status: 0
        CurrentStepUniqueName: CurrentStepUniqueName
        Definition:
          Version: 6
          WorkflowType: WorkflowType
          DisplayName: DisplayName
          Id: 00000000-0000-0000-0000-000000000000
        InitialData:
          key: "{}"
        CurrentStateData:
          key: "{}"
        Title: Title
        CurrentStepId: 00000000-0000-0000-0000-000000000000
        StatusMessage: StatusMessage
        LastModified: 2000-01-23T04:56:07.000+00:00
        StartDate: 2000-01-23T04:56:07.000+00:00
        ReferenceId: 1
        CurrentStepDisplayName: CurrentStepDisplayName
        Id: 00000000-0000-0000-0000-000000000000
        Signals:
        - SignalReceived: true
          SignalName: SignalName
          StepSignalId: 00000000-0000-0000-0000-000000000000
        - SignalReceived: true
          SignalName: SignalName
          StepSignalId: 00000000-0000-0000-0000-000000000000
      properties:
        Id:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Status:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          format: int32
          type: integer
        CurrentStepId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        StatusMessage:
          type: string
        Signals:
          items:
            $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.AvailableSignalResponse'
          type: array
        Definition:
          $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.InstanceDefinitionResponse'
        CurrentStepDisplayName:
          type: string
        CurrentStepUniqueName:
          type: string
        Title:
          type: string
        LastModified:
          format: date-time
          type: string
        StartDate:
          format: date-time
          type: string
        InitialData:
          additionalProperties:
            properties: {}
            type: object
          type: object
        CurrentStateData:
          additionalProperties:
            properties: {}
            type: object
          type: object
        ReferenceId:
          format: int64
          type: integer
      type: object
    KeyfactorApi.Models.Workflows.AvailableSignalResponse:
      example:
        SignalReceived: true
        SignalName: SignalName
        StepSignalId: 00000000-0000-0000-0000-000000000000
      properties:
        SignalName:
          description: The name of the signal.
          type: string
        StepSignalId:
          description: The signal Id.
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        SignalReceived:
          description: Whether or not the signal has been received.
          type: boolean
      type: object
    KeyfactorApi.Models.Workflows.InstanceDefinitionResponse:
      example:
        Version: 6
        WorkflowType: WorkflowType
        DisplayName: DisplayName
        Id: 00000000-0000-0000-0000-000000000000
      properties:
        Id:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        DisplayName:
          type: string
        Version:
          format: int32
          type: integer
        WorkflowType:
          type: string
      type: object
    Models.QueryModels.Workflow.WorkflowInstanceQuery:
      properties:
        QueryString:
          description: "Contents of the query (ex: field1 -eq value1 AND field2 -gt\
            \ value2)"
          type: string
        PageReturned:
          description: The current page within the result set to be returned
          format: int32
          type: integer
        ReturnLimit:
          description: Maximum number of records to be returned in a single call
          format: int32
          type: integer
        SortField:
          description: Field by which the results should be sorted (view results via
            Management Portal for sortable columns)
          type: string
        SortAscending:
          description: "Field sort direction [0=ascending, 1=descending]"
          enum:
          - 0
          - 1
          format: int32
          type: integer
      type: object
    KeyfactorApi.Models.Workflows.InstanceQueryResponse:
      example:
        Status: 0
        LastModified: 2000-01-23T04:56:07.000+00:00
        StartDate: 2000-01-23T04:56:07.000+00:00
        CurrentStepUniqueName: CurrentStepUniqueName
        ReferenceId: 6
        CurrentStepDisplayName: CurrentStepDisplayName
        Definition:
          Version: 6
          WorkflowType: WorkflowType
          DisplayName: DisplayName
          Id: 00000000-0000-0000-0000-000000000000
        Title: Title
        Id: 00000000-0000-0000-0000-000000000000
        CurrentStepId: 00000000-0000-0000-0000-000000000000
        StatusMessage: StatusMessage
      properties:
        Id:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        Status:
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          format: int32
          type: integer
        CurrentStepId:
          example: 00000000-0000-0000-0000-000000000000
          format: uuid
          type: string
        StatusMessage:
          type: string
        Definition:
          $ref: '#/components/schemas/KeyfactorApi.Models.Workflows.InstanceDefinitionResponse'
        CurrentStepDisplayName:
          type: string
        CurrentStepUniqueName:
          type: string
        Title:
          type: string
        LastModified:
          format: date-time
          type: string
        StartDate:
          format: date-time
          type: string
        ReferenceId:
          format: int64
          type: integer
      type: object
    KeyfactorApi.Models.Workflows.SignalRequest:
      example:
        SignalKey: <STEP_NAME.SIGNAL_NAME>
        Data:
          Signal: Data
      properties:
        SignalKey:
          description: The signal key. This is expected to be in a format like "STEP_NAME.SIGNAL_NAME"
          type: string
        Data:
          additionalProperties:
            properties: {}
            type: object
          description: Arbitrary data to associate with the signal.
          type: object
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http

